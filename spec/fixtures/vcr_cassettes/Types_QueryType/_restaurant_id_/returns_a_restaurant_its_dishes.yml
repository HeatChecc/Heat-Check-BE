---
http_interactions:
- request:
    method: get
    uri: https://www.yelp.com/menu/noodles-express-denver
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - text/html; charset=UTF-8
      X-B3-Sampled:
      - '0'
      Pragma:
      - no-cache
      Link:
      - https://s3-media0.fl.yelpcdn.com; rel=preconnect
      - https://www.google-analytics.com; rel=preconnect
      X-Node:
      - www_all
      - yelp-main-main--uswest2-84db5f5c56-dpjlx
      Content-Security-Policy:
      - 'report-uri https://www.yelp.com/csp_block?id=3d9f85cfd0faebfc&page=enforced_by_default_directives&policy_hash=4a31667603ab2e38c60aeeb09daa5097&site=www&timestamp=1666800740;
        object-src ''self''; base-uri ''self'' https://*.yelpcdn.com https://*.adsrvr.org
        https://6372968.fls.doubleclick.net; font-src ''self'' data: https:'
      Set-Cookie:
      - bse=a895c8353f1646f589ef1e5fd11702d5; Domain=.yelp.com; Path=/; HttpOnly
      - hl=en_US; Domain=.yelp.com; Max-Age=630720000; Path=/; expires=Tue, 21-Oct-2042
        16:12:20 GMT
      - pid=; Domain=.yelp.com; Max-Age=0; Path=/; expires=Wed, 31-Dec-97 23:59:59
        GMT
      - wdi=1|D90F057CBD85A733|0x1.8d657191b4af1p+30|cac2d35233b0a08a; Domain=.yelp.com;
        Path=/; Max-Age=31536000; Expires=Thu, 26 Oct 2023 16:12:20 GMT; HttpOnly;
        SameSite=Lax
      X-Content-Type-Options:
      - nosniff
      Server:
      - envoy
      X-Zipkin-Span-Id:
      - d5240df1ab12ce8e
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Security-Policy-Report-Only:
      - 'report-uri https://www.yelp.com/csp_report_only?id=3d9f85cfd0faebfc&page=csp_report_frame_directives%2Cfull_site_ssl_csp_report_directives&policy_hash=41d0c45536d2a082f11d1cd0e00fde7f&site=www&timestamp=1666800740;
        frame-ancestors ''self'' https://*.yelp.com; default-src https:; img-src https:
        data: blob:; script-src https: data: ''unsafe-inline'' ''unsafe-eval'' blob:;
        style-src https: ''unsafe-inline'' data:; font-src data: https:; child-src
        https: yelp-webview://* yelp://* data:; object-src ''none''; worker-src blob:
        https:; base-uri ''self''; form-action https:'
      X-Routing-Service:
      - routing-main--uswest2-795c4bc4c5-7qhfr; site=www
      X-Zipkin-Id:
      - c18dbcc8c4187773
      X-Cloudmap:
      - routing_uswest2
      X-Mode:
      - ro
      X-Proxied:
      - 10-69-152-12-uswest2bprod
      X-Extlb:
      - 10-69-152-12-uswest2bprod
      Cache-Control:
      - max-age=0, no-store, private, no-transform
      Accept-Ranges:
      - bytes
      Date:
      - Wed, 26 Oct 2022 16:12:20 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-den8252-DEN
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1666800740.401185,VS0,VE470
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 26 Oct 2022 16:12:20 GMT
- request:
    method: get
    uri: https://api.yelp.com/v3/businesses/Sk89ZllCbWVqA4M_MoJ7Lg
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer <yelp_token>
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Ratelimit-Remaining:
      - '4598'
      Ratelimit-Dailylimit:
      - '5000'
      X-B3-Sampled:
      - '0'
      Server:
      - envoy
      Ratelimit-Resettime:
      - '2022-10-27T00:00:00+00:00'
      X-Routing-Service:
      - routing-main--uswest2-795c4bc4c5-4gdr4; site=public_api_v3
      X-Zipkin-Id:
      - 6fdef96c16ef92a7
      X-Cloudmap:
      - routing_uswest2
      X-Mode:
      - ro
      X-Proxied:
      - 10-69-69-73-uswest2aprod
      X-Extlb:
      - 10-69-69-73-uswest2aprod
      Cache-Control:
      - max-age=0, no-store, private, no-transform
      Accept-Ranges:
      - bytes
      Date:
      - Wed, 26 Oct 2022 17:32:59 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-den8240-DEN
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: '{"id": "Sk89ZllCbWVqA4M_MoJ7Lg", "alias": "noodles-express-denver",
        "name": "Noodles Express", "image_url": "https://s3-media2.fl.yelpcdn.com/bphoto/dgayoTjtDbOqndnV-PRszg/o.jpg",
        "is_claimed": true, "is_closed": false, "url": "https://www.yelp.com/biz/noodles-express-denver?adjust_creative=BcjdOZ9pkVL_4m4EoK-Vvw&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_lookup&utm_source=BcjdOZ9pkVL_4m4EoK-Vvw",
        "phone": "+13037368818", "display_phone": "(303) 736-8818", "review_count":
        108, "categories": [{"alias": "noodles", "title": "Noodles"}, {"alias": "szechuan",
        "title": "Szechuan"}], "rating": 4.5, "location": {"address1": "703 S Colorado
        Blvd", "address2": "", "address3": null, "city": "Denver", "zip_code": "80246",
        "country": "US", "state": "CO", "display_address": ["703 S Colorado Blvd",
        "Denver, CO 80246"], "cross_streets": ""}, "coordinates": {"latitude": 39.70269,
        "longitude": -104.94143}, "photos": ["https://s3-media2.fl.yelpcdn.com/bphoto/dgayoTjtDbOqndnV-PRszg/o.jpg",
        "https://s3-media4.fl.yelpcdn.com/bphoto/gKgTIg2vbkgwW3rPXFlwAQ/o.jpg", "https://s3-media2.fl.yelpcdn.com/bphoto/jmLZnnYEij_IJv8z84ULng/o.jpg"],
        "price": "$$", "hours": [{"open": [{"is_overnight": false, "start": "1100",
        "end": "1500", "day": 2}, {"is_overnight": false, "start": "1600", "end":
        "2030", "day": 2}, {"is_overnight": false, "start": "1100", "end": "1500",
        "day": 3}, {"is_overnight": false, "start": "1600", "end": "2030", "day":
        3}, {"is_overnight": false, "start": "1100", "end": "1500", "day": 4}, {"is_overnight":
        false, "start": "1600", "end": "2030", "day": 4}, {"is_overnight": false,
        "start": "1100", "end": "1500", "day": 5}, {"is_overnight": false, "start":
        "1600", "end": "2030", "day": 5}, {"is_overnight": false, "start": "1100",
        "end": "1500", "day": 6}, {"is_overnight": false, "start": "1600", "end":
        "2030", "day": 6}], "hours_type": "REGULAR", "is_open_now": true}], "transactions":
        ["delivery", "pickup"]}'
  recorded_at: Wed, 26 Oct 2022 17:32:59 GMT
- request:
    method: get
    uri: https://api.yelp.com/v3/businesses/Sk89ZllCbWVqA4M_MoJ7Lg
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer <yelp_token>
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Server:
      - envoy
      Ratelimit-Dailylimit:
      - '5000'
      Ratelimit-Remaining:
      - '4597'
      X-Routing-Service:
      - routing-main--uswest2-795c4bc4c5-nv5pw; site=public_api_v3
      Ratelimit-Resettime:
      - '2022-10-27T00:00:00+00:00'
      X-Zipkin-Id:
      - bba60c28d49ee8cf
      X-B3-Sampled:
      - '0'
      X-Cloudmap:
      - routing_uswest2
      X-Mode:
      - ro
      X-Proxied:
      - 10-69-130-205-uswest2bprod
      X-Extlb:
      - 10-69-130-205-uswest2bprod
      Cache-Control:
      - max-age=0, no-store, private, no-transform
      Accept-Ranges:
      - bytes
      Date:
      - Wed, 26 Oct 2022 17:32:59 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-den8238-DEN
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: '{"id": "Sk89ZllCbWVqA4M_MoJ7Lg", "alias": "noodles-express-denver",
        "name": "Noodles Express", "image_url": "https://s3-media2.fl.yelpcdn.com/bphoto/dgayoTjtDbOqndnV-PRszg/o.jpg",
        "is_claimed": true, "is_closed": false, "url": "https://www.yelp.com/biz/noodles-express-denver?adjust_creative=BcjdOZ9pkVL_4m4EoK-Vvw&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_lookup&utm_source=BcjdOZ9pkVL_4m4EoK-Vvw",
        "phone": "+13037368818", "display_phone": "(303) 736-8818", "review_count":
        108, "categories": [{"alias": "noodles", "title": "Noodles"}, {"alias": "szechuan",
        "title": "Szechuan"}], "rating": 4.5, "location": {"address1": "703 S Colorado
        Blvd", "address2": "", "address3": null, "city": "Denver", "zip_code": "80246",
        "country": "US", "state": "CO", "display_address": ["703 S Colorado Blvd",
        "Denver, CO 80246"], "cross_streets": ""}, "coordinates": {"latitude": 39.70269,
        "longitude": -104.94143}, "photos": ["https://s3-media2.fl.yelpcdn.com/bphoto/dgayoTjtDbOqndnV-PRszg/o.jpg",
        "https://s3-media4.fl.yelpcdn.com/bphoto/gKgTIg2vbkgwW3rPXFlwAQ/o.jpg", "https://s3-media2.fl.yelpcdn.com/bphoto/jmLZnnYEij_IJv8z84ULng/o.jpg"],
        "price": "$$", "hours": [{"open": [{"is_overnight": false, "start": "1100",
        "end": "1500", "day": 2}, {"is_overnight": false, "start": "1600", "end":
        "2030", "day": 2}, {"is_overnight": false, "start": "1100", "end": "1500",
        "day": 3}, {"is_overnight": false, "start": "1600", "end": "2030", "day":
        3}, {"is_overnight": false, "start": "1100", "end": "1500", "day": 4}, {"is_overnight":
        false, "start": "1600", "end": "2030", "day": 4}, {"is_overnight": false,
        "start": "1100", "end": "1500", "day": 5}, {"is_overnight": false, "start":
        "1600", "end": "2030", "day": 5}, {"is_overnight": false, "start": "1100",
        "end": "1500", "day": 6}, {"is_overnight": false, "start": "1600", "end":
        "2030", "day": 6}], "hours_type": "REGULAR", "is_open_now": true}], "transactions":
        ["pickup", "delivery"]}'
  recorded_at: Wed, 26 Oct 2022 17:32:59 GMT
- request:
    method: get
    uri: https://www.yelp.com/menu/noodles-express-denver
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - text/html; charset=UTF-8
      Server:
      - envoy
      X-Content-Type-Options:
      - nosniff
      X-Zipkin-Span-Id:
      - 59b244d701483d27
      Link:
      - https://s3-media0.fl.yelpcdn.com; rel=preconnect
      - https://www.google-analytics.com; rel=preconnect
      Content-Security-Policy-Report-Only:
      - 'report-uri https://www.yelp.com/csp_report_only?id=3b8dea3a13c540b3&page=csp_report_frame_directives%2Cfull_site_ssl_csp_report_directives&policy_hash=41d0c45536d2a082f11d1cd0e00fde7f&site=www&timestamp=1666805579;
        frame-ancestors ''self'' https://*.yelp.com; default-src https:; img-src https:
        data: blob:; script-src https: data: ''unsafe-inline'' ''unsafe-eval'' blob:;
        style-src https: ''unsafe-inline'' data:; font-src data: https:; child-src
        https: yelp-webview://* yelp://* data:; object-src ''none''; worker-src blob:
        https:; base-uri ''self''; form-action https:'
      Pragma:
      - no-cache
      Content-Security-Policy:
      - 'report-uri https://www.yelp.com/csp_block?id=3b8dea3a13c540b3&page=enforced_by_default_directives&policy_hash=4a31667603ab2e38c60aeeb09daa5097&site=www&timestamp=1666805579;
        object-src ''self''; base-uri ''self'' https://*.yelpcdn.com https://*.adsrvr.org
        https://6372968.fls.doubleclick.net; font-src ''self'' data: https:'
      X-Routing-Service:
      - routing-main--uswest2-795c4bc4c5-4vb82; site=www
      X-B3-Sampled:
      - '0'
      X-Zipkin-Id:
      - 2a4ea47406ba9678
      Set-Cookie:
      - bse=4032490b01284cb49eaf6c5a7079ab84; Domain=.yelp.com; Path=/; HttpOnly
      - hl=en_US; Domain=.yelp.com; Max-Age=630720000; Path=/; expires=Tue, 21-Oct-2042
        17:33:00 GMT
      - pid=; Domain=.yelp.com; Max-Age=0; Path=/; expires=Wed, 31-Dec-97 23:59:59
        GMT
      - wdi=1|1355AD338CC88FF8|0x1.8d65bd2e485adp+30|9d2c49e7b3421ecd; Domain=.yelp.com;
        Path=/; Max-Age=31536000; Expires=Thu, 26 Oct 2023 17:33:00 GMT; HttpOnly;
        SameSite=Lax
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Node:
      - www_all
      - yelp-main-main--uswest2-5fc79cfc8-z7hjq
      X-Cloudmap:
      - routing_uswest2
      X-Mode:
      - ro
      X-Proxied:
      - 10-69-152-12-uswest2bprod
      X-Extlb:
      - 10-69-152-12-uswest2bprod
      Cache-Control:
      - max-age=0, no-store, private, no-transform
      Accept-Ranges:
      - bytes
      Date:
      - Wed, 26 Oct 2022 17:33:00 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-den8257-DEN
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1666805580.546567,VS0,VE538
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 26 Oct 2022 17:33:00 GMT
recorded_with: VCR 6.1.0
