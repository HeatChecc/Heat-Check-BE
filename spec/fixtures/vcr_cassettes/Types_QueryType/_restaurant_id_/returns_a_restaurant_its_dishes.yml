---
http_interactions:
- request:
    method: get
    uri: https://api.yelp.com/v3/businesses/Sk89ZllCbWVqA4M_MoJ7Lg
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer <yelp_token>
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      X-Routing-Service:
      - routing-main--uswest2-689dcfd8f7-7dntw; site=public_api_v3
      Ratelimit-Dailylimit:
      - '5000'
      Ratelimit-Remaining:
      - '4859'
      Server:
      - envoy
      X-B3-Sampled:
      - '0'
      X-Zipkin-Id:
      - 9392b3f36bb1f126
      Ratelimit-Resettime:
      - '2022-11-04T00:00:00+00:00'
      X-Cloudmap:
      - routing_uswest2
      X-Mode:
      - ro
      X-Proxied:
      - 10-69-184-36-uswest2bprod
      X-Extlb:
      - 10-69-184-36-uswest2bprod
      Cache-Control:
      - max-age=0, no-store, private, no-transform
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 03 Nov 2022 23:52:13 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-den8266-DEN
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: '{"id": "Sk89ZllCbWVqA4M_MoJ7Lg", "alias": "noodles-express-denver",
        "name": "Noodles Express", "image_url": "https://s3-media2.fl.yelpcdn.com/bphoto/H2PIECHzvbrhVEmK5rWaOg/o.jpg",
        "is_claimed": true, "is_closed": false, "url": "https://www.yelp.com/biz/noodles-express-denver?adjust_creative=BcjdOZ9pkVL_4m4EoK-Vvw&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_lookup&utm_source=BcjdOZ9pkVL_4m4EoK-Vvw",
        "phone": "+13037368818", "display_phone": "(303) 736-8818", "review_count":
        108, "categories": [{"alias": "noodles", "title": "Noodles"}, {"alias": "szechuan",
        "title": "Szechuan"}], "rating": 4.5, "location": {"address1": "703 S Colorado
        Blvd", "address2": "", "address3": null, "city": "Denver", "zip_code": "80246",
        "country": "US", "state": "CO", "display_address": ["703 S Colorado Blvd",
        "Denver, CO 80246"], "cross_streets": ""}, "coordinates": {"latitude": 39.70269,
        "longitude": -104.94143}, "photos": ["https://s3-media2.fl.yelpcdn.com/bphoto/H2PIECHzvbrhVEmK5rWaOg/o.jpg",
        "https://s3-media4.fl.yelpcdn.com/bphoto/M8MMB_a5Y2fZ0paRNngIsw/o.jpg", "https://s3-media2.fl.yelpcdn.com/bphoto/zsV1HXUPLkmAn2W-MYvAww/o.jpg"],
        "price": "$$", "hours": [{"open": [{"is_overnight": false, "start": "1100",
        "end": "1500", "day": 2}, {"is_overnight": false, "start": "1600", "end":
        "2030", "day": 2}, {"is_overnight": false, "start": "1100", "end": "1500",
        "day": 3}, {"is_overnight": false, "start": "1600", "end": "2030", "day":
        3}, {"is_overnight": false, "start": "1100", "end": "1500", "day": 4}, {"is_overnight":
        false, "start": "1600", "end": "2030", "day": 4}, {"is_overnight": false,
        "start": "1100", "end": "1500", "day": 5}, {"is_overnight": false, "start":
        "1600", "end": "2030", "day": 5}, {"is_overnight": false, "start": "1100",
        "end": "1500", "day": 6}, {"is_overnight": false, "start": "1600", "end":
        "2030", "day": 6}], "hours_type": "REGULAR", "is_open_now": true}], "transactions":
        ["pickup", "delivery"]}'
  recorded_at: Thu, 03 Nov 2022 23:52:13 GMT
- request:
    method: get
    uri: https://api.yelp.com/v3/businesses/Sk89ZllCbWVqA4M_MoJ7Lg
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer <yelp_token>
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      X-Zipkin-Id:
      - 3d16ee98b884b367
      X-Routing-Service:
      - routing-main--uswest2-689dcfd8f7-5j76x; site=public_api_v3
      X-B3-Sampled:
      - '0'
      Ratelimit-Dailylimit:
      - '5000'
      Ratelimit-Remaining:
      - '4858'
      Ratelimit-Resettime:
      - '2022-11-04T00:00:00+00:00'
      Server:
      - envoy
      X-Cloudmap:
      - routing_uswest2
      X-Mode:
      - ro
      X-Proxied:
      - 10-69-69-73-uswest2aprod
      X-Extlb:
      - 10-69-69-73-uswest2aprod
      Cache-Control:
      - max-age=0, no-store, private, no-transform
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 03 Nov 2022 23:52:14 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-den8254-DEN
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: '{"id": "Sk89ZllCbWVqA4M_MoJ7Lg", "alias": "noodles-express-denver",
        "name": "Noodles Express", "image_url": "https://s3-media2.fl.yelpcdn.com/bphoto/H2PIECHzvbrhVEmK5rWaOg/o.jpg",
        "is_claimed": true, "is_closed": false, "url": "https://www.yelp.com/biz/noodles-express-denver?adjust_creative=BcjdOZ9pkVL_4m4EoK-Vvw&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_lookup&utm_source=BcjdOZ9pkVL_4m4EoK-Vvw",
        "phone": "+13037368818", "display_phone": "(303) 736-8818", "review_count":
        108, "categories": [{"alias": "noodles", "title": "Noodles"}, {"alias": "szechuan",
        "title": "Szechuan"}], "rating": 4.5, "location": {"address1": "703 S Colorado
        Blvd", "address2": "", "address3": null, "city": "Denver", "zip_code": "80246",
        "country": "US", "state": "CO", "display_address": ["703 S Colorado Blvd",
        "Denver, CO 80246"], "cross_streets": ""}, "coordinates": {"latitude": 39.70269,
        "longitude": -104.94143}, "photos": ["https://s3-media2.fl.yelpcdn.com/bphoto/H2PIECHzvbrhVEmK5rWaOg/o.jpg",
        "https://s3-media4.fl.yelpcdn.com/bphoto/M8MMB_a5Y2fZ0paRNngIsw/o.jpg", "https://s3-media2.fl.yelpcdn.com/bphoto/zsV1HXUPLkmAn2W-MYvAww/o.jpg"],
        "price": "$$", "hours": [{"open": [{"is_overnight": false, "start": "1100",
        "end": "1500", "day": 2}, {"is_overnight": false, "start": "1600", "end":
        "2030", "day": 2}, {"is_overnight": false, "start": "1100", "end": "1500",
        "day": 3}, {"is_overnight": false, "start": "1600", "end": "2030", "day":
        3}, {"is_overnight": false, "start": "1100", "end": "1500", "day": 4}, {"is_overnight":
        false, "start": "1600", "end": "2030", "day": 4}, {"is_overnight": false,
        "start": "1100", "end": "1500", "day": 5}, {"is_overnight": false, "start":
        "1600", "end": "2030", "day": 5}, {"is_overnight": false, "start": "1100",
        "end": "1500", "day": 6}, {"is_overnight": false, "start": "1600", "end":
        "2030", "day": 6}], "hours_type": "REGULAR", "is_open_now": true}], "transactions":
        ["pickup", "delivery"]}'
  recorded_at: Thu, 03 Nov 2022 23:52:14 GMT
- request:
    method: get
    uri: https://www.yelp.com/menu/noodles-express-denver
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - text/html; charset=UTF-8
      X-Node:
      - www_all
      - yelp-main-main--uswest2-79bf74d9f5-d577g
      Link:
      - https://s3-media0.fl.yelpcdn.com; rel=preconnect
      - https://www.google-analytics.com; rel=preconnect
      Pragma:
      - no-cache
      Content-Security-Policy-Report-Only:
      - 'report-uri https://www.yelp.com/csp_report_only?id=a6142b04754c6591&page=csp_report_frame_directives%2Cfull_site_ssl_csp_report_directives&policy_hash=41d0c45536d2a082f11d1cd0e00fde7f&site=www&timestamp=1667519534;
        frame-ancestors ''self'' https://*.yelp.com; default-src https:; img-src https:
        data: blob:; script-src https: data: ''unsafe-inline'' ''unsafe-eval'' blob:;
        style-src https: ''unsafe-inline'' data:; font-src data: https:; child-src
        https: yelp-webview://* yelp://* data:; object-src ''none''; worker-src blob:
        https:; base-uri ''self''; form-action https:'
      Content-Security-Policy:
      - 'report-uri https://www.yelp.com/csp_block?id=a6142b04754c6591&page=enforced_by_default_directives&policy_hash=4a31667603ab2e38c60aeeb09daa5097&site=www&timestamp=1667519534;
        object-src ''self''; base-uri ''self'' https://*.yelpcdn.com https://*.adsrvr.org
        https://6372968.fls.doubleclick.net; font-src ''self'' data: https:'
      Server:
      - envoy
      X-Zipkin-Span-Id:
      - 9faddef19403ec80
      X-Content-Type-Options:
      - nosniff
      X-Zipkin-Id:
      - bf46d9c0a899b425
      X-B3-Sampled:
      - '0'
      X-Routing-Service:
      - routing-main--uswest2-689dcfd8f7-ks8k4; site=www
      Set-Cookie:
      - bse=5f7a9c3f5d644d53b9d4b6d42d201076; Domain=.yelp.com; Path=/; HttpOnly
      - hl=en_US; Domain=.yelp.com; Max-Age=630720000; Path=/; expires=Wed, 29-Oct-2042
        23:52:14 GMT
      - pid=; Domain=.yelp.com; Max-Age=0; Path=/; expires=Wed, 31-Dec-97 23:59:59
        GMT
      - wdi=1|E8A128195B7A9757|0x1.8d9150b8d7058p+30|7fd105e795c850c4; Domain=.yelp.com;
        Path=/; Max-Age=31536000; Expires=Fri, 03 Nov 2023 23:52:14 GMT; HttpOnly;
        SameSite=Lax
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Cloudmap:
      - routing_uswest2
      X-Mode:
      - ro
      X-Proxied:
      - 10-69-69-73-uswest2aprod
      X-Extlb:
      - 10-69-69-73-uswest2aprod
      Cache-Control:
      - max-age=0, no-store, private, no-transform
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 03 Nov 2022 23:52:14 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-den8240-DEN
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1667519534.182042,VS0,VE484
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 03 Nov 2022 23:52:14 GMT
- request:
    method: get
    uri: https://www.yelp.com/menu/noodles-express-denver
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - text/html; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-B3-Sampled:
      - '0'
      Server:
      - envoy
      X-Node:
      - www_all
      - yelp-main-main--uswest2-79bf74d9f5-kj69v
      Content-Security-Policy-Report-Only:
      - 'report-uri https://www.yelp.com/csp_report_only?id=b769837534616576&page=csp_report_frame_directives%2Cfull_site_ssl_csp_report_directives&policy_hash=41d0c45536d2a082f11d1cd0e00fde7f&site=www&timestamp=1667519534;
        frame-ancestors ''self'' https://*.yelp.com; default-src https:; img-src https:
        data: blob:; script-src https: data: ''unsafe-inline'' ''unsafe-eval'' blob:;
        style-src https: ''unsafe-inline'' data:; font-src data: https:; child-src
        https: yelp-webview://* yelp://* data:; object-src ''none''; worker-src blob:
        https:; base-uri ''self''; form-action https:'
      Link:
      - https://s3-media0.fl.yelpcdn.com; rel=preconnect
      - https://www.google-analytics.com; rel=preconnect
      X-Zipkin-Span-Id:
      - 828db179edec0e0f
      Pragma:
      - no-cache
      X-Routing-Service:
      - routing-main--uswest2-689dcfd8f7-vkfjj; site=www
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Set-Cookie:
      - bse=b7888559a2fd418494555954150d75f2; Domain=.yelp.com; Path=/; HttpOnly
      - hl=en_US; Domain=.yelp.com; Max-Age=630720000; Path=/; expires=Wed, 29-Oct-2042
        23:52:15 GMT
      - pid=; Domain=.yelp.com; Max-Age=0; Path=/; expires=Wed, 31-Dec-97 23:59:59
        GMT
      - wdi=1|E3122D1842DEB869|0x1.8d9150bb70e88p+30|1ee9d1fae64aa1c4; Domain=.yelp.com;
        Path=/; Max-Age=31536000; Expires=Fri, 03 Nov 2023 23:52:15 GMT; HttpOnly;
        SameSite=Lax
      Content-Security-Policy:
      - 'report-uri https://www.yelp.com/csp_block?id=b769837534616576&page=enforced_by_default_directives&policy_hash=4a31667603ab2e38c60aeeb09daa5097&site=www&timestamp=1667519534;
        object-src ''self''; base-uri ''self'' https://*.yelpcdn.com https://*.adsrvr.org
        https://6372968.fls.doubleclick.net; font-src ''self'' data: https:'
      X-Zipkin-Id:
      - 15743bbc36b38c5e
      X-Cloudmap:
      - routing_uswest2
      X-Mode:
      - ro
      X-Proxied:
      - 10-69-69-73-uswest2aprod
      X-Extlb:
      - 10-69-69-73-uswest2aprod
      Cache-Control:
      - max-age=0, no-store, private, no-transform
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 03 Nov 2022 23:52:15 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-den8238-DEN
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1667519535.831585,VS0,VE541
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 03 Nov 2022 23:52:15 GMT
recorded_with: VCR 6.1.0
