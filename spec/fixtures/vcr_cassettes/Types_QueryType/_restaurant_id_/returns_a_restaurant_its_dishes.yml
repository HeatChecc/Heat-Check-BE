---
http_interactions:
- request:
    method: get
    uri: https://api.yelp.com/v3/businesses/Sk89ZllCbWVqA4M_MoJ7Lg
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer <yelp_token>
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      X-Routing-Service:
      - routing-main--uswest2-795c4bc4c5-jmkv4; site=public_api_v3
      Server:
      - envoy
      Ratelimit-Dailylimit:
      - '5000'
      X-Zipkin-Id:
      - 5df16d20fb1bfe3a
      Ratelimit-Remaining:
      - '4673'
      X-B3-Sampled:
      - '0'
      Ratelimit-Resettime:
      - '2022-10-27T00:00:00+00:00'
      X-Cloudmap:
      - routing_uswest2
      X-Mode:
      - ro
      X-Proxied:
      - 10-69-126-17-uswest2aprod
      X-Extlb:
      - 10-69-126-17-uswest2aprod
      Cache-Control:
      - max-age=0, no-store, private, no-transform
      Accept-Ranges:
      - bytes
      Date:
      - Wed, 26 Oct 2022 15:11:42 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-den8252-DEN
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: '{"id": "Sk89ZllCbWVqA4M_MoJ7Lg", "alias": "noodles-express-denver",
        "name": "Noodles Express", "image_url": "https://s3-media2.fl.yelpcdn.com/bphoto/dgayoTjtDbOqndnV-PRszg/o.jpg",
        "is_claimed": true, "is_closed": false, "url": "https://www.yelp.com/biz/noodles-express-denver?adjust_creative=BcjdOZ9pkVL_4m4EoK-Vvw&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_lookup&utm_source=BcjdOZ9pkVL_4m4EoK-Vvw",
        "phone": "+13037368818", "display_phone": "(303) 736-8818", "review_count":
        108, "categories": [{"alias": "noodles", "title": "Noodles"}, {"alias": "szechuan",
        "title": "Szechuan"}], "rating": 4.5, "location": {"address1": "703 S Colorado
        Blvd", "address2": "", "address3": null, "city": "Denver", "zip_code": "80246",
        "country": "US", "state": "CO", "display_address": ["703 S Colorado Blvd",
        "Denver, CO 80246"], "cross_streets": ""}, "coordinates": {"latitude": 39.70269,
        "longitude": -104.94143}, "photos": ["https://s3-media2.fl.yelpcdn.com/bphoto/dgayoTjtDbOqndnV-PRszg/o.jpg",
        "https://s3-media4.fl.yelpcdn.com/bphoto/gKgTIg2vbkgwW3rPXFlwAQ/o.jpg", "https://s3-media2.fl.yelpcdn.com/bphoto/jmLZnnYEij_IJv8z84ULng/o.jpg"],
        "price": "$$", "hours": [{"open": [{"is_overnight": false, "start": "1100",
        "end": "1500", "day": 2}, {"is_overnight": false, "start": "1600", "end":
        "2030", "day": 2}, {"is_overnight": false, "start": "1100", "end": "1500",
        "day": 3}, {"is_overnight": false, "start": "1600", "end": "2030", "day":
        3}, {"is_overnight": false, "start": "1100", "end": "1500", "day": 4}, {"is_overnight":
        false, "start": "1600", "end": "2030", "day": 4}, {"is_overnight": false,
        "start": "1100", "end": "1500", "day": 5}, {"is_overnight": false, "start":
        "1600", "end": "2030", "day": 5}, {"is_overnight": false, "start": "1100",
        "end": "1500", "day": 6}, {"is_overnight": false, "start": "1600", "end":
        "2030", "day": 6}], "hours_type": "REGULAR", "is_open_now": false}], "transactions":
        ["delivery", "pickup"]}'
  recorded_at: Wed, 26 Oct 2022 15:11:42 GMT
- request:
    method: get
    uri: https://api.yelp.com/v3/businesses/Sk89ZllCbWVqA4M_MoJ7Lg
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer <yelp_token>
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      X-B3-Sampled:
      - '0'
      Ratelimit-Dailylimit:
      - '5000'
      Ratelimit-Remaining:
      - '4672'
      Server:
      - envoy
      Ratelimit-Resettime:
      - '2022-10-27T00:00:00+00:00'
      X-Zipkin-Id:
      - d01d8e56ff505cf9
      X-Routing-Service:
      - routing-main--uswest2-795c4bc4c5-7vgkv; site=public_api_v3
      X-Cloudmap:
      - routing_uswest2
      X-Mode:
      - ro
      X-Proxied:
      - 10-69-69-73-uswest2aprod
      X-Extlb:
      - 10-69-69-73-uswest2aprod
      Cache-Control:
      - max-age=0, no-store, private, no-transform
      Accept-Ranges:
      - bytes
      Date:
      - Wed, 26 Oct 2022 15:11:43 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-den8254-DEN
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: '{"id": "Sk89ZllCbWVqA4M_MoJ7Lg", "alias": "noodles-express-denver",
        "name": "Noodles Express", "image_url": "https://s3-media2.fl.yelpcdn.com/bphoto/dgayoTjtDbOqndnV-PRszg/o.jpg",
        "is_claimed": true, "is_closed": false, "url": "https://www.yelp.com/biz/noodles-express-denver?adjust_creative=BcjdOZ9pkVL_4m4EoK-Vvw&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_lookup&utm_source=BcjdOZ9pkVL_4m4EoK-Vvw",
        "phone": "+13037368818", "display_phone": "(303) 736-8818", "review_count":
        108, "categories": [{"alias": "noodles", "title": "Noodles"}, {"alias": "szechuan",
        "title": "Szechuan"}], "rating": 4.5, "location": {"address1": "703 S Colorado
        Blvd", "address2": "", "address3": null, "city": "Denver", "zip_code": "80246",
        "country": "US", "state": "CO", "display_address": ["703 S Colorado Blvd",
        "Denver, CO 80246"], "cross_streets": ""}, "coordinates": {"latitude": 39.70269,
        "longitude": -104.94143}, "photos": ["https://s3-media2.fl.yelpcdn.com/bphoto/dgayoTjtDbOqndnV-PRszg/o.jpg",
        "https://s3-media4.fl.yelpcdn.com/bphoto/gKgTIg2vbkgwW3rPXFlwAQ/o.jpg", "https://s3-media2.fl.yelpcdn.com/bphoto/jmLZnnYEij_IJv8z84ULng/o.jpg"],
        "price": "$$", "hours": [{"open": [{"is_overnight": false, "start": "1100",
        "end": "1500", "day": 2}, {"is_overnight": false, "start": "1600", "end":
        "2030", "day": 2}, {"is_overnight": false, "start": "1100", "end": "1500",
        "day": 3}, {"is_overnight": false, "start": "1600", "end": "2030", "day":
        3}, {"is_overnight": false, "start": "1100", "end": "1500", "day": 4}, {"is_overnight":
        false, "start": "1600", "end": "2030", "day": 4}, {"is_overnight": false,
        "start": "1100", "end": "1500", "day": 5}, {"is_overnight": false, "start":
        "1600", "end": "2030", "day": 5}, {"is_overnight": false, "start": "1100",
        "end": "1500", "day": 6}, {"is_overnight": false, "start": "1600", "end":
        "2030", "day": 6}], "hours_type": "REGULAR", "is_open_now": false}], "transactions":
        ["pickup", "delivery"]}'
  recorded_at: Wed, 26 Oct 2022 15:11:43 GMT
- request:
    method: get
    uri: https://www.yelp.com/menu/noodles-express-denver
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - text/html; charset=UTF-8
      X-Zipkin-Id:
      - 339d7c0c1d4e3dbf
      Link:
      - https://s3-media0.fl.yelpcdn.com; rel=preconnect
      - https://www.google-analytics.com; rel=preconnect
      X-Content-Type-Options:
      - nosniff
      X-B3-Sampled:
      - '0'
      X-Routing-Service:
      - routing-main--uswest2-795c4bc4c5-mggk7; site=www
      X-Node:
      - www_all
      - yelp-main-main--uswest2-84db5f5c56-jmqsp
      Pragma:
      - no-cache
      X-Zipkin-Span-Id:
      - 89ccfdd5cb7f173e
      Server:
      - envoy
      Set-Cookie:
      - bse=8e1d88043854486dad9786935de73c30; Domain=.yelp.com; Path=/; HttpOnly
      - hl=en_US; Domain=.yelp.com; Max-Age=630720000; Path=/; expires=Tue, 21-Oct-2042
        15:11:43 GMT
      - pid=; Domain=.yelp.com; Max-Age=0; Path=/; expires=Wed, 31-Dec-97 23:59:59
        GMT
      - wdi=1|265B715BC27C8967|0x1.8d6538bc80dfap+30|59275f8433a772f6; Domain=.yelp.com;
        Path=/; Max-Age=31536000; Expires=Thu, 26 Oct 2023 15:11:43 GMT; HttpOnly;
        SameSite=Lax
      Content-Security-Policy-Report-Only:
      - 'report-uri https://www.yelp.com/csp_report_only?id=f5f2af251c55d721&page=csp_report_frame_directives%2Cfull_site_ssl_csp_report_directives&policy_hash=41d0c45536d2a082f11d1cd0e00fde7f&site=www&timestamp=1666797103;
        frame-ancestors ''self'' https://*.yelp.com; default-src https:; img-src https:
        data: blob:; script-src https: data: ''unsafe-inline'' ''unsafe-eval'' blob:;
        style-src https: ''unsafe-inline'' data:; font-src data: https:; child-src
        https: yelp-webview://* yelp://* data:; object-src ''none''; worker-src blob:
        https:; base-uri ''self''; form-action https:'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Security-Policy:
      - 'report-uri https://www.yelp.com/csp_block?id=f5f2af251c55d721&page=enforced_by_default_directives&policy_hash=4a31667603ab2e38c60aeeb09daa5097&site=www&timestamp=1666797103;
        object-src ''self''; base-uri ''self'' https://*.yelpcdn.com https://*.adsrvr.org
        https://6372968.fls.doubleclick.net; font-src ''self'' data: https:'
      X-Cloudmap:
      - routing_uswest2
      X-Mode:
      - ro
      X-Proxied:
      - 10-69-185-39-uswest2bprod
      X-Extlb:
      - 10-69-185-39-uswest2bprod
      Cache-Control:
      - max-age=0, no-store, private, no-transform
      Accept-Ranges:
      - bytes
      Date:
      - Wed, 26 Oct 2022 15:11:43 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-den8273-DEN
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1666797103.099400,VS0,VE348
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 26 Oct 2022 15:11:43 GMT
- request:
    method: get
    uri: https://www.yelp.com/menu/noodles-express-denver
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - text/html; charset=UTF-8
      Set-Cookie:
      - bse=16e34059dd4546239e1ff8da5cae258f; Domain=.yelp.com; Path=/; HttpOnly
      - hl=en_US; Domain=.yelp.com; Max-Age=630720000; Path=/; expires=Tue, 21-Oct-2042
        15:11:43 GMT
      - pid=; Domain=.yelp.com; Max-Age=0; Path=/; expires=Wed, 31-Dec-97 23:59:59
        GMT
      - wdi=1|A43592CD382F333C|0x1.8d6538be8769fp+30|501284143f6fb4f5; Domain=.yelp.com;
        Path=/; Max-Age=31536000; Expires=Thu, 26 Oct 2023 15:11:44 GMT; HttpOnly;
        SameSite=Lax
      Link:
      - https://s3-media0.fl.yelpcdn.com; rel=preconnect
      - https://www.google-analytics.com; rel=preconnect
      X-Zipkin-Span-Id:
      - 65a4c4354b8018af
      X-Content-Type-Options:
      - nosniff
      X-B3-Sampled:
      - '0'
      X-Routing-Service:
      - routing-main--uswest2-795c4bc4c5-p97gh; site=www
      Content-Security-Policy-Report-Only:
      - 'report-uri https://www.yelp.com/csp_report_only?id=3216489ce1fc0e32&page=csp_report_frame_directives%2Cfull_site_ssl_csp_report_directives&policy_hash=41d0c45536d2a082f11d1cd0e00fde7f&site=www&timestamp=1666797103;
        frame-ancestors ''self'' https://*.yelp.com; default-src https:; img-src https:
        data: blob:; script-src https: data: ''unsafe-inline'' ''unsafe-eval'' blob:;
        style-src https: ''unsafe-inline'' data:; font-src data: https:; child-src
        https: yelp-webview://* yelp://* data:; object-src ''none''; worker-src blob:
        https:; base-uri ''self''; form-action https:'
      Content-Security-Policy:
      - 'report-uri https://www.yelp.com/csp_block?id=3216489ce1fc0e32&page=enforced_by_default_directives&policy_hash=4a31667603ab2e38c60aeeb09daa5097&site=www&timestamp=1666797103;
        object-src ''self''; base-uri ''self'' https://*.yelpcdn.com https://*.adsrvr.org
        https://6372968.fls.doubleclick.net; font-src ''self'' data: https:'
      Pragma:
      - no-cache
      X-Node:
      - www_all
      - yelp-main-main--uswest2-84db5f5c56-5s259
      Server:
      - envoy
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Zipkin-Id:
      - 063dac06c7c16469
      X-Cloudmap:
      - routing_uswest2
      X-Mode:
      - ro
      X-Proxied:
      - 10-69-185-39-uswest2bprod
      X-Extlb:
      - 10-69-185-39-uswest2bprod
      Cache-Control:
      - max-age=0, no-store, private, no-transform
      Accept-Ranges:
      - bytes
      Date:
      - Wed, 26 Oct 2022 15:11:44 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-den8246-DEN
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1666797104.593764,VS0,VE449
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIEhUTUw+Cgo8IS0tW2lmIGx0IElFIDcgXT4gPGh0bWwgeG1sbnM6ZmI9Imh0dHA6Ly93d3cuZmFjZWJvb2suY29tLzIwMDgvZmJtbCIgY2xhc3M9ImllNiBpZSBsdGllOSBsdGllOCBuby1qcyIgbGFuZz0iZW4tVVMiPiA8IVtlbmRpZl0tLT4KPCEtLVtpZiBJRSA3IF0+ICAgIDxodG1sIHhtbG5zOmZiPSJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS8yMDA4L2ZibWwiIGNsYXNzPSJpZTcgaWUgbHRpZTkgbHRpZTggbm8tanMiIGxhbmc9ImVuLVVTIj4gPCFbZW5kaWZdLS0+CjwhLS1baWYgSUUgOCBdPiAgICA8aHRtbCB4bWxuczpmYj0iaHR0cDovL3d3dy5mYWNlYm9vay5jb20vMjAwOC9mYm1sIiBjbGFzcz0iaWU4IGllIGx0aWU5IG5vLWpzIiBsYW5nPSJlbi1VUyI+IDwhW2VuZGlmXS0tPgo8IS0tW2lmIElFIDkgXT4gICAgPGh0bWwgeG1sbnM6ZmI9Imh0dHA6Ly93d3cuZmFjZWJvb2suY29tLzIwMDgvZmJtbCIgY2xhc3M9ImllOSBpZSBuby1qcyIgbGFuZz0iZW4tVVMiPiA8IVtlbmRpZl0tLT4KPCEtLVtpZiAoZ3QgSUUgOSl8IShJRSldPjwhLS0+IDxodG1sIHhtbG5zOmZiPSJodHRwOi8vd3d3LmZhY2Vib29rLmNvbS8yMDA4L2ZibWwiIGNsYXNzPSJuby1qcyIgbGFuZz0iZW4tVVMiPiA8IS0tPCFbZW5kaWZdLS0+CiAgICA8aGVhZD4KICAgICAgICA8c2NyaXB0IG5vbmNlPSIzMjE2NDg5YyI+CiAgICAgICAgICAgIChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIHZhciBtYWluID0gbnVsbDsKCiAgICAgICAgICAgICAgICB2YXIgbWFpbj1mdW5jdGlvbigpe3dpbmRvdy5vbmVycm9yPWZ1bmN0aW9uKGssYSxjLGksZil7dmFyIGo9KGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJodG1sIilbMF0uZ2V0QXR0cmlidXRlKCJ3ZWJkcml2ZXIiKT09PSJ0cnVlInx8bmF2aWdhdG9yLnVzZXJBZ2VudD09PSJzZWxlbml1bSIpO3ZhciBoPWYmJihmLm5hbWU9PT0iU2VydmVyU2lkZVJlbmRlcmluZ0Vycm9yInx8Zi5uYW1lPT09IkNTUkZhbGxiYWNrRXJyb3IiKTtpZihqJiYhaCl7ZG9jdW1lbnQuYm9keS5pbm5lckhUTUw9IjxoMT5KYXZhc2NyaXB0IEVycm9yIERldGVjdGVkPC9oMT4iO3ZhciBnPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpO2cuc2V0QXR0cmlidXRlKCJpZCIsInBhc3RlYmluVHJhY2ViYWNrIik7dmFyIGQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY29kZSIpO3ZhciBlPXttZXNzYWdlOmssc291cmNlOmEsbGluZW5vOmMsY29sbm86aSxlcnJvcjpmfTt2YXIgYj1kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiSlMgRVJST1IgREVURUNURURcbiIrd2luZG93LkpTT04uc3RyaW5naWZ5KGUsbnVsbCwyKSk7CmQuYXBwZW5kQ2hpbGQoYik7Zy5hcHBlbmRDaGlsZChkKTtkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiYm9keSIpWzBdLmFwcGVuZENoaWxkKGcpfX19OwoKICAgICAgICAgICAgICAgIGlmIChtYWluID09PSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgdGhyb3cgJ2ludmFsaWQgaW5saW5lIHNjcmlwdCwgbWlzc2luZyBtYWluIGRlY2xhcmF0aW9uLic7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBtYWluKCk7CiAgICAgICAgICAgIH0pKCk7CiAgICA8L3NjcmlwdD4KCgogICAgICAgICAgICAgICAgICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tIiByZWw9ImRucy1wcmVmZXRjaCI+CiAgICAgICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbSIgcmVsPSJkbnMtcHJlZmV0Y2giPgogICAgICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vd3d3Lmdvb2dsZS1hbmFseXRpY3MuY29tIiByZWw9ImRucy1wcmVmZXRjaCI+CiAgICAgICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tIiByZWw9ImRucy1wcmVmZXRjaCI+CiAgICAgICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly9jb25uZWN0LmZhY2Vib29rLm5ldCIgcmVsPSJkbnMtcHJlZmV0Y2giPgogICAgICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vbWFwcy5nb29nbGVhcGlzLmNvbSIgcmVsPSJkbnMtcHJlZmV0Y2giPgogICAgICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vanMuYWRzcnZyLm9yZyIgcmVsPSJkbnMtcHJlZmV0Y2giPgogICAgICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vc3RhdHMuZy5kb3VibGVjbGljay5uZXQiIHJlbD0iZG5zLXByZWZldGNoIj4KICAgICAgICA8bGluayBocmVmPSJodHRwczovL2lkc3luYy5ybGNkbi5jb20iIHJlbD0iZG5zLXByZWZldGNoIj4KCgogICAgPHNjcmlwdD4gICAgICAgICAgICB3aW5kb3cueVBhZ2VTdGFydCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOwo8L3NjcmlwdD4KCiAgICA8c2NyaXB0PiAgICAgICAgICAgIHZhciBpbml0aWFsVmlzaWJpbGl0eVN0YXRlID0gZG9jdW1lbnQud2Via2l0VmlzaWJpbGl0eVN0YXRlOwoKICAgICAgICAgICAgICAgIHlQZXJmVGltaW5ncyA9IFtdOwoKICAgICAgICAgICAgICAgIHlTaXRSZXBQYXJhbXMgPSB7InVuaXF1ZVJlcXVlc3RJRCI6ICIzMjE2NDg5Y2UxZmMwZTMyIiwgInppcGtpblRyYWNlSUQiOiAiMDYzZGFjMDZjN2MxNjQ2OSIsICJjZlJheUlEIjogbnVsbCwgInl1dl9yZWNvcmQiOiAiLTlmNm1VYlI2eHRKRHpjTEdVaENsV29pRVkwRHRHU21ZOE1XenJIMEZQRHFrUHRERFFTMVRWdk8wOU83dHU5T2l0WG1DVEhFZDhVdVBSRG9wLWpXTEszM3o0VG92UEp2IiwgInNlcnZlclN0YXJ0VGltZSI6IDE2NjY3OTcxMDM2MzcsICJkYXRhY2VudGVyIjogInVzLXdlc3QtMiIsICJzaXRlIjogIm1haW4iLCAiaXNMb2dnZWRJbiI6IGZhbHNlLCAiYWN0aW9uIjogbnVsbCwgInNlcnZsZXQiOiAibWVudSIsICJjbGllbnRJUCI6ICI5Ny4xMjIuMTk3LjE1MSIsICJpc19pbnRlcm5hbF9pcCI6IGZhbHNlLCAiZWRnZVN0YXJ0VGltZSI6IDE2NjY3OTcxMDM1OTM3NjQsICJiM1NhbXBsZWQiOiAiMCIsICJlZGdlc3RhZ2VTdWJkb21haW4iOiAiX2Rpc2FibGVkIiwgImRpc2FibGVCZWFjb24iOiBmYWxzZX07CiAgICAgICAgICAgICAgICB3aW5kb3cueVNpdFJlcFBhcmFtc1snaW5pdGlhbFZpc2liaWxpdHlTdGF0ZSddID0gaW5pdGlhbFZpc2liaWxpdHlTdGF0ZTsKICAgICAgICAgICAgICAgIHdpbmRvdy55U2l0UmVwUGFyYW1zWydzZW9Db2hvcnRzJ10gPSBudWxsOwoKICAgICAgICAgICAgICAgICAgICB2YXIgc3RhcnQgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsKICAgICAgICAgICAgICAgICAgICB5UGVyZlRpbWluZ3MucHVzaChbImhlYWQ6c3RhcnQiLCBzdGFydF0pOwoKICAgICAgICAgICAgICAgICAgICAgICAgIWZ1bmN0aW9uKG4sZSl7dmFyIHQsbyxpLGM9W10sZj17cGFzc2l2ZTohMCxjYXB0dXJlOiEwfSxyPW5ldyBEYXRlLGE9InBvaW50ZXJ1cCIsdT0icG9pbnRlcmNhbmNlbCI7ZnVuY3Rpb24gcChuLGMpe3R8fCh0PWMsbz1uLGk9bmV3IERhdGUsdyhlKSxzKCkpfWZ1bmN0aW9uIHMoKXtvPj0wJiZvPGktciYmKGMuZm9yRWFjaChmdW5jdGlvbihuKXtuKG8sdCl9KSxjPVtdKX1mdW5jdGlvbiBsKHQpe2lmKHQuY2FuY2VsYWJsZSl7dmFyIG89KHQudGltZVN0YW1wPjFlMTI/bmV3IERhdGU6cGVyZm9ybWFuY2Uubm93KCkpLXQudGltZVN0YW1wOyJwb2ludGVyZG93biI9PXQudHlwZT9mdW5jdGlvbih0LG8pe2Z1bmN0aW9uIGkoKXtwKHQsbykscigpfWZ1bmN0aW9uIGMoKXtyKCl9ZnVuY3Rpb24gcigpe2UoYSxpLGYpLGUodSxjLGYpfW4oYSxpLGYpLG4odSxjLGYpfShvLHQpOnAobyx0KX19ZnVuY3Rpb24gdyhuKXtbImNsaWNrIiwibW91c2Vkb3duIiwia2V5ZG93biIsInRvdWNoc3RhcnQiLCJwb2ludGVyZG93biJdLmZvckVhY2goZnVuY3Rpb24oZSl7bihlLGwsZil9KX13KG4pLHNlbGYucGVyZk1ldHJpY3M9c2VsZi5wZXJmTWV0cmljc3x8e30sc2VsZi5wZXJmTWV0cmljcy5vbkZpcnN0SW5wdXREZWxheT1mdW5jdGlvbihuKXtjLnB1c2gobikscygpfX0oYWRkRXZlbnRMaXN0ZW5lcixyZW1vdmVFdmVudExpc3RlbmVyKTsKCiAgICAgICAgICAgIChmdW5jdGlvbihIKXtILmNsYXNzTmFtZT1ILmNsYXNzTmFtZS5yZXBsYWNlKC9cYm5vLWpzXGIvLCdqcycpO30pKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCk7Cjwvc2NyaXB0PgoKICAgIDxzY3JpcHQ+ICAgICAgICAgICAgICAgIHBhZ2VTcGVlZEN1c3RvbVRpbWVzdGFtcHMgPSB7fTsKPC9zY3JpcHQ+CgogICAgICAgICAgICA8c2NyaXB0PiAgICAgICAgICAgIChmdW5jdGlvbihpLHMsbyxnLHIsYSxtKXtpWydHb29nbGVBbmFseXRpY3NPYmplY3QnXT1yO2lbcl09aVtyXXx8ZnVuY3Rpb24oKXsoaVtyXS5xPWlbcl0ucXx8W10pLnB1c2goYXJndW1lbnRzKX0saVtyXS5sPTEqbmV3IERhdGUoKTthPXMuY3JlYXRlRWxlbWVudChvKSxtPXMuZ2V0RWxlbWVudHNCeVRhZ05hbWUobylbMF07YS5hc3luYz0xO2Euc3JjPWc7bS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLG0pfSkod2luZG93LGRvY3VtZW50LCdzY3JpcHQnLCcvL3d3dy5nb29nbGUtYW5hbHl0aWNzLmNvbS9hbmFseXRpY3MuanMnLCdnYScpOwo8L3NjcmlwdD4KCgoKICAgICAgICA8c2NyaXB0PgogICAgICAgICAgICAoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICB2YXIgbWFpbiA9IG51bGw7CgogICAgICAgICAgICAgICAgIWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUobil7aWYoaVtuXSlyZXR1cm4gaVtuXS5leHBvcnRzO3ZhciByPWlbbl09e2k6bixsOiExLGV4cG9ydHM6e319O3JldHVybiB0W25dLmNhbGwoci5leHBvcnRzLHIsci5leHBvcnRzLGUpLHIubD0hMCxyLmV4cG9ydHN9dmFyIGk9e307ZS5tPXQsZS5jPWksZS5kPWZ1bmN0aW9uKHQsaSxuKXtlLm8odCxpKXx8T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsaSx7Y29uZmlndXJhYmxlOiExLGVudW1lcmFibGU6ITAsZ2V0Om59KX0sZS5uPWZ1bmN0aW9uKHQpe3ZhciBpPXQmJnQuX19lc01vZHVsZT9mdW5jdGlvbigpe3JldHVybiB0LmRlZmF1bHR9OmZ1bmN0aW9uKCl7cmV0dXJuIHR9O3JldHVybiBlLmQoaSwiYSIsaSksaX0sZS5vPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpfSxlLnA9IiIsZShlLnM9OSl9KFtmdW5jdGlvbih0LGUsaSl7InVzZSBzdHJpY3QiO2kuZChlLCJjIixmdW5jdGlvbigpe3JldHVybiByfSksaS5kKGUsImIiLGZ1bmN0aW9uKCl7cmV0dXJuIHN9KSxpLmQoZSwiYSIsZnVuY3Rpb24oKXtyZXR1cm4gb30pO3ZhciBuPWkoNSkscj0iZ2xvYmFsIixzPSJiaXoiLG89ImJpel9ndGFnIixhPVtyLCJtIiwid3d3IixzLCJ3ZWJ2aWV3IiwiYXBpIiwiYWRtaW4iLCJlcnJvcl9wYWdlcyIsb10sYz1mdW5jdGlvbih0LGUpe2lmKE9iamVjdChuLmEpKGEsZSk+PTApcmV0dXJuW2UsdF0uam9pbigiLiIpO3Rocm93IG5ldyBFcnJvcigiZ29vZ2xlIGFuYWx5dGljcyBhdHRlbXB0ZWQgdG8gc2V0ICIrdCsiIHRvIGFuIHVucmVjb2duaXplZCB0cmFja2VyIGFsaWFzOiAiK2UpfTtlLmQ9Y30sZnVuY3Rpb24odCxlLGkpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKHQpe2Zvcih2YXIgZT0xO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspe3ZhciBpPW51bGwhPWFyZ3VtZW50c1tlXT9hcmd1bWVudHNbZV06e30sbj1PYmplY3Qua2V5cyhpKTsiZnVuY3Rpb24iPT10eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyYmKG49bi5jb25jYXQoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhpKS5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaSx0KS5lbnVtZXJhYmxlfSkpKSxuLmZvckVhY2goZnVuY3Rpb24oZSl7cih0LGUsaVtlXSl9KX1yZXR1cm4gdH1mdW5jdGlvbiByKHQsZSxpKXtyZXR1cm4gZSBpbiB0P09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LGUse3ZhbHVlOmksZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KTp0W2VdPWksdH12YXIgcz1pKDIpLG89aS5uKHMpLGE9aSgzKSxjPWkoNCksdT1pKDApLGY9aSg2KTtPYmplY3Qua2V5c3x8by5hLnNoaW0oKSxPYmplY3QuZW50cmllc3x8KE9iamVjdC5lbnRyaWVzPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1PYmplY3Qua2V5cyh0KSxpPW5ldyBBcnJheShlLmxlbmd0aCksbj0wO248ZS5sZW5ndGg7bis9MSlpW25dPVtlW25dLHRbZVtuXV1dO3JldHVybiBpfSk7dmFyIGw9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3IodGhpcywiY2xpZW50SUQiLHZvaWQgMCkscih0aGlzLCJkaW1lbnNpb25zIix2b2lkIDApLHIodGhpcywiZG9tYWluIix2b2lkIDApLHIodGhpcywiZnJpZW5kbHlNYXAiLHZvaWQgMCkscih0aGlzLCJqc0RpbWVuc2lvbnMiLHZvaWQgMCkscih0aGlzLCJtZXRyaWNzIix2b2lkIDApLHIodGhpcywidGVtcG9yYXJ5RGltZW5zaW9ucyIsdm9pZCAwKSxyKHRoaXMsInRlbXBvcmFyeU1ldHJpY3MiLHZvaWQgMCkscih0aGlzLCJ0cmFja2VycyIsdm9pZCAwKSxyKHRoaXMsInVzZXJJRCIsdm9pZCAwKSxyKHRoaXMsImVuYWJsZUhpZ2hWb2x1bWVFdmVudHMiLHZvaWQgMCksd2luZG93LmdhfHwod2luZG93LmdhPWZ1bmN0aW9uKCl7fSksd2luZG93Lmd0YWd8fCh3aW5kb3cuZ3RhZz1mdW5jdGlvbigpe30pLHRoaXMucmVsb2FkKHQpfXZhciBlPXQucHJvdG90eXBlO3JldHVybiBlLnNldHVwVHJhY2tlcnM9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuZnJpZW5kbHlNYXA9e30sdGhpcy50ZW1wb3JhcnlEaW1lbnNpb25zPXt9LHRoaXMudGVtcG9yYXJ5TWV0cmljcz17fSxPYmplY3QuZW50cmllcyh0aGlzLnRyYWNrZXJzKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciBpPWVbMF0sbj1lWzFdO3Quc2V0dXBUcmFja2VyKFN0cmluZyhpKSxTdHJpbmcobikpfSl9LGUuc2V0dXBUcmFja2VyPWZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcyxyPW4oe2Nvb2tpZURvbWFpbjp0aGlzLmRvbWFpbixuYW1lOnQsY2xpZW50SWQ6dGhpcy5jbGllbnRJRH0sdGhpcy51c2VySUQ/e3VzZXJJZDp0aGlzLnVzZXJJRH06e30pO3dpbmRvdy5nYSgiY3JlYXRlIixlLHIpLHRoaXMuZnJpZW5kbHlNYXBbdF09e30sdGhpcy50ZW1wb3JhcnlEaW1lbnNpb25zW3RdPXt9LHRoaXMudGVtcG9yYXJ5TWV0cmljc1t0XT17fSx0aGlzLmFkZERpbWVuc2lvbnNUb0ZyaWVuZGx5TWFwKHQsdGhpcy5kaW1lbnNpb25zKSx0aGlzLmFkZERpbWVuc2lvbnNUb0ZyaWVuZGx5TWFwKHQsdGhpcy5qc0RpbWVuc2lvbnMpLHRoaXMuZGltZW5zaW9uc1t0XSYmT2JqZWN0LmtleXModGhpcy5kaW1lbnNpb25zW3RdKS5mb3JFYWNoKGZ1bmN0aW9uKGUpe2kuc2V0RGltZW5zaW9uKFN0cmluZyhlKSxpLmRpbWVuc2lvbnNbdF1bZV1bMV0pfSksdGhpcy5tZXRyaWNzW3RdJiZPYmplY3Qua2V5cyh0aGlzLm1ldHJpY3NbdF0pLmZvckVhY2goZnVuY3Rpb24oZSl7aS5zZXRNZXRyaWMoaS5tZXRyaWNzW3RdW2VdWzBdLGkubWV0cmljc1t0XVtlXVsxXSx0KX0pLHdpbmRvdy5nYShPYmplY3QodS5kKSgic2V0Iix0KSwiYW5vbnltaXplSXAiLCEwKX0sZS5hZGREaW1lbnNpb25zVG9GcmllbmRseU1hcD1mdW5jdGlvbih0LGUpe3ZhciBpPXRoaXM7ZSYmZVt0XSYmT2JqZWN0LmtleXMoZVt0XSkuZm9yRWFjaChmdW5jdGlvbihuKXtpLmZyaWVuZGx5TWFwW3RdW25dPWVbdF1bbl1bMF19KX0sZS5maXJlUGFnZXZpZXdzPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7T2JqZWN0LmtleXModGhpcy50cmFja2VycykuZm9yRWFjaChmdW5jdGlvbihpKXtlLmZpcmVQYWdldmlldyhTdHJpbmcoaSksdCl9KX0sZS5maXJlUGFnZXZpZXdzV2l0aEdsb2JhbFRyYWNrZXJTYW1wbGVkPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7T2JqZWN0LmtleXModGhpcy50cmFja2VycykuZm9yRWFjaChmdW5jdGlvbihpKXsoaSE9PXUuY3x8ZS5lbmFibGVIaWdoVm9sdW1lRXZlbnRzKSYmZS5maXJlUGFnZXZpZXcoU3RyaW5nKGkpLHQpfSl9LGUuZmlyZVBhZ2V2aWV3PWZ1bmN0aW9uKHQsZSl7aWYodD09PXUuYSl7dmFyIGk9dGhpcy50cmFja2Vyc1t0XSxyPW4oe30sdGhpcy5kaW1lbnNpb25zW3RdLHRoaXMuanNEaW1lbnNpb25zW3RdKSxzPU9iamVjdC5rZXlzKHIpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gclt0XX0pLnJlZHVjZShmdW5jdGlvbih0LGUpe3ZhciBpLHI9ZVswXSxzPWVbMV07cmV0dXJuIG4oe30sdCwoaT17fSxpWyJkaW1lbnNpb24iK3JdPW51bGw9PT1zP3M6cy50b1N0cmluZygpLGkpKX0se30pLG89dGhpcy5tZXRyaWNzW3RdfHx7fSxhPU9iamVjdC5rZXlzKG8pLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gb1t0XX0pLnJlZHVjZShmdW5jdGlvbih0LGUpe3ZhciBpLHI9ZVswXSxzPWVbMV07cmV0dXJuIG4oe30sdCwoaT17fSxpWyJtZXRyaWMiK3JdPXMsaSkpfSx7fSk7d2luZG93Lmd0YWcoImV2ZW50IiwicGFnZV92aWV3IixuKHtzZW5kX3RvOmksYW5vbnltaXplX2lwOiEwLGNvb2tpZV9kb21haW46dGhpcy5kb21haW4sY2xpZW50X2lkOnRoaXMuY2xpZW50SUR9LHMsYSx0aGlzLnVzZXJJRD97dXNlcl9pZDp0aGlzLnVzZXJJRH06e30sZT97cGFnZV9wYXRoOmV9Ont9KSl9ZWxzZSBlJiZ3aW5kb3cuZ2EoT2JqZWN0KHUuZCkoInNldCIsdCksInBhZ2UiLGUpLHdpbmRvdy5nYShPYmplY3QodS5kKSgic2VuZCIsdCksInBhZ2V2aWV3Iil9LGUuc2V0RGltZW5zaW9uT25lRXZlbnQ9ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzO09iamVjdC5rZXlzKHRoaXMuZnJpZW5kbHlNYXApLmZvckVhY2goZnVuY3Rpb24obil7dmFyIHI9aS5mcmllbmRseU1hcFtuXVt0XTt2b2lkIDAhPT1yJiZudWxsIT09ZSYmKGkudGVtcG9yYXJ5RGltZW5zaW9uc1tuXVsiZGltZW5zaW9uIityXT1lLnRvU3RyaW5nKCkpfSl9LGUuc2V0RGltZW5zaW9uPWZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcztPYmplY3Qua2V5cyh0aGlzLmZyaWVuZGx5TWFwKS5mb3JFYWNoKGZ1bmN0aW9uKG4pe3ZhciByPWkuZnJpZW5kbHlNYXBbbl1bdF07dm9pZCAwIT09ciYmbnVsbCE9PWUmJndpbmRvdy5nYShPYmplY3QodS5kKSgic2V0IixuKSwiZGltZW5zaW9uIityLGUudG9TdHJpbmcoKSl9KX0sZS5zZXREaW1lbnNpb25zPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7T2JqZWN0LmtleXModCkuZm9yRWFjaChmdW5jdGlvbihpKXtlLnNldERpbWVuc2lvbihpLHRbaV0pfSl9LGUuc2V0TWV0cmljPWZ1bmN0aW9uKHQsZSxpKXt3aW5kb3cuZ2EoT2JqZWN0KHUuZCkoInNldCIsaSksIm1ldHJpYyIrdCxlKX0sZS5zZXRNZXRyaWNPbmVFdmVudD1mdW5jdGlvbih0LGUsaSl7dGhpcy50ZW1wb3JhcnlNZXRyaWNzW2ldWyJtZXRyaWMiK3RdPWV9LGUudHJhY2tFdmVudD1mdW5jdGlvbih0LGUsaSxyLHMpe3ZhciBvPXRoaXM7T2JqZWN0LmtleXModGhpcy50cmFja2VycykuZm9yRWFjaChmdW5jdGlvbihhKXtpZihhPT09dS5hKXt2YXIgYz1vLnRyYWNrZXJzW2FdO3dpbmRvdy5ndGFnKCJldmVudCIsZSxuKHtzZW5kX3RvOmMsZXZlbnRfY2F0ZWdvcnk6dCxub25faW50ZXJhY3Rpb246ITB9LG8udGVtcG9yYXJ5RGltZW5zaW9uc1thXSxvLnRlbXBvcmFyeU1ldHJpY3NbYV0saSYme2V2ZW50X2xhYmVsOml9LHImJnt2YWx1ZTpyfSxzJiZ7ZXZlbnRfY2FsbGJhY2s6c30pKX1lbHNlIGlmKGEhPT11LmMpe3ZhciBsPW4oe2hpdFR5cGU6ImV2ZW50IixldmVudENhdGVnb3J5OnQsZXZlbnRBY3Rpb246ZSxldmVudExhYmVsOmksZXZlbnRWYWx1ZTpyfSxzJiZ7aGl0Q2FsbGJhY2s6c30se25vbkludGVyYWN0aW9uOiEwfSxvLnRlbXBvcmFyeURpbWVuc2lvbnNbYV0sby50ZW1wb3JhcnlNZXRyaWNzW2FdKTtPYmplY3QoZi5hKShTdHJpbmcoYSksbCl9by50ZW1wb3JhcnlEaW1lbnNpb25zW2FdPXt9LG8udGVtcG9yYXJ5TWV0cmljc1thXT17fX0pfSxlLnRyYWNrVGltaW5nPWZ1bmN0aW9uKHQsZSxpLG4pe3ZhciByPXtoaXRUeXBlOiJ0aW1pbmciLHRpbWluZ0NhdGVnb3J5OnQsdGltaW5nVmFyOmUsdGltaW5nVmFsdWU6aSx0aW1pbmdMYWJlbDpufTtPYmplY3Qua2V5cyh0aGlzLnRyYWNrZXJzKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe09iamVjdChmLmEpKFN0cmluZyh0KSxyKX0pfSxlLnRyYWNrRXZlbnRIaWdoVm9sdW1lPWZ1bmN0aW9uKHQsZSxpLG4scil7aWYodGhpcy5lbmFibGVIaWdoVm9sdW1lRXZlbnRzKXt2YXIgcz10KyIgLyAxMCI7dGhpcy50cmFja0V2ZW50KHMsZSxpLG4scil9fSxlLnRyYWNrRXZlbnRXaXRoVGltZT1mdW5jdGlvbih0LGUsaSl7dGhpcy50cmFja0V2ZW50KHQsZSxpLE9iamVjdChjLmEpKCkpfSxlLmluaXRUaW1lT25QYWdlRXZlbnQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJiZWZvcmV1bmxvYWQiLGZ1bmN0aW9uKCl7dmFyIGU9T2JqZWN0KGMuYSkoKSxpPU9iamVjdChhLmEpKGUpO3QudHJhY2tFdmVudEhpZ2hWb2x1bWUoInRpbWUgb24gcGFnZSIsInVubG9hZCIsaSxlKX0pfSxlLmluaXREd2VsbFRpbWVFdmVudD1mdW5jdGlvbigpe3ZhciB0PXRoaXM7c2V0VGltZW91dChmdW5jdGlvbigpe3QudHJhY2tFdmVudCgiZHdlbGwgdGltZSIsImR3ZWxsIiwiMzAgc2Vjb25kcyIpfSwzZTQpfSxlLmFwcGx5Q29uZmlnPWZ1bmN0aW9uKHQpe3RoaXMudHJhY2tlcnM9dC50cmFja2Vycyx0aGlzLmRvbWFpbj10LmRvbWFpbix0aGlzLmNsaWVudElEPXQuY2xpZW50SUQsdGhpcy51c2VySUQ9dC51c2VyX2lkLHRoaXMuZGltZW5zaW9ucz10LmRpbWVuc2lvbnMsdGhpcy5tZXRyaWNzPXQubWV0cmljcyx0aGlzLmpzRGltZW5zaW9ucz10LmpzX2RpbWVuc2lvbnMsdGhpcy5lbmFibGVIaWdoVm9sdW1lRXZlbnRzPXQuZW5hYmxlX2hpZ2hfdm9sdW1lX2V2ZW50c30sZS5yZWxvYWQ9ZnVuY3Rpb24odCl7dGhpcy5hcHBseUNvbmZpZyh0KSx0aGlzLnNldHVwVHJhY2tlcnMoKX0sZS5nZXRHYUNvbmZpZz1mdW5jdGlvbigpe3JldHVybnt0cmFja2Vyczp0aGlzLnRyYWNrZXJzLGRvbWFpbjp0aGlzLmRvbWFpbixjbGllbnRJRDp0aGlzLmNsaWVudElELHVzZXJfaWQ6dGhpcy51c2VySUQsZGltZW5zaW9uczp0aGlzLmRpbWVuc2lvbnMsbWV0cmljczp0aGlzLm1ldHJpY3MsanNfZGltZW5zaW9uczp0aGlzLmpzRGltZW5zaW9ucyxlbmFibGVfaGlnaF92b2x1bWVfZXZlbnRzOnRoaXMuZW5hYmxlSGlnaFZvbHVtZUV2ZW50c319LHQuaW5pdD1mdW5jdGlvbihlKXt0Lmluc3RhbmNlPW5ldyB0KGUpfSx0LmdldEluc3RhbmNlPWZ1bmN0aW9uKCl7dmFyIGU9dC5pbnN0YW5jZTtpZihudWxsPT1lKXRocm93IEVycm9yKCJ5ZWxwX2dvb2dsZV9hbmFseXRpY3MuR29vZ2xlQW5hbHl0aWNzIG5vdCBpbml0aWFsaXplZC4gQ2FsbCBhIHNpdGUtc3BlY2lmaWMgR0EgaW5pdCEiKTtyZXR1cm4gZX0sdH0oKTtyKGwsImluc3RhbmNlIix2b2lkIDApLGUuYT1sfSxmdW5jdGlvbih0LGUsaSl7InVzZSBzdHJpY3QiOyFmdW5jdGlvbigpe09iamVjdC5rZXlzfHwoT2JqZWN0LmtleXM9ZnVuY3Rpb24oKXt2YXIgdD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LGU9IXt0b1N0cmluZzpudWxsfS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgidG9TdHJpbmciKSxpPVsidG9TdHJpbmciLCJ0b0xvY2FsZVN0cmluZyIsInZhbHVlT2YiLCJoYXNPd25Qcm9wZXJ0eSIsImlzUHJvdG90eXBlT2YiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImNvbnN0cnVjdG9yIl0sbj1pLmxlbmd0aDtyZXR1cm4gZnVuY3Rpb24ocil7aWYoIm9iamVjdCIhPXR5cGVvZiByJiYoImZ1bmN0aW9uIiE9dHlwZW9mIHJ8fG51bGw9PT1yKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJPYmplY3Qua2V5cyBjYWxsZWQgb24gbm9uLW9iamVjdCIpO3ZhciBzLG8sYT1bXTtmb3IocyBpbiByKXQuY2FsbChyLHMpJiZhLnB1c2gocyk7aWYoZSlmb3Iobz0wO288bjtvKyspdC5jYWxsKHIsaVtvXSkmJmEucHVzaChpW29dKTtyZXR1cm4gYX19KCkpfSgpfSxmdW5jdGlvbih0LGUsaSl7InVzZSBzdHJpY3QiO3ZhciBuPWZ1bmN0aW9uKHQpe3ZhciBlPSIyNDArIjtyZXR1cm4gdDw9MD9lPSI1Ijp0PD0zMD9lPSg1Kk1hdGguY2VpbCh0LzUpKS50b1N0cmluZygpOnQ8PTEyMD9lPSgxNSpNYXRoLmNlaWwodC8xNSkpLnRvU3RyaW5nKCk6dDw9MjQwJiYoZT0oMzAqTWF0aC5jZWlsKHQvMzApKS50b1N0cmluZygpKSxlfTtlLmE9bn0sZnVuY3Rpb24odCxlLGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj1mdW5jdGlvbigpe3JldHVybiBwYXJzZUludCgoKG5ldyBEYXRlKS5nZXRUaW1lKCktd2luZG93LnlnYVBhZ2VTdGFydFRpbWUpLzFlMywxMCl9O2UuYT1ufSxmdW5jdGlvbih0LGUsaSl7InVzZSBzdHJpY3QiO2kuZChlLCJhIixmdW5jdGlvbigpe3JldHVybiBufSk7dmFyIG49ZnVuY3Rpb24odCxlKXtmb3IodmFyIGk9MDtpPHQubGVuZ3RoO2krPTEpaWYodFtpXT09PWUpcmV0dXJuIGk7cmV0dXJuLTF9fSxmdW5jdGlvbih0LGUsaSl7InVzZSBzdHJpY3QiO3ZhciBuPWkoMCkscj1mdW5jdGlvbih0LGUpe3dpbmRvdy5nYShPYmplY3Qobi5kKSgic2VuZCIsdCksZSl9O2UuYT1yfSwsLGZ1bmN0aW9uKHQsZSxpKXsidXNlIHN0cmljdCI7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3ZhciBuPWkoMTApLHI9aSgxKTt3aW5kb3cueWVscF9nb29nbGVfYW5hbHl0aWNzPXtnb29nbGVfYW5hbHl0aWNzOnIuYX0sd2luZG93LnlnYVBhZ2VTdGFydFRpbWU9KG5ldyBEYXRlKS5nZXRUaW1lKCksbWFpbj1uLmF9LGZ1bmN0aW9uKHQsZSxpKXsidXNlIHN0cmljdCI7dmFyIG49aSgxKSxyPWZ1bmN0aW9uKHQsZSl7bi5hLmluaXQodCksbi5hLmdldEluc3RhbmNlKCkuZmlyZVBhZ2V2aWV3cyhlKSxuLmEuZ2V0SW5zdGFuY2UoKS5pbml0RHdlbGxUaW1lRXZlbnQoKX07ZS5hPXJ9XSk7CgogICAgICAgICAgICAgICAgaWYgKG1haW4gPT09IG51bGwpIHsKICAgICAgICAgICAgICAgICAgICB0aHJvdyAnaW52YWxpZCBpbmxpbmUgc2NyaXB0LCBtaXNzaW5nIG1haW4gZGVjbGFyYXRpb24uJzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIG1haW4oeyJjbGllbnRJRCI6ICJBNDM1OTJDRDM4MkYzMzNDIiwgImRpbWVuc2lvbnMiOiB7Imdsb2JhbCI6IHsiYWNjb3VudF9sZXZlbCI6IFsxLCAiYW5vbiJdLCAiY29udGVudF9jb3VudHJ5IjogWzExLCAiVVMiXSwgImRpc3RpbCI6IFsxMiwgbnVsbF0sICJkaXN0aWxfanNfZW5hYmxlZCI6IFsxMywgbnVsbF0sICJmdWxsX3VybCI6IFsxNSwgIi9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIiXSwgImludGVncmF0aW9uIjogWzE3LCAiIl0sICJpbnRlcm5hbF9pcCI6IFsxOCwgIkZhbHNlIl0sICJrbm93bl9ib3QiOiBbMzYsICJvdGhlciJdLCAicmVmZXJyZXIiOiBbMjgsICJub25lIl19LCAid3d3IjogeyJhY2NvdW50X2xldmVsIjogWzEsICJhbm9uIl0sICJjb250ZW50X2NvdW50cnkiOiBbMTUsICJVUyJdLCAiZGVjcnlwdGVkX3l1dl9pZCI6IFszLCAiQTQzNTkyQ0QzODJGMzMzQyJdLCAiZGlzdGlsIjogWzUzLCBudWxsXSwgImRpc3RpbF9qc19lbmFibGVkIjogWzEzOCwgbnVsbF0sICJmdWxsX3VybCI6IFszNCwgIi9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIiXSwgImludGVncmF0aW9uIjogWzE0LCAiIl0sICJpbnRlcm5hbF9pcCI6IFsyNywgIkZhbHNlIl0sICJpc19iaXpfdXNlciI6IFsxMjksICJGYWxzZSJdLCAia25vd25fYm90IjogWzE4NiwgIm90aGVyIl0sICJyZWZlcnJlciI6IFs2NCwgIm5vbmUiXSwgInJlbW90ZV9pcCI6IFs0LCAiOTcuMTIyLjE5Ny4wIl0sICJzZXJ2aWNlIjogWzEwNywgInllbHAtbWFpbiJdLCAidmlld3BvcnRfdHJhY2tpbmciOiBbMjksIG51bGxdLCAiYWQud2ViX2Nhcm91c2VsX2JvdHRvbV9vZl9iaXoiOiBbNzgsICJzdGF0dXNfcXVvIl0sICJ3d3dfZWR1Y2F0aW9uX2Jhbm5lciI6IFsxOTAsICJlbmFibGVkIl0sICJjb250cmlidXRpb25zLnd3dy5yZW1vdmVfcmV2aWV3X2RyYWZ0X21vZHVsZXMiOiBbMTgzLCAic3RhdHVzX3F1byJdLCAiY29udHJpYnV0aW9ucy53d3cud2FyX2F0dGFjaF9waG90b3MiOiBbOTksICJlbmFibGVkIl0sICJjb250cmlidXRpb25zLnd3dy53YXJfY29tcG9zZV9yZWNlbnRfcGhvdG9zIjogWzEwMiwgImVuYWJsZWQiXSwgImNvbnRyaWJ1dGlvbnMud3d3Lndhcl9jb21wb3NlX3JlZGVzaWduIjogWzYsICJlbmFibGVkIl0sICJjb250cmlidXRpb25zLnd3dy53YXJfY29tcG9zZV9zaWdudXAiOiBbMTQ4LCAiZGlzYWJsZWQiXSwgImVhdDI0X2ZyZWVfZGVsaXZlcnlfYmFubmVyIjogWzQ1LCAiZGlzYWJsZWQiXSwgImxzbW9uZXkud3d3LnlnX3JhcV9jYXJkc19vbl9zZWFyY2giOiBbMTUyLCAic3RhdHVzX3F1byJdLCAibHNhdC53d3cuZHJvcGRvd25faGVhZGVyIjogWzU0LCAiZW5hYmxlZCJdLCAibHNtLnd3dy51bnBha3RfY3RhX2NoYW5nZSI6IFsxMDgsICJ1bnBha3RfY3RhX2VuYWJsZWQiXSwgIm1lc3NhZ2luZy53d3cuY29tcG9zZXJfbm90aWZpY2F0aW9uc19zcGFtX2FuZF9ob3Zlcl9zdGF0ZSI6IFsxNzcsICJub3RpZmljYXRpb25zX2VuYWJsZWQiXSwgIm1lc3NhZ2luZy53d3cucmFxX2NhcmRzX29uX3NlYXJjaCI6IFs2MSwgInN0YXR1c19xdW8iXSwgIm1lc3NhZ2luZy53d3cueWVscF9ndWFyYW50ZWVkIjogWzE2MCwgInN0YXR1c19xdW8iXSwgIm5vd2FpdF9yZXN0YXVyYW50Lnd3dy5ub193YWl0X21lc3NhZ2UiOiBbMTA2LCAic2hvd193YWl0X29yX2dldF9pbl9saW5lX2NvcHkiXSwgInBhZ2VsZXRfbW9kZV93d3dfYml6X2RldGFpbHMiOiBbMjQsICJhbGxvd19hc3luYyJdLCAicGF5bWVudC51eC53d3ciOiBbMTk3LCAiZW5hYmxlZCJdLCAicGxhdGZvcm1fcGlja3VwX2ZpbHRlciI6IFsyMCwgImVuYWJsZWQiXSwgInJlYWRlcngud2ViLmJpel9mb3Jfc2VydmljZXMiOiBbMTE2LCAiYml6X3N0YXR1c19xdW8iXSwgInJlYWRlcngud2ViLnBvcHVsYXJfZGlzaGVzIjogWzE5OCwgImhpZ2hsaWdodHNfcG9wdWxhcl9kaXNoZXMiXSwgInJldmlld19hY3Rpb25zX2Ryb3Bkb3duIjogWzIsICJkaXNhYmxlZCJdLCAic2VhcmNodXgud3d3LnNlcnZpY2VzX3NlcnBfY2FyZF9uZXdfbGF5b3V0X3YwXzAiOiBbMTUxLCAic3RhdHVzX3F1byJdLCAic3R5bGVndWlkZV9idXR0b25zIjogWzEzLCAic3RhdHVzX3F1byJdLCAic3R5bGVndWlkZV90eXBvZ3JhcGh5IjogWzE1OSwgInN0YXR1c19xdW8iXSwgInR4bi53d3cuY2hlY2tvdXRfcGFnZV9jaGFuZ2VzIjogWzEzNSwgImVuYWJsZWQiXSwgInd3d19iaXpfZGV0YWlsc19yYXFfc3RpY2t5IjogWzg0LCAiZW5hYmxlZCJdLCAid3d3X2N1cnJlbnRfbG9jYXRpb25fc3VnZ2VzdGlvbiI6IFsxODUsICJlbmFibGVkIl0sICJ3d3dfc2Vjb25kX3BhZ2VfcGl0Y2giOiBbMTExLCAic3RhdHVzX3F1byJdLCAid3d3X3NpZ251cF9yZWRlc2lnbiI6IFs5MiwgInN0YXR1c19xdW8iXSwgInl0cF9kZWxpdmVyeV9sYW5kaW5nIjogWzEyNSwgInBsYXRmb3JtX3BhZ2VzIl0sICJ5dHBfZWF0MjRfeWVscF9zdHlsZV90b19pZnJhbWUiOiBbMTM2LCAic3RhdHVzX3F1byJdLCAieXRwX29yZGVyX2NvbmZpcm1hdGlvbl9wYWdlIjogWzE0MywgImVuYWJsZWQiXSwgInd3d19zZWFyY2hfc25pcHBldHNfaW5fc3luY193aXRoX2FkcyI6IFsxMTIsICJzdGF0dXNfcXVvXzgiXSwgInlyX2RpbmVyLnd3dy5kaXJlY3RfY2hlY2tvdXRfZm9yX2V4YWN0X21hdGNoIjogWzE2MywgImRpc2FibGVkIl19fSwgImRvbWFpbiI6ICJ5ZWxwLmNvbSIsICJlbmFibGVfaGlnaF92b2x1bWVfZXZlbnRzIjogZmFsc2UsICJnYV9lbmFibGVkIjogdHJ1ZSwgImpzX2RpbWVuc2lvbnMiOiB7Imdsb2JhbCI6IHt9LCAid3d3IjogeyJqc192ZXJ0aWNhbF9zZWFyY2hfdHlwZSI6IFszOSwgbnVsbF0sICJwbGF0Zm9ybV9vcmRlcl90eXBlIjogWzEyNywgbnVsbF19fSwgIm1ldHJpY3MiOiB7Imdsb2JhbCI6IHt9LCAid3d3Ijoge319LCAidHJhY2tlcnMiOiB7Ind3dyI6ICJVQS0zMDUwMS0yNCIsICJnbG9iYWwiOiAiVUEtMzA1MDEtMSJ9LCAidXNlcl9pZCI6IG51bGx9LG51bGwpOwogICAgICAgICAgICB9KSgpOwogICAgPC9zY3JpcHQ+CgoKICAgICAgICA8c2NyaXB0PgogICAgICAgICAgICB3aW5kb3cueWVscCA9IHdpbmRvdy55ZWxwIHx8IHt9OwogICAgICAgICAgICB3aW5kb3cueWVscC5jb29raWVUeXBlUHJlZmVyZW5jZXNIZWFkZXIgPSAnWyJBTkFMWVRJQ1MiLCJGVU5DVElPTkFMIiwiSU5URVJOQUwiLCJTVFJJQ1RMWV9ORUNFU1NBUlkiLCJUQVJHRVRJTkciXSc7CgogICAgICAgICAgICBmdW5jdGlvbiBhZGRDb29raWVNYW5hZ2VtZW50U2NyaXB0KCkgewogICAgICAgICAgICAgICAgdmFyIHRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpOwogICAgICAgICAgICAgICAgdGFnLmFzeW5jID0gdHJ1ZTsKICAgICAgICAgICAgICAgIHRhZy5zcmMgPSAnaHR0cHM6Ly9jZG4uY29va2llbGF3Lm9yZy9zY3JpcHR0ZW1wbGF0ZXMvb3RTREtTdHViLmpzJzsKICAgICAgICAgICAgICAgIHRhZy50eXBlID0gJ3RleHQvamF2YXNjcmlwdCc7CiAgICAgICAgICAgICAgICB0YWcuY2hhcnNldCA9ICdVVEYtOCc7CiAgICAgICAgICAgICAgICB0YWcuc2V0QXR0cmlidXRlKCdkYXRhLWRvbWFpbi1zY3JpcHQnLCAnNWZiY2Q0MTctZmJjMS00ZmNjLWFiYWQtZjYyMmYxYmJhNzJkJyk7CiAgICAgICAgICAgICAgICB0YWcuc2V0QXR0cmlidXRlKCdkYXRhLWRvY3VtZW50LWxhbmd1YWdlJywgJ3RydWUnKTsKCiAgICAgICAgICAgICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHRhZyk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICgncmVxdWVzdElkbGVDYWxsYmFjaycgaW4gd2luZG93KSB7CiAgICAgICAgICAgICAgICByZXF1ZXN0SWRsZUNhbGxiYWNrKGFkZENvb2tpZU1hbmFnZW1lbnRTY3JpcHQsIHsgdGltZW91dDogNDAwMCB9KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoYWRkQ29va2llTWFuYWdlbWVudFNjcmlwdCwgMjAwMCk7CiAgICAgICAgICAgIH0KICAgICAgICA8L3NjcmlwdD4KCiAgICAgICAgICAgIDxzY3JpcHQ+ICAgICAgICAoZnVuY3Rpb24gKGQsIHcpIHsKICAgICAgICAgICAgaWYgKCgnb250b3VjaHN0YXJ0JyBpbiB3KSB8fCB3LkRvY3VtZW50VG91Y2ggJiYgZCBpbnN0YW5jZW9mIHcuRG9jdW1lbnRUb3VjaCl7CiAgICAgICAgICAgICAgICB2YXIgaHRtbCA9IGQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImh0bWwiKVswXTsKICAgICAgICAgICAgICAgIGh0bWwuY2xhc3NMaXN0LmFkZCgidG91Y2giKTsKICAgICAgICAgICAgfQogICAgICAgIH0oZG9jdW1lbnQsIHdpbmRvdykpOwo8L3NjcmlwdD4KCgogICAgICAgICAgICAgICAgPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTgiIC8+CiAgICA8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LUxhbmd1YWdlIiBjb250ZW50PSJlbiIgLz4KCgogICAgICAgICAgICAgICAgICAgICAgICA8bWV0YSBuYW1lPSJkZXNjcmlwdGlvbiIgY29udGVudD0iTWVudSBmb3IgTm9vZGxlcyBFeHByZXNzOiBSZXZpZXdzIGFuZCBwaG90b3Mgb2YgRGFuIERhbiBOb29kbGVzLCBNYXBvIFRvZnUsIEVnZ3BsYW50IHdpdGggR2FybGljIFNhdWNlIi8+CgoKICAgICAgICAgICAgICAgICAgICA8bWV0YSBuYW1lPSJrZXl3b3JkcyIgY29udGVudD0iWWVscCxyZWNvbW1lbmRhdGlvbixTYW4gRnJhbmNpc2NvLCBiYXkgYXJlYSwgbG9jYWwsYnVzaW5lc3MscmV2aWV3LGZyaWVuZCxyZXN0YXVyYW50LGRlbnRpc3QsZG9jdG9yLHNhbG9uLHNwYSxzaG9wcGluZyxzdG9yZSxzaGFyZSxjb21tdW5pdHksbWFzc2FnZSxzdXNoaSxwaXp6YSxuYWlscyxOZXcgWW9yayxMb3MgQW5nZWxlcyI+CgoKICAgICAgICAgICAgICAgICAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9MTAyMCI+CgogICAgICAgICAgICAgICAgCiAgICA8bWV0YSBuYW1lPSJhcHBsaWNhdGlvbi1uYW1lIiBjb250ZW50PSJZZWxwIj4KCiAgICA8bWV0YSBuYW1lPSJtc2FwcGxpY2F0aW9uLVRpbGVJbWFnZSIgY29udGVudD0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzLzIvd3d3L2ltZy9mNWUwNTU2M2I1M2EvaWNvL3dpbjgtdGlsZS5wbmciPgogICAgPG1ldGEgbmFtZT0ibXNhcHBsaWNhdGlvbi1UaWxlQ29sb3IiIGNvbnRlbnQ9IiNGRkZGRkYiPgoKICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tc3RhcnR1cmwiIGNvbnRlbnQ9Imh0dHBzOi8vd3d3LnllbHAuY29tLyI+CiAgICA8bWV0YSBuYW1lPSJtc2FwcGxpY2F0aW9uLW5hdmJ1dHRvbi1jb2xvciIgY29udGVudD0iI0ZGMUExQSI+CiAgICA8bWV0YSBuYW1lPSJtc2FwcGxpY2F0aW9uLXdpbmRvdyIgY29udGVudD0id2lkdGg9MTAyNDtoZWlnaHQ9NzY4Ij4KICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tdG9vbHRpcCIgY29udGVudD0iR28gdG8gWWVscC5jb20iPgoKICAgIDxtZXRhIG5hbWU9Im1zYXBwbGljYXRpb24tdGFzayIgY29udGVudD0ibmFtZT1GaW5kIFJldmlld3M7IGFjdGlvbi11cmk9LzsgaWNvbi11cmk9aHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzLzIvd3d3L2ltZy9hNmJiYzU5Yzc0NTgvaWNvL2Zhdmljb24tMTZ4MTYuaWNvIj4KCiAgICA8bWV0YSBuYW1lPSJtc2FwcGxpY2F0aW9uLXRhc2siIGNvbnRlbnQ9Im5hbWU9SG90IE5ldyBCdXNpbmVzc2VzOyBhY3Rpb24tdXJpPS9vcGVuaW5nczsgaWNvbi11cmk9aHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzLzIvd3d3L2ltZy9hNmJiYzU5Yzc0NTgvaWNvL2Zhdmljb24tMTZ4MTYuaWNvIj4KCiAgICA8bWV0YSBuYW1lPSJtc2FwcGxpY2F0aW9uLXRhc2siIGNvbnRlbnQ9Im5hbWU9WWVscCBEZWFsczsgYWN0aW9uLXVyaT0vc2VhcmNoP2ZpbmRfZGVzYz1kZWFsczsgaWNvbi11cmk9aHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzLzIvd3d3L2ltZy9hNmJiYzU5Yzc0NTgvaWNvL2Zhdmljb24tMTZ4MTYuaWNvIj4KCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxtZXRhIG5hbWU9ImFwcGxlLWl0dW5lcy1hcHAiIGNvbnRlbnQ9ImFwcC1pZD0yODQ5MTAzNTAiPgoKCiAgICAgICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgIDxsaW5rIHJlbD0ibWFzay1pY29uIiBzaXplcz0iYW55IiBocmVmPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvc3J2MC95ZWxwX3N0eWxlZ3VpZGUvYjJiYjJmYjBlYzljL2Fzc2V0cy9pbWcvbG9nb3MveWVscF9idXJzdC5zdmciIGNvbnRlbnQ9IiNGRjFBMUEiPgogICAgPGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiBocmVmPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvc3J2MC95ZWxwX3N0eWxlZ3VpZGUvYjA1ODUyMzkzYWU1L2Fzc2V0cy9pbWcvbG9nb3MvZmF2aWNvbi5pY28iPgoKCiAgICAgICAgICAgICAgICAgICAgPGxpbmsgcmVsPSJzZWFyY2giIHR5cGU9ImFwcGxpY2F0aW9uL29wZW5zZWFyY2hkZXNjcmlwdGlvbit4bWwiIGhyZWY9Ii9vcGVuc2VhcmNoIiB0aXRsZT0iWWVscCIgLz4KCgoKICAgICAgICAgICAgICAgIAoKCgogICAgICAgICAgICAgICAgICAgICAgICA8bWV0YSBuYW1lPSJyb2JvdHMiIGNvbnRlbnQ9Im5vaW5kZXgiPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDxtZXRhIHByb3BlcnR5PSJmYjphcHBfaWQiIGNvbnRlbnQ9Ijk3NTM0NzUzMTYxIj4KICAgICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6c2l0ZV9uYW1lIiBjb250ZW50PSJZZWxwIj4KICAgICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6dHlwZSIgY29udGVudD0id2Vic2l0ZSI+CiAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiBjb250ZW50PSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvc3J2MC9zZW9fbWV0YWRhdGEvZjkxNDk3MzZhZDhkL2Fzc2V0cy9pbWcvbG9nb3MveWVscF9vZ19pbWFnZS5wbmciPgogICAgICAgIDxtZXRhIHByb3BlcnR5PSJvZzppbWFnZTpoZWlnaHQiIGNvbnRlbnQ9IjEwODAiPgogICAgICAgIDxtZXRhIHByb3BlcnR5PSJvZzppbWFnZTp3aWR0aCIgY29udGVudD0iMTkyMCI+CgoKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPHRpdGxlPk5vb2RsZXMgRXhwcmVzcyAtIE1lbnUgLSBEZW52ZXI8L3RpdGxlPgoKICAgICAgICAgICAgPG1ldGEgbmFtZT0iY3JpdGljYWxfY3NzX21pZGRsZXdhcmUiPgoKICAgICAgICAgICAgCiAgICA8c2NyaXB0PgogICAgICAgIHdpbmRvdy55ZWxwID0gd2luZG93LnllbHAgfHwge307CiAgICAgICAgd2luZG93LnllbHAuY3JpdGljYWxfY3NzID0gd2luZG93LnllbHAuY3JpdGljYWxfY3NzIHx8IHt9OwogICAgICAgIHdpbmRvdy55ZWxwLmNyaXRpY2FsX2Nzcy5jc3NfbWFwID0ge307CiAgICA8L3NjcmlwdD4KICAgIDwhLS0gY3NzLW1pZGRsZXdhcmU6IGJvb3RzdHJhcCBwbGFjZWhvbGRlciAtLT48c2NyaXB0PihmdW5jdGlvbigpIHsgd2luZG93LnllbHAuY3JpdGljYWxfY3NzLnJlY29yZERvbmU9ZnVuY3Rpb24oYyxsKXtsLm9ubG9hZD1udWxsO3ZhciBpPXdpbmRvdy55ZWxwLmNyaXRpY2FsX2Nzcy5jc3NfbWFwW2NdO3dpbmRvdy55ZWxwLmNyaXRpY2FsX2Nzcy5jc3NfbWFwW2NdPWkmJk9iamVjdC5rZXlzKGkpLmxlbmd0aD9pOntsb2FkZWQ6ITEsbGlua1RhZzpsfX07IH0pKCk8L3NjcmlwdD4KCiAgICA8c2NyaXB0PiAgICAgICAgICAgICAgICB3aW5kb3cueVBlcmZUaW1pbmdzLnB1c2goWyJoZWFkOmNzczpzdGFydCIsIChuZXcgRGF0ZSgpKS5nZXRUaW1lKCldKTsKPC9zY3JpcHQ+CgogICAgICAgICAgICA8bGluayByZWw9InByZWxvYWQiIGFzPSJmb250IiBocmVmPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvcHVibGljL29wZW4tc2Fucy1yZWd1bGFyLnlqaS0xZDBlODJmYjhjYTUwOTJkNjNiNTAxY2I3OGEzZmNjNS53b2ZmMiIgdHlwZT0iZm9udC93b2ZmMiIgY3Jvc3NvcmlnaW4+CiAgICAgICAgICAgIDxsaW5rIHJlbD0icHJlbG9hZCIgYXM9ImZvbnQiIGhyZWY9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2Fzc2V0cy9wdWJsaWMvb3Blbi1zYW5zLXNlbWlib2xkLnlqaS02NDI4NDIzMDY4NjAxMWRlMjc1YzRiMWJiNDAzOWY1NC53b2ZmMiIgdHlwZT0iZm9udC93b2ZmMiIgY3Jvc3NvcmlnaW4+CiAgICAgICAgICAgIDxsaW5rIHJlbD0icHJlbG9hZCIgYXM9ImZvbnQiIGhyZWY9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2Fzc2V0cy9wdWJsaWMvb3Blbi1zYW5zLWJvbGQueWppLTQ5ZTZiM2JiN2EyZGYyOTk2ZDA5YjljZGQ4OWNmMTY2LndvZmYyIiB0eXBlPSJmb250L3dvZmYyIiBjcm9zc29yaWdpbj4KICAgICAgICAgICAgPGxpbmsgcmVsPSJwcmVsb2FkIiBhcz0iZm9udCIgaHJlZj0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzL3B1YmxpYy9wb3BwaW5zLWJvbGQueWppLWY0ZjE3ZmQ1M2M3ZDA0MGU1NmY5MWEzZWNiNjkyYjIyLndvZmYyIiB0eXBlPSJmb250L3dvZmYyIiBjcm9zc29yaWdpbj4KICAgICAgICAgICAgPGxpbmsgcmVsPSJwcmVsb2FkIiBhcz0iZm9udCIgaHJlZj0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzL3B1YmxpYy9wb3BwaW5zLW1lZGl1bS55amktODQ3ODA1OTZlMjY4YWEwY2IyYmU0OGFmMmVkNWMzNzUud29mZjIiIHR5cGU9ImZvbnQvd29mZjIiIGNyb3Nzb3JpZ2luPgoKICAgICAgICA8bWV0YSBpZD0iZW1vdGlvbi1jb250YWluZXIiPjxtZXRhIGlkPSJlbW90aW9uLWNvbnRhaW5lciI+PHN0eWxlIGRhdGEtZW1vdGlvbi1jc3M9IjFsd2NjeDQgbnlpdHcwIG5hY3EwNiAxa3E3OWxpIDE5c2s0aDQgMXNpcGRxdyAxcTJpcncxIHpieXo1NSAxY2x6cjZoIDFpOTRpZjcgMWpvdDB4ZCA0NGZtaWYgMTZzMm5nZSBydGNkbHUgMXgya2F3diI+LmNzcy0xbHdjY3g0e2ZvbnQtZmFtaWx5OidPcGVuIFNhbnMnLCdIZWx2ZXRpY2EgTmV1ZScsSGVsdmV0aWNhLEFyaWFsLHNhbnMtc2VyaWY7Ym9yZGVyLXJhZGl1czozcHg7LXdlYmtpdC10ZXh0LWRlY29yYXRpb246bm9uZTt0ZXh0LWRlY29yYXRpb246bm9uZTtmb250LXdlaWdodDo2MDA7Y29sb3I6cmdiYSgyLDEyMiwxNTEsMSk7Zm9udC1zaXplOjE0cHg7bGluZS1oZWlnaHQ6MjBweDt9LmNzcy0xbHdjY3g0OmhvdmVyey13ZWJraXQtdGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZTt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lO30uY3NzLTFsd2NjeDQ6Zm9jdXN7b3V0bGluZToycHggc29saWQgcmdiYSgyLDEyMiwxNTEsMSk7b3V0bGluZS1vZmZzZXQ6MXB4O30uY3NzLTFsd2NjeDQ6Zm9jdXM6bm90KDpmb2N1cy12aXNpYmxlKXtvdXRsaW5lOjA7fS5jc3MtMWx3Y2N4NDpmb2N1cy12aXNpYmxle291dGxpbmU6bm9uZTtib3gtc2hhZG93OjAgMCAwIDJweCB3aGl0ZSwwIDAgMCA0cHggcmdiYSgyLDEyMiwxNTEsMSk7fVtkYXRhLWZvbnQtd2VpZ2h0PSdzZW1pYm9sZCddIC5jc3MtMWx3Y2N4NCxbZGF0YS1mb250LXdlaWdodD0nc2VtaWJvbGQnXSArIC5jc3MtMWx3Y2N4NCxbZGF0YS1mb250LXdlaWdodD0nYm9sZCddIC5jc3MtMWx3Y2N4NCxbZGF0YS1mb250LXdlaWdodD0nYm9sZCddICsgLmNzcy0xbHdjY3g0e2ZvbnQtd2VpZ2h0OmJvbGQ7fS5jc3MtbnlpdHcwe3dpZHRoOjI0cHg7aGVpZ2h0OjI0cHg7ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246bWlkZGxlO3Bvc2l0aW9uOnJlbGF0aXZlO292ZXJmbG93OmhpZGRlbjt0b3A6LTAuMWVtO2ZpbGw6cmdiYSg0NSw0Niw0NywxKTt9LmNzcy1ueWl0dzA6OmJlZm9yZXtwb3NpdGlvbjphYnNvbHV0ZTtkaXNwbGF5OmJsb2NrO2xlZnQ6MDt9LmNzcy1ueWl0dzA6OmFmdGVye2NvbnRlbnQ6Jyc7ZGlzcGxheTpibG9jaztwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjA7cmlnaHQ6MDt0b3A6MDtib3R0b206MDt9LmNzcy1ueWl0dzAgc3Zne3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7ZmlsbDppbmhlcml0O2Rpc3BsYXk6YmxvY2s7bGVmdDowO3RvcDowO3JpZ2h0OjA7Ym90dG9tOjA7fS5jc3MtbmFjcTA2e2ZvbnQtZmFtaWx5OidPcGVuIFNhbnMnLCdIZWx2ZXRpY2EgTmV1ZScsSGVsdmV0aWNhLEFyaWFsLHNhbnMtc2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc2l6ZToxNHB4O2xpbmUtaGVpZ2h0OjIwcHg7Zm9udC1zaXplOjEycHg7bGluZS1oZWlnaHQ6MThweDtmb250LXdlaWdodDo2MDA7Y29sb3I6aW5oZXJpdDt0ZXh0LWFsaWduOmNlbnRlcjttYXgtd2lkdGg6MTAwJTtvdmVyZmxvdzpoaWRkZW4gIWltcG9ydGFudDt0ZXh0LW92ZXJmbG93OmVsbGlwc2lzICFpbXBvcnRhbnQ7d2hpdGUtc3BhY2U6bm93cmFwICFpbXBvcnRhbnQ7d29yZC13cmFwOm5vcm1hbCAhaW1wb3J0YW50O30uY3NzLTFrcTc5bGl7d2lkdGg6MjRweDtoZWlnaHQ6MjRweDtkaXNwbGF5OmlubGluZS1ibG9jazt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7cG9zaXRpb246cmVsYXRpdmU7b3ZlcmZsb3c6aGlkZGVuO3RvcDowO2ZpbGw6Y3VycmVudENvbG9yO30uY3NzLTFrcTc5bGk6OmJlZm9yZXtwb3NpdGlvbjphYnNvbHV0ZTtkaXNwbGF5OmJsb2NrO2xlZnQ6MDt9LmNzcy0xa3E3OWxpOjphZnRlcntjb250ZW50OicnO2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246YWJzb2x1dGU7bGVmdDowO3JpZ2h0OjA7dG9wOjA7Ym90dG9tOjA7fS5jc3MtMWtxNzlsaSBzdmd7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtmaWxsOmluaGVyaXQ7ZGlzcGxheTpibG9jaztsZWZ0OjA7dG9wOjA7cmlnaHQ6MDtib3R0b206MDt9LmNzcy0xOXNrNGg0e3Bvc2l0aW9uOnJlbGF0aXZlO30uY3NzLTFzaXBkcXd7Zm9udC1mYW1pbHk6J09wZW4gU2FucycsJ0hlbHZldGljYSBOZXVlJyxIZWx2ZXRpY2EsQXJpYWwsc2Fucy1zZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zaXplOjE0cHg7bGluZS1oZWlnaHQ6MjBweDtmb250LXdlaWdodDo2MDA7Y29sb3I6cmdiYSg0NSw0Niw0NywxKTt0ZXh0LWFsaWduOmxlZnQ7fS5jc3MtMXEyaXJ3MXtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlcjoxcHggc29saWQgcmdiYSgyMDAsMjAxLDIwMiwxKTtjb2xvcjpyZ2JhKDQ1LDQ2LDQ3LDEpO2JhY2tncm91bmQtcG9zaXRpb246Y2FsYyh2YXIoLS1tb3VzZWRvd24teCkgLSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAyMDApIC8gMikgY2FsYyh2YXIoLS1tb3VzZWRvd24teSkgLSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAyMDApIC8gMik7YmFja2dyb3VuZC1zaXplOmNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDIwMCkgY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMjAwKTt9LmNzcy0xcTJpcncxOmFjdGl2ZXtjb2xvcjpyZ2JhKDQ1LDQ2LDQ3LDEpO30uY3NzLTFxMmlydzE6ZGlzYWJsZWR7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMjI3LDIyNywyMjcsMSk7fS5jc3MtMXEyaXJ3MTpmb2N1c3tiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsMC4xMik7fS5jc3MtMXEyaXJ3MTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsMC4xMik7Y29sb3I6cmdiYSg0NSw0Niw0NywxKTtib3gtc2hhZG93Om5vbmU7fS5jc3MtMXEyaXJ3MVtkYXRhLWFjdGl2YXRlZD0ndHJ1ZSdde2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwwLjEyKTtiYWNrZ3JvdW5kLWltYWdlOnJhZGlhbC1ncmFkaWVudChyZ2JhKDAsMCwwLDAuMDUpIDElLHRyYW5zcGFyZW50IDElKTt9LmNzcy0xcTJpcncxW2RhdGEtYWN0aXZhdGVkPSd0cnVlJ106YWN0aXZley13ZWJraXQtdHJhbnNpdGlvbjphbGwgMHM7dHJhbnNpdGlvbjphbGwgMHM7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLDAuMTIpO2JhY2tncm91bmQtaW1hZ2U6cmFkaWFsLWdyYWRpZW50KHRyYW5zcGFyZW50IDElLHRyYW5zcGFyZW50IDElKTtiYWNrZ3JvdW5kLXBvc2l0aW9uOmNhbGModmFyKC0tbW91c2Vkb3duLXgpIC0gY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMS4wKSAvIDIpIGNhbGModmFyKC0tbW91c2Vkb3duLXkpIC0gY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMS4wKSAvIDIpO2JhY2tncm91bmQtc2l6ZTpjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAxLjApIGNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDEuMCk7fS5jc3MtemJ5ejU1ey13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy13ZWJraXQtYm94LWFsaWduOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyOy13ZWJraXQtYXBwZWFyYW5jZTpub25lOy1tb3otYXBwZWFyYW5jZTpub25lO2FwcGVhcmFuY2U6bm9uZTtiYWNrZ3JvdW5kLWltYWdlOm5vbmU7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2JvcmRlcjowO2JvcmRlci1yYWRpdXM6NHB4O2JveC1zaGFkb3c6bm9uZTtib3gtc2l6aW5nOmJvcmRlci1ib3g7ZGlzcGxheTotd2Via2l0LWlubGluZS1ib3g7ZGlzcGxheTotd2Via2l0LWlubGluZS1mbGV4O2Rpc3BsYXk6LW1zLWlubGluZS1mbGV4Ym94O2Rpc3BsYXk6aW5saW5lLWZsZXg7Y3Vyc29yOnBvaW50ZXI7aGVpZ2h0OjQwcHg7LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7bWFyZ2luOjA7cGFkZGluZy1ib3R0b206OHB4O3BhZGRpbmctbGVmdDoxNnB4O3BhZGRpbmctcmlnaHQ6MTZweDtwYWRkaW5nLXRvcDo4cHg7cG9zaXRpb246cmVsYXRpdmU7dGV4dC1hbGlnbjpjZW50ZXI7LXdlYmtpdC10cmFuc2l0aW9uOmFsbCAwLjhzO3RyYW5zaXRpb246YWxsIDAuOHM7LXdlYmtpdC10cmFuc2l0aW9uLXByb3BlcnR5OmJhY2tncm91bmQtaW1hZ2UsYmFja2dyb3VuZC1jb2xvcixiYWNrZ3JvdW5kLXBvc2l0aW9uLGJhY2tncm91bmQtc2l6ZSxib3JkZXItY29sb3IsYm94LXNoYWRvdyxvcGFjaXR5O3RyYW5zaXRpb24tcHJvcGVydHk6YmFja2dyb3VuZC1pbWFnZSxiYWNrZ3JvdW5kLWNvbG9yLGJhY2tncm91bmQtcG9zaXRpb24sYmFja2dyb3VuZC1zaXplLGJvcmRlci1jb2xvcixib3gtc2hhZG93LG9wYWNpdHk7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lO3ZlcnRpY2FsLWFsaWduOm1pZGRsZTt3aWR0aDphdXRvO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyOjFweCBzb2xpZCByZ2JhKDIwMCwyMDEsMjAyLDEpO2NvbG9yOnJnYmEoNDUsNDYsNDcsMSk7YmFja2dyb3VuZC1wb3NpdGlvbjpjYWxjKHZhcigtLW1vdXNlZG93bi14KSAtIGNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDIwMCkgLyAyKSBjYWxjKHZhcigtLW1vdXNlZG93bi15KSAtIGNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDIwMCkgLyAyKTtiYWNrZ3JvdW5kLXNpemU6Y2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMjAwKSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAyMDApO30uY3NzLXpieXo1NTpkaXNhYmxlZHtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjM1LDIzNSwyMzUsMSk7YmFja2dyb3VuZC1pbWFnZTpub25lO2JvcmRlci1jb2xvcjpyZ2JhKDIzNSwyMzUsMjM1LDEpO2JveC1zaGFkb3c6bm9uZTtjb2xvcjpyZ2JhKDIwMCwyMDEsMjAyLDEpO291dGxpbmU6bm9uZTtwb2ludGVyLWV2ZW50czpub25lOy13ZWJraXQtdHJhbnNpdGlvbjpub25lO3RyYW5zaXRpb246bm9uZTt9LmNzcy16Ynl6NTU6aG92ZXJ7Ym94LXNoYWRvdzowIDFweCA0cHggMCByZ2JhKDAsMCwwLDAuMyk7fS5jc3MtemJ5ejU1OmZvY3Vze2JveC1zaGFkb3c6MCAwIDRweCAxcHggcmdiYSgwLDAsMCwwLjM1KTtvdXRsaW5lOm5vbmU7fUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDo1OTlweCl7LnJlc3BvbnNpdmUgLmNzcy16Ynl6NTV7Ym94LXNoYWRvdzpub25lO2ZvbnQtd2VpZ2h0Om5vcm1hbDt9fUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDo3ODBweCl7LnJlc3BvbnNpdmUtYml6IC5jc3MtemJ5ejU1e2JveC1zaGFkb3c6bm9uZTtmb250LXdlaWdodDpub3JtYWw7fX1AbWVkaWEgKHBvaW50ZXI6Y29hcnNlKXsuY3NzLXpieXo1NTpob3Zlcntib3gtc2hhZG93Om5vbmU7fX0uY3NzLXpieXo1NSArIGF7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLWxlZnQ6MTJweDt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7fS5jc3MtemJ5ejU1ICsgYTpub3QoW2RhdGEtYnV0dG9uPSd0cnVlJ10pLC5jc3MtemJ5ejU1ICsgLmJ1dHRvbi1zaWJsaW5nOm5vdChbZGF0YS1idXR0b249J3RydWUnXSl7Zm9udC1zaXplOjE0cHg7bGluZS1oZWlnaHQ6MS4yODU3MWVtO21hcmdpbi1ib3R0b206N3B4O21hcmdpbi10b3A6OXB4O31AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NTk5cHgpey5yZXNwb25zaXZlIC5jc3MtemJ5ejU1ICsgYTpub3QoW2RhdGEtYnV0dG9uPSd0cnVlJ10pLC5yZXNwb25zaXZlIC5jc3MtemJ5ejU1ICsgLmJ1dHRvbi1zaWJsaW5nOm5vdChbZGF0YS1idXR0b249J3RydWUnXSl7Zm9udC1zaXplOjE2cHg7bGluZS1oZWlnaHQ6MS4zMTI1MGVtO319LmllIC5jc3MtemJ5ejU1ID4gc3BhbntkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOnJlbGF0aXZlO30uY3NzLXpieXo1NTphY3RpdmV7Y29sb3I6cmdiYSg0NSw0Niw0NywxKTt9LmNzcy16Ynl6NTU6ZGlzYWJsZWR7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMjI3LDIyNywyMjcsMSk7fS5jc3MtemJ5ejU1OmZvY3Vze2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwwLjEyKTt9LmNzcy16Ynl6NTU6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLDAuMTIpO2NvbG9yOnJnYmEoNDUsNDYsNDcsMSk7Ym94LXNoYWRvdzpub25lO30uY3NzLXpieXo1NVtkYXRhLWFjdGl2YXRlZD0ndHJ1ZSdde2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwwLjEyKTtiYWNrZ3JvdW5kLWltYWdlOnJhZGlhbC1ncmFkaWVudChyZ2JhKDAsMCwwLDAuMDUpIDElLHRyYW5zcGFyZW50IDElKTt9LmNzcy16Ynl6NTVbZGF0YS1hY3RpdmF0ZWQ9J3RydWUnXTphY3RpdmV7LXdlYmtpdC10cmFuc2l0aW9uOmFsbCAwczt0cmFuc2l0aW9uOmFsbCAwcztiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsMC4xMik7YmFja2dyb3VuZC1pbWFnZTpyYWRpYWwtZ3JhZGllbnQodHJhbnNwYXJlbnQgMSUsdHJhbnNwYXJlbnQgMSUpO2JhY2tncm91bmQtcG9zaXRpb246Y2FsYyh2YXIoLS1tb3VzZWRvd24teCkgLSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAxLjApIC8gMikgY2FsYyh2YXIoLS1tb3VzZWRvd24teSkgLSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAxLjApIC8gMik7YmFja2dyb3VuZC1zaXplOmNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDEuMCkgY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMS4wKTt9LmNzcy0xY2x6cjZoey13ZWJraXQtdGV4dC1kZWNvcmF0aW9uOm5vbmU7dGV4dC1kZWNvcmF0aW9uOm5vbmU7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmU7LW1vei1hcHBlYXJhbmNlOm5vbmU7YXBwZWFyYW5jZTpub25lO2JhY2tncm91bmQtaW1hZ2U6bm9uZTtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7Ym9yZGVyOjA7Ym9yZGVyLXJhZGl1czo0cHg7Ym94LXNoYWRvdzpub25lO2JveC1zaXppbmc6Ym9yZGVyLWJveDtkaXNwbGF5Oi13ZWJraXQtaW5saW5lLWJveDtkaXNwbGF5Oi13ZWJraXQtaW5saW5lLWZsZXg7ZGlzcGxheTotbXMtaW5saW5lLWZsZXhib3g7ZGlzcGxheTppbmxpbmUtZmxleDtjdXJzb3I6cG9pbnRlcjtoZWlnaHQ6NDBweDstd2Via2l0LWJveC1wYWNrOmNlbnRlcjstd2Via2l0LWp1c3RpZnktY29udGVudDpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjttYXJnaW46MDtwYWRkaW5nLWJvdHRvbTo4cHg7cGFkZGluZy1sZWZ0OjE2cHg7cGFkZGluZy1yaWdodDoxNnB4O3BhZGRpbmctdG9wOjhweDtwb3NpdGlvbjpyZWxhdGl2ZTt0ZXh0LWFsaWduOmNlbnRlcjstd2Via2l0LXRyYW5zaXRpb246YWxsIDAuOHM7dHJhbnNpdGlvbjphbGwgMC44czstd2Via2l0LXRyYW5zaXRpb24tcHJvcGVydHk6YmFja2dyb3VuZC1pbWFnZSxiYWNrZ3JvdW5kLWNvbG9yLGJhY2tncm91bmQtcG9zaXRpb24sYmFja2dyb3VuZC1zaXplLGJvcmRlci1jb2xvcixib3gtc2hhZG93LG9wYWNpdHk7dHJhbnNpdGlvbi1wcm9wZXJ0eTpiYWNrZ3JvdW5kLWltYWdlLGJhY2tncm91bmQtY29sb3IsYmFja2dyb3VuZC1wb3NpdGlvbixiYWNrZ3JvdW5kLXNpemUsYm9yZGVyLWNvbG9yLGJveC1zaGFkb3csb3BhY2l0eTstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7dmVydGljYWwtYWxpZ246bWlkZGxlO3dpZHRoOmF1dG87YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMjAwLDIwMSwyMDIsMSk7Y29sb3I6cmdiYSg0NSw0Niw0NywxKTtiYWNrZ3JvdW5kLXBvc2l0aW9uOmNhbGModmFyKC0tbW91c2Vkb3duLXgpIC0gY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMjAwKSAvIDIpIGNhbGModmFyKC0tbW91c2Vkb3duLXkpIC0gY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMjAwKSAvIDIpO2JhY2tncm91bmQtc2l6ZTpjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAyMDApIGNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDIwMCk7fS5jc3MtMWNsenI2aDphY3RpdmUsLmNzcy0xY2x6cjZoOmZvY3VzLC5jc3MtMWNsenI2aDpob3ZlciwuY3NzLTFjbHpyNmg6dmlzaXRlZHstd2Via2l0LXRleHQtZGVjb3JhdGlvbjpub25lO3RleHQtZGVjb3JhdGlvbjpub25lO30uY3NzLTFjbHpyNmg6ZGlzYWJsZWR7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIzNSwyMzUsMjM1LDEpO2JhY2tncm91bmQtaW1hZ2U6bm9uZTtib3JkZXItY29sb3I6cmdiYSgyMzUsMjM1LDIzNSwxKTtib3gtc2hhZG93Om5vbmU7Y29sb3I6cmdiYSgyMDAsMjAxLDIwMiwxKTtvdXRsaW5lOm5vbmU7cG9pbnRlci1ldmVudHM6bm9uZTstd2Via2l0LXRyYW5zaXRpb246bm9uZTt0cmFuc2l0aW9uOm5vbmU7fS5jc3MtMWNsenI2aDpob3Zlcntib3gtc2hhZG93OjAgMXB4IDRweCAwIHJnYmEoMCwwLDAsMC4zKTt9LmNzcy0xY2x6cjZoOmZvY3Vze2JveC1zaGFkb3c6MCAwIDRweCAxcHggcmdiYSgwLDAsMCwwLjM1KTtvdXRsaW5lOm5vbmU7fUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDo1OTlweCl7LnJlc3BvbnNpdmUgLmNzcy0xY2x6cjZoe2JveC1zaGFkb3c6bm9uZTtmb250LXdlaWdodDpub3JtYWw7fX1AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NzgwcHgpey5yZXNwb25zaXZlLWJpeiAuY3NzLTFjbHpyNmh7Ym94LXNoYWRvdzpub25lO2ZvbnQtd2VpZ2h0Om5vcm1hbDt9fUBtZWRpYSAocG9pbnRlcjpjb2Fyc2Upey5jc3MtMWNsenI2aDpob3Zlcntib3gtc2hhZG93Om5vbmU7fX0uY3NzLTFjbHpyNmggKyBhe2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbi1sZWZ0OjEycHg7dmVydGljYWwtYWxpZ246bWlkZGxlO30uY3NzLTFjbHpyNmggKyBhOm5vdChbZGF0YS1idXR0b249J3RydWUnXSksLmNzcy0xY2x6cjZoICsgLmJ1dHRvbi1zaWJsaW5nOm5vdChbZGF0YS1idXR0b249J3RydWUnXSl7Zm9udC1zaXplOjE0cHg7bGluZS1oZWlnaHQ6MS4yODU3MWVtO21hcmdpbi1ib3R0b206N3B4O21hcmdpbi10b3A6OXB4O31AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NTk5cHgpey5yZXNwb25zaXZlIC5jc3MtMWNsenI2aCArIGE6bm90KFtkYXRhLWJ1dHRvbj0ndHJ1ZSddKSwucmVzcG9uc2l2ZSAuY3NzLTFjbHpyNmggKyAuYnV0dG9uLXNpYmxpbmc6bm90KFtkYXRhLWJ1dHRvbj0ndHJ1ZSddKXtmb250LXNpemU6MTZweDtsaW5lLWhlaWdodDoxLjMxMjUwZW07fX0uaWUgLmNzcy0xY2x6cjZoID4gc3BhbntkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOnJlbGF0aXZlO30uY3NzLTFjbHpyNmg6YWN0aXZle2NvbG9yOnJnYmEoNDUsNDYsNDcsMSk7fS5jc3MtMWNsenI2aDpkaXNhYmxlZHtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlcjoxcHggc29saWQgcmdiYSgyMjcsMjI3LDIyNywxKTt9LmNzcy0xY2x6cjZoOmZvY3Vze2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwwLjEyKTt9LmNzcy0xY2x6cjZoOmhvdmVye2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwwLjEyKTtjb2xvcjpyZ2JhKDQ1LDQ2LDQ3LDEpO2JveC1zaGFkb3c6bm9uZTt9LmNzcy0xY2x6cjZoW2RhdGEtYWN0aXZhdGVkPSd0cnVlJ117YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLDAuMTIpO2JhY2tncm91bmQtaW1hZ2U6cmFkaWFsLWdyYWRpZW50KHJnYmEoMCwwLDAsMC4wNSkgMSUsdHJhbnNwYXJlbnQgMSUpO30uY3NzLTFjbHpyNmhbZGF0YS1hY3RpdmF0ZWQ9J3RydWUnXTphY3RpdmV7LXdlYmtpdC10cmFuc2l0aW9uOmFsbCAwczt0cmFuc2l0aW9uOmFsbCAwcztiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsMC4xMik7YmFja2dyb3VuZC1pbWFnZTpyYWRpYWwtZ3JhZGllbnQodHJhbnNwYXJlbnQgMSUsdHJhbnNwYXJlbnQgMSUpO2JhY2tncm91bmQtcG9zaXRpb246Y2FsYyh2YXIoLS1tb3VzZWRvd24teCkgLSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAxLjApIC8gMikgY2FsYyh2YXIoLS1tb3VzZWRvd24teSkgLSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAxLjApIC8gMik7YmFja2dyb3VuZC1zaXplOmNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDEuMCkgY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMS4wKTt9LmNzcy0xaTk0aWY3e2ZvbnQtZmFtaWx5OidQb3BwaW5zJywnSGVsdmV0aWNhIE5ldWUnLEhlbHZldGljYSxBcmlhbCxzYW5zLXNlcmlmICFpbXBvcnRhbnQ7Zm9udC1zaXplOjE2cHggIWltcG9ydGFudDtmb250LXdlaWdodDo1MDAgIWltcG9ydGFudDstd2Via2l0LWxldHRlci1zcGFjaW5nOi0wLjJweCAhaW1wb3J0YW50Oy1tb3otbGV0dGVyLXNwYWNpbmc6LTAuMnB4ICFpbXBvcnRhbnQ7LW1zLWxldHRlci1zcGFjaW5nOi0wLjJweCAhaW1wb3J0YW50O2xldHRlci1zcGFjaW5nOi0wLjJweCAhaW1wb3J0YW50O2xpbmUtaGVpZ2h0OjI0cHggIWltcG9ydGFudDttYXJnaW4tdG9wOjFweCAhaW1wb3J0YW50O30uY3NzLTFqb3QweGR7Zm9udC1mYW1pbHk6J09wZW4gU2FucycsJ0hlbHZldGljYSBOZXVlJyxIZWx2ZXRpY2EsQXJpYWwsc2Fucy1zZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zaXplOjE0cHg7bGluZS1oZWlnaHQ6MjBweDtmb250LXNpemU6MTJweDtsaW5lLWhlaWdodDoxOHB4O2ZvbnQtd2VpZ2h0OjYwMDtjb2xvcjppbmhlcml0O3RleHQtYWxpZ246Y2VudGVyO21heC13aWR0aDoxMDAlO292ZXJmbG93OmhpZGRlbiAhaW1wb3J0YW50O3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXMgIWltcG9ydGFudDt3aGl0ZS1zcGFjZTpub3dyYXAgIWltcG9ydGFudDt3b3JkLXdyYXA6bm9ybWFsICFpbXBvcnRhbnQ7Zm9udC1mYW1pbHk6J1BvcHBpbnMnLCdIZWx2ZXRpY2EgTmV1ZScsSGVsdmV0aWNhLEFyaWFsLHNhbnMtc2VyaWYgIWltcG9ydGFudDtmb250LXNpemU6MTZweCAhaW1wb3J0YW50O2ZvbnQtd2VpZ2h0OjUwMCAhaW1wb3J0YW50Oy13ZWJraXQtbGV0dGVyLXNwYWNpbmc6LTAuMnB4ICFpbXBvcnRhbnQ7LW1vei1sZXR0ZXItc3BhY2luZzotMC4ycHggIWltcG9ydGFudDstbXMtbGV0dGVyLXNwYWNpbmc6LTAuMnB4ICFpbXBvcnRhbnQ7bGV0dGVyLXNwYWNpbmc6LTAuMnB4ICFpbXBvcnRhbnQ7bGluZS1oZWlnaHQ6MjRweCAhaW1wb3J0YW50O21hcmdpbi10b3A6MXB4ICFpbXBvcnRhbnQ7fS5jc3MtNDRmbWlme2JhY2tncm91bmQtY29sb3I6cmdiYSgyMjQsNyw3LDEpO2NvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMSk7YmFja2dyb3VuZC1wb3NpdGlvbjpjYWxjKHZhcigtLW1vdXNlZG93bi14KSAtIGNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDIwMCkgLyAyKSBjYWxjKHZhcigtLW1vdXNlZG93bi15KSAtIGNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDIwMCkgLyAyKTtiYWNrZ3JvdW5kLXNpemU6Y2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMjAwKSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAyMDApO30uY3NzLTQ0Zm1pZjphY3RpdmV7Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwxKTt9LmNzcy00NGZtaWY6Zm9jdXN7YmFja2dyb3VuZC1jb2xvcjpyZ2IoMjQ5LDE5LDI3KTt9LmNzcy00NGZtaWY6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjpyZ2IoMjQ0LDEzLDIxKTtjb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LDEpO30uY3NzLTQ0Zm1pZltkYXRhLWFjdGl2YXRlZD0ndHJ1ZSdde2JhY2tncm91bmQtY29sb3I6cmdiKDI0NCwxMywyMSk7YmFja2dyb3VuZC1pbWFnZTpyYWRpYWwtZ3JhZGllbnQocmdiYSgwLDAsMCwwLjA1KSAxJSx0cmFuc3BhcmVudCAxJSk7fS5jc3MtNDRmbWlmW2RhdGEtYWN0aXZhdGVkPSd0cnVlJ106YWN0aXZley13ZWJraXQtdHJhbnNpdGlvbjphbGwgMHM7dHJhbnNpdGlvbjphbGwgMHM7YmFja2dyb3VuZC1jb2xvcjpyZ2IoMjQ0LDEzLDIxKTtiYWNrZ3JvdW5kLWltYWdlOnJhZGlhbC1ncmFkaWVudCh0cmFuc3BhcmVudCAxJSx0cmFuc3BhcmVudCAxJSk7YmFja2dyb3VuZC1wb3NpdGlvbjpjYWxjKHZhcigtLW1vdXNlZG93bi14KSAtIGNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDEuMCkgLyAyKSBjYWxjKHZhcigtLW1vdXNlZG93bi15KSAtIGNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDEuMCkgLyAyKTtiYWNrZ3JvdW5kLXNpemU6Y2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMS4wKSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAxLjApO30uY3NzLTE2czJuZ2V7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmU7LW1vei1hcHBlYXJhbmNlOm5vbmU7YXBwZWFyYW5jZTpub25lO2JhY2tncm91bmQtaW1hZ2U6bm9uZTtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7Ym9yZGVyOjA7Ym9yZGVyLXJhZGl1czo0cHg7Ym94LXNoYWRvdzpub25lO2JveC1zaXppbmc6Ym9yZGVyLWJveDtkaXNwbGF5Oi13ZWJraXQtaW5saW5lLWJveDtkaXNwbGF5Oi13ZWJraXQtaW5saW5lLWZsZXg7ZGlzcGxheTotbXMtaW5saW5lLWZsZXhib3g7ZGlzcGxheTppbmxpbmUtZmxleDtjdXJzb3I6cG9pbnRlcjtoZWlnaHQ6NDBweDstd2Via2l0LWJveC1wYWNrOmNlbnRlcjstd2Via2l0LWp1c3RpZnktY29udGVudDpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjttYXJnaW46MDtwYWRkaW5nLWJvdHRvbTo4cHg7cGFkZGluZy1sZWZ0OjE2cHg7cGFkZGluZy1yaWdodDoxNnB4O3BhZGRpbmctdG9wOjhweDtwb3NpdGlvbjpyZWxhdGl2ZTt0ZXh0LWFsaWduOmNlbnRlcjstd2Via2l0LXRyYW5zaXRpb246YWxsIDAuOHM7dHJhbnNpdGlvbjphbGwgMC44czstd2Via2l0LXRyYW5zaXRpb24tcHJvcGVydHk6YmFja2dyb3VuZC1pbWFnZSxiYWNrZ3JvdW5kLWNvbG9yLGJhY2tncm91bmQtcG9zaXRpb24sYmFja2dyb3VuZC1zaXplLGJvcmRlci1jb2xvcixib3gtc2hhZG93LG9wYWNpdHk7dHJhbnNpdGlvbi1wcm9wZXJ0eTpiYWNrZ3JvdW5kLWltYWdlLGJhY2tncm91bmQtY29sb3IsYmFja2dyb3VuZC1wb3NpdGlvbixiYWNrZ3JvdW5kLXNpemUsYm9yZGVyLWNvbG9yLGJveC1zaGFkb3csb3BhY2l0eTstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7dmVydGljYWwtYWxpZ246bWlkZGxlO3dpZHRoOmF1dG87YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIyNCw3LDcsMSk7Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwxKTtiYWNrZ3JvdW5kLXBvc2l0aW9uOmNhbGModmFyKC0tbW91c2Vkb3duLXgpIC0gY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMjAwKSAvIDIpIGNhbGModmFyKC0tbW91c2Vkb3duLXkpIC0gY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMjAwKSAvIDIpO2JhY2tncm91bmQtc2l6ZTpjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAyMDApIGNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDIwMCk7fS5jc3MtMTZzMm5nZTpkaXNhYmxlZHtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjM1LDIzNSwyMzUsMSk7YmFja2dyb3VuZC1pbWFnZTpub25lO2JvcmRlci1jb2xvcjpyZ2JhKDIzNSwyMzUsMjM1LDEpO2JveC1zaGFkb3c6bm9uZTtjb2xvcjpyZ2JhKDIwMCwyMDEsMjAyLDEpO291dGxpbmU6bm9uZTtwb2ludGVyLWV2ZW50czpub25lOy13ZWJraXQtdHJhbnNpdGlvbjpub25lO3RyYW5zaXRpb246bm9uZTt9LmNzcy0xNnMybmdlOmhvdmVye2JveC1zaGFkb3c6MCAxcHggNHB4IDAgcmdiYSgwLDAsMCwwLjMpO30uY3NzLTE2czJuZ2U6Zm9jdXN7Ym94LXNoYWRvdzowIDAgNHB4IDFweCByZ2JhKDAsMCwwLDAuMzUpO291dGxpbmU6bm9uZTt9QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjU5OXB4KXsucmVzcG9uc2l2ZSAuY3NzLTE2czJuZ2V7Ym94LXNoYWRvdzpub25lO2ZvbnQtd2VpZ2h0Om5vcm1hbDt9fUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDo3ODBweCl7LnJlc3BvbnNpdmUtYml6IC5jc3MtMTZzMm5nZXtib3gtc2hhZG93Om5vbmU7Zm9udC13ZWlnaHQ6bm9ybWFsO319QG1lZGlhIChwb2ludGVyOmNvYXJzZSl7LmNzcy0xNnMybmdlOmhvdmVye2JveC1zaGFkb3c6bm9uZTt9fS5jc3MtMTZzMm5nZSArIGF7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLWxlZnQ6MTJweDt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7fS5jc3MtMTZzMm5nZSArIGE6bm90KFtkYXRhLWJ1dHRvbj0ndHJ1ZSddKSwuY3NzLTE2czJuZ2UgKyAuYnV0dG9uLXNpYmxpbmc6bm90KFtkYXRhLWJ1dHRvbj0ndHJ1ZSddKXtmb250LXNpemU6MTRweDtsaW5lLWhlaWdodDoxLjI4NTcxZW07bWFyZ2luLWJvdHRvbTo3cHg7bWFyZ2luLXRvcDo5cHg7fUBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDo1OTlweCl7LnJlc3BvbnNpdmUgLmNzcy0xNnMybmdlICsgYTpub3QoW2RhdGEtYnV0dG9uPSd0cnVlJ10pLC5yZXNwb25zaXZlIC5jc3MtMTZzMm5nZSArIC5idXR0b24tc2libGluZzpub3QoW2RhdGEtYnV0dG9uPSd0cnVlJ10pe2ZvbnQtc2l6ZToxNnB4O2xpbmUtaGVpZ2h0OjEuMzEyNTBlbTt9fS5pZSAuY3NzLTE2czJuZ2UgPiBzcGFue2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246cmVsYXRpdmU7fS5jc3MtMTZzMm5nZTphY3RpdmV7Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwxKTt9LmNzcy0xNnMybmdlOmZvY3Vze2JhY2tncm91bmQtY29sb3I6cmdiKDI0OSwxOSwyNyk7fS5jc3MtMTZzMm5nZTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOnJnYigyNDQsMTMsMjEpO2NvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMSk7fS5jc3MtMTZzMm5nZVtkYXRhLWFjdGl2YXRlZD0ndHJ1ZSdde2JhY2tncm91bmQtY29sb3I6cmdiKDI0NCwxMywyMSk7YmFja2dyb3VuZC1pbWFnZTpyYWRpYWwtZ3JhZGllbnQocmdiYSgwLDAsMCwwLjA1KSAxJSx0cmFuc3BhcmVudCAxJSk7fS5jc3MtMTZzMm5nZVtkYXRhLWFjdGl2YXRlZD0ndHJ1ZSddOmFjdGl2ZXstd2Via2l0LXRyYW5zaXRpb246YWxsIDBzO3RyYW5zaXRpb246YWxsIDBzO2JhY2tncm91bmQtY29sb3I6cmdiKDI0NCwxMywyMSk7YmFja2dyb3VuZC1pbWFnZTpyYWRpYWwtZ3JhZGllbnQodHJhbnNwYXJlbnQgMSUsdHJhbnNwYXJlbnQgMSUpO2JhY2tncm91bmQtcG9zaXRpb246Y2FsYyh2YXIoLS1tb3VzZWRvd24teCkgLSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAxLjApIC8gMikgY2FsYyh2YXIoLS1tb3VzZWRvd24teSkgLSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAxLjApIC8gMik7YmFja2dyb3VuZC1zaXplOmNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDEuMCkgY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMS4wKTt9LmNzcy1ydGNkbHV7LXdlYmtpdC10ZXh0LWRlY29yYXRpb246bm9uZTt0ZXh0LWRlY29yYXRpb246bm9uZTstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlcjstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstd2Via2l0LWFwcGVhcmFuY2U6bm9uZTstbW96LWFwcGVhcmFuY2U6bm9uZTthcHBlYXJhbmNlOm5vbmU7YmFja2dyb3VuZC1pbWFnZTpub25lO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtib3JkZXI6MDtib3JkZXItcmFkaXVzOjRweDtib3gtc2hhZG93Om5vbmU7Ym94LXNpemluZzpib3JkZXItYm94O2Rpc3BsYXk6LXdlYmtpdC1pbmxpbmUtYm94O2Rpc3BsYXk6LXdlYmtpdC1pbmxpbmUtZmxleDtkaXNwbGF5Oi1tcy1pbmxpbmUtZmxleGJveDtkaXNwbGF5OmlubGluZS1mbGV4O2N1cnNvcjpwb2ludGVyO2hlaWdodDo0MHB4Oy13ZWJraXQtYm94LXBhY2s6Y2VudGVyOy13ZWJraXQtanVzdGlmeS1jb250ZW50OmNlbnRlcjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO21hcmdpbjowO3BhZGRpbmctYm90dG9tOjhweDtwYWRkaW5nLWxlZnQ6MTZweDtwYWRkaW5nLXJpZ2h0OjE2cHg7cGFkZGluZy10b3A6OHB4O3Bvc2l0aW9uOnJlbGF0aXZlO3RleHQtYWxpZ246Y2VudGVyOy13ZWJraXQtdHJhbnNpdGlvbjphbGwgMC44czt0cmFuc2l0aW9uOmFsbCAwLjhzOy13ZWJraXQtdHJhbnNpdGlvbi1wcm9wZXJ0eTpiYWNrZ3JvdW5kLWltYWdlLGJhY2tncm91bmQtY29sb3IsYmFja2dyb3VuZC1wb3NpdGlvbixiYWNrZ3JvdW5kLXNpemUsYm9yZGVyLWNvbG9yLGJveC1zaGFkb3csb3BhY2l0eTt0cmFuc2l0aW9uLXByb3BlcnR5OmJhY2tncm91bmQtaW1hZ2UsYmFja2dyb3VuZC1jb2xvcixiYWNrZ3JvdW5kLXBvc2l0aW9uLGJhY2tncm91bmQtc2l6ZSxib3JkZXItY29sb3IsYm94LXNoYWRvdyxvcGFjaXR5Oy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7d2lkdGg6YXV0bztiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjI0LDcsNywxKTtjb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LDEpO2JhY2tncm91bmQtcG9zaXRpb246Y2FsYyh2YXIoLS1tb3VzZWRvd24teCkgLSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAyMDApIC8gMikgY2FsYyh2YXIoLS1tb3VzZWRvd24teSkgLSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAyMDApIC8gMik7YmFja2dyb3VuZC1zaXplOmNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDIwMCkgY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMjAwKTt9LmNzcy1ydGNkbHU6YWN0aXZlLC5jc3MtcnRjZGx1OmZvY3VzLC5jc3MtcnRjZGx1OmhvdmVyLC5jc3MtcnRjZGx1OnZpc2l0ZWR7LXdlYmtpdC10ZXh0LWRlY29yYXRpb246bm9uZTt0ZXh0LWRlY29yYXRpb246bm9uZTt9LmNzcy1ydGNkbHU6ZGlzYWJsZWR7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIzNSwyMzUsMjM1LDEpO2JhY2tncm91bmQtaW1hZ2U6bm9uZTtib3JkZXItY29sb3I6cmdiYSgyMzUsMjM1LDIzNSwxKTtib3gtc2hhZG93Om5vbmU7Y29sb3I6cmdiYSgyMDAsMjAxLDIwMiwxKTtvdXRsaW5lOm5vbmU7cG9pbnRlci1ldmVudHM6bm9uZTstd2Via2l0LXRyYW5zaXRpb246bm9uZTt0cmFuc2l0aW9uOm5vbmU7fS5jc3MtcnRjZGx1OmhvdmVye2JveC1zaGFkb3c6MCAxcHggNHB4IDAgcmdiYSgwLDAsMCwwLjMpO30uY3NzLXJ0Y2RsdTpmb2N1c3tib3gtc2hhZG93OjAgMCA0cHggMXB4IHJnYmEoMCwwLDAsMC4zNSk7b3V0bGluZTpub25lO31AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NTk5cHgpey5yZXNwb25zaXZlIC5jc3MtcnRjZGx1e2JveC1zaGFkb3c6bm9uZTtmb250LXdlaWdodDpub3JtYWw7fX1AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NzgwcHgpey5yZXNwb25zaXZlLWJpeiAuY3NzLXJ0Y2RsdXtib3gtc2hhZG93Om5vbmU7Zm9udC13ZWlnaHQ6bm9ybWFsO319QG1lZGlhIChwb2ludGVyOmNvYXJzZSl7LmNzcy1ydGNkbHU6aG92ZXJ7Ym94LXNoYWRvdzpub25lO319LmNzcy1ydGNkbHUgKyBhe2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbi1sZWZ0OjEycHg7dmVydGljYWwtYWxpZ246bWlkZGxlO30uY3NzLXJ0Y2RsdSArIGE6bm90KFtkYXRhLWJ1dHRvbj0ndHJ1ZSddKSwuY3NzLXJ0Y2RsdSArIC5idXR0b24tc2libGluZzpub3QoW2RhdGEtYnV0dG9uPSd0cnVlJ10pe2ZvbnQtc2l6ZToxNHB4O2xpbmUtaGVpZ2h0OjEuMjg1NzFlbTttYXJnaW4tYm90dG9tOjdweDttYXJnaW4tdG9wOjlweDt9QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjU5OXB4KXsucmVzcG9uc2l2ZSAuY3NzLXJ0Y2RsdSArIGE6bm90KFtkYXRhLWJ1dHRvbj0ndHJ1ZSddKSwucmVzcG9uc2l2ZSAuY3NzLXJ0Y2RsdSArIC5idXR0b24tc2libGluZzpub3QoW2RhdGEtYnV0dG9uPSd0cnVlJ10pe2ZvbnQtc2l6ZToxNnB4O2xpbmUtaGVpZ2h0OjEuMzEyNTBlbTt9fS5pZSAuY3NzLXJ0Y2RsdSA+IHNwYW57ZGlzcGxheTpibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTt9LmNzcy1ydGNkbHU6YWN0aXZle2NvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMSk7fS5jc3MtcnRjZGx1OmZvY3Vze2JhY2tncm91bmQtY29sb3I6cmdiKDI0OSwxOSwyNyk7fS5jc3MtcnRjZGx1OmhvdmVye2JhY2tncm91bmQtY29sb3I6cmdiKDI0NCwxMywyMSk7Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwxKTt9LmNzcy1ydGNkbHVbZGF0YS1hY3RpdmF0ZWQ9J3RydWUnXXtiYWNrZ3JvdW5kLWNvbG9yOnJnYigyNDQsMTMsMjEpO2JhY2tncm91bmQtaW1hZ2U6cmFkaWFsLWdyYWRpZW50KHJnYmEoMCwwLDAsMC4wNSkgMSUsdHJhbnNwYXJlbnQgMSUpO30uY3NzLXJ0Y2RsdVtkYXRhLWFjdGl2YXRlZD0ndHJ1ZSddOmFjdGl2ZXstd2Via2l0LXRyYW5zaXRpb246YWxsIDBzO3RyYW5zaXRpb246YWxsIDBzO2JhY2tncm91bmQtY29sb3I6cmdiKDI0NCwxMywyMSk7YmFja2dyb3VuZC1pbWFnZTpyYWRpYWwtZ3JhZGllbnQodHJhbnNwYXJlbnQgMSUsdHJhbnNwYXJlbnQgMSUpO2JhY2tncm91bmQtcG9zaXRpb246Y2FsYyh2YXIoLS1tb3VzZWRvd24teCkgLSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAxLjApIC8gMikgY2FsYyh2YXIoLS1tb3VzZWRvd24teSkgLSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAxLjApIC8gMik7YmFja2dyb3VuZC1zaXplOmNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDEuMCkgY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMS4wKTt9LmNzcy0xeDJrYXd2e2ZvbnQtZmFtaWx5OidPcGVuIFNhbnMnLCdIZWx2ZXRpY2EgTmV1ZScsSGVsdmV0aWNhLEFyaWFsLHNhbnMtc2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc2l6ZToxNHB4O2xpbmUtaGVpZ2h0OjIwcHg7Y29sb3I6cmdiYSg0NSw0Niw0NywxKTt0ZXh0LWFsaWduOmxlZnQ7fTwvc3R5bGU+PHN0eWxlIGRhdGEtZW1vdGlvbi1jc3M9IjExOGhia2ggMTFndmJ0cCB3YzVlZGQgMWN1YXppZyA1dm5xZTIgMW1yeGR5biAxMXVjNnNpIDUzYzE4OCAxeDJrYXd2IDFiaGdqZ3ciPi5jc3MtMTE4aGJraHtmb250LWZhbWlseTonT3BlbiBTYW5zJywnSGVsdmV0aWNhIE5ldWUnLEhlbHZldGljYSxBcmlhbCxzYW5zLXNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXNpemU6MTRweDtsaW5lLWhlaWdodDoyMHB4O2ZvbnQtc2l6ZToxNnB4O2xpbmUtaGVpZ2h0OjIycHg7Zm9udC13ZWlnaHQ6Ym9sZDtjb2xvcjpyZ2JhKDQ1LDQ2LDQ3LDEpO3RleHQtYWxpZ246bGVmdDt9LmNzcy0xMWd2YnRwe2ZvbnQtZmFtaWx5OidPcGVuIFNhbnMnLCdIZWx2ZXRpY2EgTmV1ZScsSGVsdmV0aWNhLEFyaWFsLHNhbnMtc2VyaWY7Ym9yZGVyLXJhZGl1czozcHg7LXdlYmtpdC10ZXh0LWRlY29yYXRpb246bm9uZTt0ZXh0LWRlY29yYXRpb246bm9uZTtmb250LXdlaWdodDpub3JtYWw7Y29sb3I6cmdiYSgxMTAsMTEyLDExNCwxKTtmb250LXNpemU6MTRweDtsaW5lLWhlaWdodDoyMHB4O30uY3NzLTExZ3ZidHA6aG92ZXJ7LXdlYmtpdC10ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lO3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7fS5jc3MtMTFndmJ0cDpmb2N1c3tvdXRsaW5lOjJweCBzb2xpZCByZ2JhKDIsMTIyLDE1MSwxKTtvdXRsaW5lLW9mZnNldDoxcHg7fS5jc3MtMTFndmJ0cDpmb2N1czpub3QoOmZvY3VzLXZpc2libGUpe291dGxpbmU6MDt9LmNzcy0xMWd2YnRwOmZvY3VzLXZpc2libGV7b3V0bGluZTpub25lO2JveC1zaGFkb3c6MCAwIDAgMnB4IHdoaXRlLDAgMCAwIDRweCByZ2JhKDIsMTIyLDE1MSwxKTt9LmNzcy13YzVlZGR7Zm9udC1mYW1pbHk6J09wZW4gU2FucycsJ0hlbHZldGljYSBOZXVlJyxIZWx2ZXRpY2EsQXJpYWwsc2Fucy1zZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zaXplOjE0cHg7bGluZS1oZWlnaHQ6MjBweDtjb2xvcjpyZ2JhKDExMCwxMTIsMTE0LDEpO3RleHQtYWxpZ246bGVmdDt9LmNzcy0xY3Vhemlne2ZvbnQtZmFtaWx5OidPcGVuIFNhbnMnLCdIZWx2ZXRpY2EgTmV1ZScsSGVsdmV0aWNhLEFyaWFsLHNhbnMtc2VyaWY7Ym9yZGVyLXJhZGl1czozcHg7LXdlYmtpdC10ZXh0LWRlY29yYXRpb246bm9uZTt0ZXh0LWRlY29yYXRpb246bm9uZTtmb250LXdlaWdodDo2MDA7Y29sb3I6aW5oZXJpdDtmb250LXNpemU6MTRweDtsaW5lLWhlaWdodDoyMHB4O30uY3NzLTFjdWF6aWc6aG92ZXJ7LXdlYmtpdC10ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lO3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7fS5jc3MtMWN1YXppZzpmb2N1c3tvdXRsaW5lOjJweCBzb2xpZCByZ2JhKDIsMTIyLDE1MSwxKTtvdXRsaW5lLW9mZnNldDoxcHg7fS5jc3MtMWN1YXppZzpmb2N1czpub3QoOmZvY3VzLXZpc2libGUpe291dGxpbmU6MDt9LmNzcy0xY3VhemlnOmZvY3VzLXZpc2libGV7b3V0bGluZTpub25lO2JveC1zaGFkb3c6MCAwIDAgMnB4IHdoaXRlLDAgMCAwIDRweCByZ2JhKDIsMTIyLDE1MSwxKTt9W2RhdGEtZm9udC13ZWlnaHQ9J3NlbWlib2xkJ10gLmNzcy0xY3VhemlnLFtkYXRhLWZvbnQtd2VpZ2h0PSdzZW1pYm9sZCddICsgLmNzcy0xY3VhemlnLFtkYXRhLWZvbnQtd2VpZ2h0PSdib2xkJ10gLmNzcy0xY3VhemlnLFtkYXRhLWZvbnQtd2VpZ2h0PSdib2xkJ10gKyAuY3NzLTFjdWF6aWd7Zm9udC13ZWlnaHQ6Ym9sZDt9LmNzcy01dm5xZTJ7Zm9udC1mYW1pbHk6J09wZW4gU2FucycsJ0hlbHZldGljYSBOZXVlJyxIZWx2ZXRpY2EsQXJpYWwsc2Fucy1zZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zaXplOjE0cHg7bGluZS1oZWlnaHQ6MjBweDtjb2xvcjppbmhlcml0O3RleHQtYWxpZ246bGVmdDt9LmNzcy0xbXJ4ZHlue3dpZHRoOjE2cHg7aGVpZ2h0OjE2cHg7ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246bWlkZGxlO3Bvc2l0aW9uOnJlbGF0aXZlO292ZXJmbG93OmhpZGRlbjt0b3A6LTAuMWVtO2ZpbGw6cmdiYSgxMTAsMTEyLDExNCwxKTt9LmNzcy0xbXJ4ZHluOjpiZWZvcmV7cG9zaXRpb246YWJzb2x1dGU7ZGlzcGxheTpibG9jaztsZWZ0OjA7fS5jc3MtMW1yeGR5bjo6YWZ0ZXJ7Y29udGVudDonJztkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDtyaWdodDowO3RvcDowO2JvdHRvbTowO30uY3NzLTFtcnhkeW4gc3Zne3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7ZmlsbDppbmhlcml0O2Rpc3BsYXk6YmxvY2s7bGVmdDowO3RvcDowO3JpZ2h0OjA7Ym90dG9tOjA7fS5jc3MtMTF1YzZzaXtmb250LWZhbWlseTonT3BlbiBTYW5zJywnSGVsdmV0aWNhIE5ldWUnLEhlbHZldGljYSxBcmlhbCxzYW5zLXNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXNpemU6MTRweDtsaW5lLWhlaWdodDoyMHB4O2NvbG9yOnJnYmEoNDUsNDYsNDcsMSk7dGV4dC1hbGlnbjpsZWZ0O30uY3NzLTExdWM2c2k6OmFmdGVye2NvbG9yOmluaGVyaXQgIWltcG9ydGFudDtmb250LXNpemU6aW5oZXJpdCAhaW1wb3J0YW50Oy13ZWJraXQtdGV4dC1kZWNvcmF0aW9uOm5vbmUgIWltcG9ydGFudDt0ZXh0LWRlY29yYXRpb246bm9uZSAhaW1wb3J0YW50O3RleHQtaW5kZW50OjAgIWltcG9ydGFudDtkaXNwbGF5OmlubGluZS1ibG9jayAhaW1wb3J0YW50O21hcmdpbi1yaWdodDowO2NvbnRlbnQ6J1wwMGEwXDIwMjJcMDBhMCc7fS5jc3MtNTNjMTg4e2ZvbnQtZmFtaWx5OidPcGVuIFNhbnMnLCdIZWx2ZXRpY2EgTmV1ZScsSGVsdmV0aWNhLEFyaWFsLHNhbnMtc2VyaWY7Ym9yZGVyLXJhZGl1czozcHg7LXdlYmtpdC10ZXh0LWRlY29yYXRpb246bm9uZTt0ZXh0LWRlY29yYXRpb246bm9uZTtmb250LXdlaWdodDpub3JtYWw7Y29sb3I6cmdiYSgyLDEyMiwxNTEsMSk7Zm9udC1zaXplOjE0cHg7bGluZS1oZWlnaHQ6MjBweDt9LmNzcy01M2MxODg6aG92ZXJ7LXdlYmtpdC10ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lO3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7fS5jc3MtNTNjMTg4OmZvY3Vze291dGxpbmU6MnB4IHNvbGlkIHJnYmEoMiwxMjIsMTUxLDEpO291dGxpbmUtb2Zmc2V0OjFweDt9LmNzcy01M2MxODg6Zm9jdXM6bm90KDpmb2N1cy12aXNpYmxlKXtvdXRsaW5lOjA7fS5jc3MtNTNjMTg4OmZvY3VzLXZpc2libGV7b3V0bGluZTpub25lO2JveC1zaGFkb3c6MCAwIDAgMnB4IHdoaXRlLDAgMCAwIDRweCByZ2JhKDIsMTIyLDE1MSwxKTt9LmNzcy0xeDJrYXd2e2ZvbnQtZmFtaWx5OidPcGVuIFNhbnMnLCdIZWx2ZXRpY2EgTmV1ZScsSGVsdmV0aWNhLEFyaWFsLHNhbnMtc2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc2l6ZToxNHB4O2xpbmUtaGVpZ2h0OjIwcHg7Y29sb3I6cmdiYSg0NSw0Niw0NywxKTt0ZXh0LWFsaWduOmxlZnQ7fS5jc3MtMWJoZ2pnd3tmb250LWZhbWlseTonT3BlbiBTYW5zJywnSGVsdmV0aWNhIE5ldWUnLEhlbHZldGljYSxBcmlhbCxzYW5zLXNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXNpemU6MTRweDtsaW5lLWhlaWdodDoyMHB4O2ZvbnQtc2l6ZToxMnB4O2xpbmUtaGVpZ2h0OjE4cHg7Y29sb3I6cmdiYSgxMTAsMTEyLDExNCwxKTt0ZXh0LWFsaWduOmxlZnQ7fTwvc3R5bGU+CgogICAgICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBtZWRpYT0iYWxsIiBocmVmPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvcHVibGljL3llbHBfbWFpbi55amktNmQxYzYyOGEyNzNmMTYxMjFhZjcuY2h1bmsuY3NzIj48bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBtZWRpYT0iYWxsIiBocmVmPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvcHVibGljL3llbHBfbWFpbi55amktNWY1MjFiMjFiOGIxZWJkZTFlNWUuY2h1bmsuY3NzIj4KCiAgICAgICAgICAgIDwhLS1baWYgKElFIDkpfChsdCBJRSA5KSBdPiA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBtZWRpYT0iYWxsIiBocmVmPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvMi93d3cvY3NzL2YzYmFhYWVlYTdjMC93d3ctcGtnLW1haW4uY3NzIj4KICAgICAgICAgICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgbWVkaWE9ImFsbCIgaHJlZj0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzLzIvd3d3L2Nzcy9hYjE2YzkxODE2ODkvd3d3LXBrZy1tb3JlLmNzcyI+IDwhW2VuZGlmXS0tPgogICAgICAgICAgICA8IS0tW2lmIChndCBJRSA5KXwhKElFKV0+PCEtLT4gPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgbWVkaWE9ImFsbCIgaHJlZj0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzLzIvd3d3L2Nzcy85YzQwMmNmNzJlNmIvd3d3LXBrZy5jc3MiPiA8IS0tPCFbZW5kaWZdLS0+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBtZWRpYT0iYWxsIiBocmVmPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvMi93d3cvY3NzLzY2YWY3MjFkNGM3ZC9tZW51LmNzcyI+CgogICAgPHNjcmlwdD4gICAgICAgICAgICAgICAgd2luZG93LnlQZXJmVGltaW5ncy5wdXNoKFsiaGVhZDpjc3M6ZW5kIiwgKG5ldyBEYXRlKCkpLmdldFRpbWUoKV0pOwo8L3NjcmlwdD4KCiAgICAgICAgICAgIDwhLS0gY3NzLW1pZGRsZXdhcmU6IGJvZHkgdGFnIHBsYWNlaG9sZGVyIC0tPjxzY3JpcHQ+KGZ1bmN0aW9uKCkgeyB2YXIgZT13aW5kb3cueWVscC5jcml0aWNhbF9jc3M7ZnVuY3Rpb24gdCh0KXtmb3IodmFyIG8gaW4gZS5jc3NfbWFwKWlmKCFlLmNzc19tYXBbb10ubG9hZGVkKXJldHVybjtzZXRUaW1lb3V0KHQsMCl9ZnVuY3Rpb24gbyhvLG4pe3ZhciBhPWUuY3NzX21hcFtvXSxpPWEubGlua1RhZyxyPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ3N0eWxlW2RhdGEtY3JpdGljYWwtY3NzPSInK28rJyJdJyk7aWYociYmaSYmIWEubG9hZGVkKXt2YXIgcz1mdW5jdGlvbihlLHQpe3ZhciBvPWUuY2xvbmVOb2RlKCk7by5yZWw9InN0eWxlc2hlZXQiLG8ubWVkaWE9ImFsbCIsby5ocmVmPWUuaHJlZjt2YXIgbj1mdW5jdGlvbigpe3RoaXMub25sb2FkPW51bGwsdGhpcy5zZXRBdHRyaWJ1dGUoIm9ubG9hZCIsbnVsbCksdC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHQpfTtyZXR1cm4gby5zZXRBdHRyaWJ1dGUoIm9ubG9hZCIsbiksby5vbmxvYWQ9bixvfShpLHIpO3IuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KCJhZnRlcmVuZCIscyksaS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGkpLGUuY3NzX21hcFtvXS5sb2FkZWQ9ITAsdChuKX1lbHNlIHQobil9ZnVuY3Rpb24gbih0LG4pe2lmKCFlLmNzc19tYXB8fDA9PT1PYmplY3Qua2V5cyhlLmNzc19tYXApLmxlbmd0aClyZXR1cm4gdm9pZCBzZXRUaW1lb3V0KHQsMCk7KG4/W25dOk9iamVjdC5rZXlzKGUuY3NzX21hcCkpLmZvckVhY2goKGZ1bmN0aW9uKG4pe2UubG93UHJpb3JpdHlNb2RlP28obix0KTpzZXRUaW1lb3V0KG8sMCxuLHQpfSkpfWUuY3JpdGljYWxDU1NSZWFkeT1mdW5jdGlvbih0KXtuKHQpO3ZhciBvPWUucmVjb3JkRG9uZS5iaW5kKHdpbmRvdyk7ZS5yZWNvcmREb25lPWZ1bmN0aW9uKGUsYSl7by5jYWxsKHRoaXMsZSxhKSxuKHQsYS5kYXRhc2V0LmNyaXRpY2FsQ3NzKX19OyB9KSgpPC9zY3JpcHQ+CgogICAgPHNjcmlwdD4gICAgICAgICAgICAgICAgd2luZG93LnllbHAuY3JpdGljYWxfY3NzLmNyaXRpY2FsQ1NTUmVhZHkoKTsKPC9zY3JpcHQ+CgogICAgICAgIAoKICAgIDxzY3JpcHQ+ICAgICAgICAgICAgICAgICAgICB3aW5kb3cueVBlcmZUaW1pbmdzLnB1c2goWyJoZWFkOmVuZCIsIChuZXcgRGF0ZSgpKS5nZXRUaW1lKCldKTsKPC9zY3JpcHQ+CgoKICAgICAgICAgICAgICAgICAgICAgICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3llbHAiIGl0ZW1wcm9wPSJzYW1lQXMiIGlkPSJzaXRlbGluay1wcm9maWxlLWZhY2Vib29rIj4KICAgICAgICA8bGluayBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL3llbHAiIGl0ZW1wcm9wPSJzYW1lQXMiIGlkPSJzaXRlbGluay1wcm9maWxlLXR3aXR0ZXIiPgogICAgICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9jb21wYW55LzMxNTE3IiBpdGVtcHJvcD0ic2FtZUFzIiBpZD0ic2l0ZWxpbmstcHJvZmlsZS1saW5rZWRpbiI+CiAgICAgICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly9pbnN0YWdyYW0uY29tL3llbHAiIGl0ZW1wcm9wPSJzYW1lQXMiIGlkPSJzaXRlbGluay1wcm9maWxlLWluc3RhZ3JhbSI+CgogICAgPG1ldGEgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9XZWJTaXRlIiBpdGVtcmVmPSJzaXRlbmFtZSBzaXRlbGluayAgc2l0ZWxpbmstcHJvZmlsZS1mYWNlYm9vayBzaXRlbGluay1wcm9maWxlLXR3aXR0ZXIgc2l0ZWxpbmstcHJvZmlsZS1saW5rZWRpbiBzaXRlbGluay1wcm9maWxlLWluc3RhZ3JhbSI+CiAgICA8bWV0YSBpdGVtcHJvcD0ibmFtZSIgY29udGVudD0iWWVscCIgaWQ9InNpdGVuYW1lIj4KICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vd3d3LnllbHAuY29tLyIgaXRlbXByb3A9InVybCIgaWQ9InNpdGVsaW5rIj4KCgogICAgICAgICAgICA8c2NyaXB0PiAgICAgICAgICAgIGRvY3VtZW50LmNvb2tpZSA9ICJ4Y2o9MXw1QWZaXzBHZEJaYllSSWdDNUZFaUxYanNDUk5JMno3RDJFY0lncDJVanUwOyBEb21haW49LnllbHAuY29tOyBleHBpcmVzPVR1ZSwgMjQgSmFuIDIwMjMgMTU6MTE6NDMgR01UOyBNYXgtQWdlPTc3NzYwMDA7IFBhdGg9LyI7Cjwvc2NyaXB0PgoKCiAgICA8c2NyaXB0PiAgICAgICAgICAgIHdpbmRvdy55ZWxwLmd1diA9ICJBNDM1OTJDRDM4MkYzMzNDIjsKICAgICAgICAgICAgd2luZG93LnllbHAudW5pcXVlX3JlcXVlc3RfaWQgPSAiMzIxNjQ4OWNlMWZjMGUzMiI7Cjwvc2NyaXB0PgogICAgPC9oZWFkPgoKCgoKCgoKCiAgICA8Ym9keSBpZD0ieWVscF9tYWluX2JvZHkiIGNsYXNzPSJqcXVlcnkgY291bnRyeS11cyBsb2dnZWQtb3V0Ij4KCiAgICAgICAgICAgIDxzY3JpcHQ+KGZ1bmN0aW9uIChkLCB3KSB7CiAgICB2YXIgc3VwcG9ydHNTVkcgPSAoCiAgICAgICAgISFkLmNyZWF0ZUVsZW1lbnROUyAmJgogICAgICAgICEhZC5jcmVhdGVFbGVtZW50TlMoCiAgICAgICAgICAgICdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsCiAgICAgICAgICAgICdzdmcnCiAgICAgICAgKS5jcmVhdGVTVkdSZWN0CiAgICApOwogICAgdmFyIGNkblBhdGggPSAnaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzL3NydjAvc3ZnX2ljb25zL2FiMjNjNTBjZjVkNi9hc3NldHMvc3ZnX3Nwcml0ZS5qcyc7CiAgICB2YXIgaGVhZCA9IGQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXTsKICAgIGZ1bmN0aW9uIGZhbGxiYWNrKCkgewogICAgICAgIHZhciBsaW5rID0gZC5jcmVhdGVFbGVtZW50KCdsaW5rJyk7CiAgICAgICAgbGluay5yZWwgPSAnc3R5bGVzaGVldCc7CiAgICAgICAgbGluay5ocmVmID0gJ2h0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2Fzc2V0cy9zcnYwL3N2Z19pY29ucy8xYzllZDU3OTg3NzIvYXNzZXRzL3Nwcml0ZS5jc3MnOwogICAgICAgIGhlYWQuYXBwZW5kQ2hpbGQobGluayk7CiAgICB9CiAgICBpZiAoIXN1cHBvcnRzU1ZHKSB7CiAgICAgICAgZmFsbGJhY2soKTsKICAgICAgICByZXR1cm47CiAgICB9CiAgICBpZiAoIXcueWVscCkgewogICAgICAgIHcueWVscCA9IHt9OwogICAgfQogICAgdy55ZWxwLl9faW5qZWN0U3ZnU3ByaXRlc2hlZXQgPSBmdW5jdGlvbiAoc3ZnKSB7CiAgICAgICAgZG9jdW1lbnQuYm9keS5pbnNlcnRBZGphY2VudEhUTUwoJ2FmdGVyYmVnaW4nLCBzdmcpOwogICAgICAgIGRlbGV0ZSB3aW5kb3cueWVscC5fX2luamVjdFN2Z1Nwcml0ZXNoZWV0OwogICAgfQogICAgZnVuY3Rpb24gb25FcnJvcigpIHsKICAgICAgICBkLmRvY3VtZW50RWxlbWVudC5jbGFzc05hbWUgPSBbCiAgICAgICAgICAgIGQuZG9jdW1lbnRFbGVtZW50LmNsYXNzTmFtZSwKICAgICAgICAgICAgJ2ljb24tc3ZnLXVuYXZhaWxhYmxlJwogICAgICAgIF0uam9pbignICcpOwogICAgICAgIGZhbGxiYWNrKCk7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgICB2YXIgc2NyaXB0ID0gZC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTsKICAgIHNjcmlwdC5hc3luYyA9IHRydWU7CiAgICBzY3JpcHQub25lcnJvciA9IG9uRXJyb3I7CiAgICBzY3JpcHQuc3JjID0gY2RuUGF0aCArICc/Y2FsbGJhY2s9d2luZG93LnllbHAuX19pbmplY3RTdmdTcHJpdGVzaGVldCc7CiAgICBoZWFkLmFwcGVuZENoaWxkKHNjcmlwdCk7Cn0oZG9jdW1lbnQsIHdpbmRvdykpOzwvc2NyaXB0Pgo8bm9zY3JpcHQ+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2Fzc2V0cy9zcnYwL3N2Z19pY29ucy8xYzllZDU3OTg3NzIvYXNzZXRzL3Nwcml0ZS5jc3MiPgo8L25vc2NyaXB0PgoKICAgICAgICAgICAgPHNjcmlwdCBpZD0ieWVscC1qcy1lcnJvci1yZXBvcnRpbmctaW5pdC1lcnJvci1yZXBvcnRpbmciIHR5cGU9ImFwcGxpY2F0aW9uL2pzb24iPnsiY29uZmlnIjogeyJyZWxlYXNlIjogImQ4OWY4NmU5YWMzNzc5NzlmMGRjOGIwNGZmOThhZjEzZGQ5N2ZjMDIiLCAibWV0YURhdGEiOiB7InByb2plY3ROYW1lIjogInllbHBfbWFpbiJ9LCAiZW52aXJvbm1lbnQiOiAicHJvZCIsICJibGFja2xpc3QiOiB7ImxvY2F0aW9uIjogWyJ5bFthLXpdLVthLXpdKlxcLmpzIl0sICJ0eXBlIjogW10sICJtZXNzYWdlIjogWyJCbG9ja2VkIGEgZnJhbWUgd2l0aCBvcmlnaW4iXX0sICJzYW1wbGVSYXRlIjogMS4wfSwgImFwaUtleSI6ICJhYzBjMjc4NjdkMzkxMmNlNTcxNGZmMTMxMDQxYWY0ZiIsICJlbmFibGVkIjogdHJ1ZX08L3NjcmlwdD4KCiAgICA8c2NyaXB0PiAgICAgICAgICAgICAgICB3aW5kb3cueVBlcmZUaW1pbmdzLnB1c2goWyJib2R5OnN0YXJ0IiwgKG5ldyBEYXRlKCkpLmdldFRpbWUoKV0pOwo8L3NjcmlwdD4KCiAgICA8c2NyaXB0PiAgICAgICAgICAgICAgICB3aW5kb3cucGFnZVNwZWVkQ3VzdG9tVGltZXN0YW1wc1snYm9keTpzdGFydCddID0gKG5ldyBEYXRlKCkpLmdldFRpbWUoKTsKPC9zY3JpcHQ+CgogICAgICAgICAgICA8ZGl2IGlkPSJmYi1yb290Ij48L2Rpdj4KCgoKCgogICAgICAgIDxkaXYgaWQ9IndyYXAiIGNsYXNzPSJsYW5nLWVuIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBhZ2UtaGVhZGVyIj4KCgogICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgICAgICAgICAgICAgICAgIAoKCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHllbHAtcmVhY3Qtcm9vdD48ZGl2IGRhdGEtaHlwZXJub3ZhLWtleT0ieWVscF9tYWluX19kODlmODZlOWFjMzc3OTc5ZjBkYzhiMDRmZjk4YWYxM2RkOTdmYzAyX195ZWxwX21haW5fX0NvbnN1bWVySGVhZGVyX19keW5hbWljIiBkYXRhLWh5cGVybm92YS1pZD0iMDRiOTYxMWQtZWEzYS00NjgwLThhMjQtNzhiNzQwYzE0OGQxIj48ZGl2IGNsYXNzPSIgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiIGRhdGEtbGNwLXRhcmdldC1pZD0iQ09OU1VNRVJfSEVBREVSIj48ZGl2IGNsYXNzPSIgY29uc3VtZXItaGVhZGVyLWNvbnRhaW5lcl9fMzczYzBfXzJ0M0RPIGJvcmRlci0tYm90dG9tX18zNzNjMF9fMjE5dzggYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsgYmFja2dyb3VuZC1jb2xvci0td2hpdGVfXzM3M2MwX19kZDAwYiI+PGRpdiBjbGFzcz0iIGNvbnN1bWVyLWhlYWRlcl9fMzczYzBfXzNpQjBoIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIj48ZGl2IGNsYXNzPSIgYXJyYW5nZV9fMzczYzBfXzJpVldLIHZlcnRpY2FsLWFsaWduLW1pZGRsZV9fMzczYzBfXzJzcjJhIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIj48ZGl2IGNsYXNzPSIgbG9nby1hcnJhbmdlLXVuaXRfXzM3M2MwX18zYy1maCBhcnJhbmdlLXVuaXRfXzM3M2MwX18zWFBrRSBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGRpdiBjbGFzcz0iIG1hcmdpbi1yNF9fMzczYzBfXzJxTzAxIG1hcmdpbi1zbS1yMF9fMzczYzBfX1FsMktXIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIj48ZGl2IGNsYXNzPSIgbG9nb19fMzczYzBfXzE3UFZPIGxvZ28taW1hZ2VfXzM3M2MwX18zbVhzLSBsb2dvLWNvbnRhaW5lcl9fMzczYzBfXzNnTkFtIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIiBzdHlsZT0iYmFja2dyb3VuZC1pbWFnZTp1cmwoaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzL3NydjAveWVscF9kZXNpZ25fY2RuLzdlZjcxYmY3N2EzMy9hc3NldHMvaW1nL3llbHBfbG9nb19kZXNrdG9wL2Nvb2tib29rLnN2ZykiIGlkPSJsb2dvIiBkYXRhLWFuYWx5dGljcy1sYWJlbD0ibG9nbyI+PGEgaHJlZj0iLyIgY2xhc3M9ImxvZ28tbGlua19fMzczYzBfXzEwSEZuIGNzcy0xbHdjY3g0IiByb2xlPSJsaW5rIj5ZZWxwPC9hPjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9IiBzZWFyY2gtc3VnZ2VzdC1hcnJhbmdlLXVuaXRfXzM3M2MwX192SnFnSiBhcnJhbmdlLXVuaXRfXzM3M2MwX18zWFBrRSBhcnJhbmdlLXVuaXQtZmlsbF9fMzczYzBfXzM4WmRlIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIj48ZGl2IGNsYXNzPSIgc2VhcmNoLXN1Z2dlc3QtY29udGFpbmVyLW91dGVyX18zNzNjMF9fM3hILWogYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxkaXYgY2xhc3M9IiBzZWFyY2gtc3VnZ2VzdC1jb250YWluZXItaW5uZXJfXzM3M2MwX18zRFEtZyBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGRpdiBjbGFzcz0iIGFycmFuZ2VfXzM3M2MwX18yaVZXSyBndXR0ZXItMl9fMzczYzBfXzFhNVhtIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIj48ZGl2IGNsYXNzPSIgYXJyYW5nZS11bml0X18zNzNjMF9fM1hQa0UgYXJyYW5nZS11bml0LWZpbGxfXzM3M2MwX18zOFpkZSBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGRpdiBjbGFzcz0iIHNlYXJjaC1zdWdnZXN0X18zNzNjMF9fMU9XdHciPjxkaXYgY2xhc3M9IiI+PGZvcm0gY2xhc3M9IiBmaW5kLW5lYXItZm9ybV9fMzczYzBfXzNFUmltIiBhY3Rpb249Ii9zZWFyY2giIGlkPSJoZWFkZXJfZmluZF9mb3JtIiByb2xlPSJzZWFyY2giIG1ldGhvZD0iZ2V0Ij48ZGl2IGNsYXNzPSIgdW5kZWZpbmVkIGFycmFuZ2VfXzM3M2MwX18zYTJlYSBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX18zQ082QiI+PGRpdiBjbGFzcz0iIGFycmFuZ2UtdW5pdF9fMzczYzBfX3p0T2gxIGFycmFuZ2UtdW5pdC1maWxsX18zNzNjMF9fM1JKdnIgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fM0NPNkIiPjxkaXYgY2xhc3M9IiBmaW5kLW5lYXItYXJyYW5nZV9fMzczYzBfXzF5UUQ5IGZpbmQtbmVhci1hcnJhbmdlLS1oZWlnaHRfXzM3M2MwX18xV1NZeCBhcnJhbmdlX18zNzNjMF9fM2EyZWEgbGF5b3V0LWVxdWFsX18zNzNjMF9fMW8xQmggYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fM0NPNkIiPjxkaXYgY2xhc3M9IiBmaW5kLW5lYXItYXJyYW5nZS11bml0X18zNzNjMF9fMzRESnIgYXJyYW5nZS11bml0X18zNzNjMF9fenRPaDEgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fM0NPNkIiPjxsYWJlbCBjbGFzcz0iIGxhYmVsX18zNzNjMF9fMzJnSzIgcHNldWRvLWlucHV0X18zNzNjMF9fRlhHM2EgcHNldWRvLWlucHV0LS1maW5kLW5lYXJfXzM3M2MwX18xd1czdCBwc2V1ZG8taW5wdXQtLWZpbmRfXzM3M2MwX18zVzNNRiBwc2V1ZG8taW5wdXRfXzM3M2MwX19Yb0JZbSIgZm9yPSJzZWFyY2hfZGVzY3JpcHRpb24iPjxzcGFuIGNsYXNzPSIgcHNldWRvLWlucHV0LXRleHRfXzM3M2MwX18zeWVLMCBkaXNwbGF5LS1pbmxpbmVfXzM3M2MwX19MZUpHNyBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX18zQ082QiI+PGRpdiBjbGFzcz0iIHBzZXVkby1pbnB1dC1pY29uLWNvbnRhaW5lcl9fMzczYzBfXzFYY3BNIG1hcmdpbi1yMS01X18zNzNjMF9fMjk5ZWcgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fM0NPNkIiPjxzcGFuIGFyaWEtaGlkZGVuPSJmYWxzZSIgcm9sZT0iaW1nIiBhcmlhLWxhYmVsPSJGaW5kIiBjbGFzcz0iaWNvbi0tMjQtc2VhcmNoLXYyIHBzZXVkby1pbnB1dC1pY29uX18zNzNjMF9fMm1pREQgY3NzLW55aXR3MCI+PHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIGNsYXNzPSJpY29uX3N2ZyI+PHBhdGggZD0iTTIxLjg1MyAyMC4zNTVsLTMuNDQ0LTMuNDQzYTkuNDI4IDkuNDI4IDAgMTAtMTYuNzYxLTYuMTcxIDkuNDI4IDkuNDI4IDAgMDAxNS4zNDggNy41ODZsMy40NDMgMy40NDJhMSAxIDAgMTAxLjQxNC0xLjQxNHpNNS44MiAxNi4yNDVhNy40MjkgNy40MjkgMCAxMTUuMjUzIDIuMTc1IDcuMzggNy4zOCAwIDAxLTUuMjUzLTIuMTc2eiIvPjwvc3ZnPjwvc3Bhbj48L2Rpdj48L3NwYW4+PGRpdiBjbGFzcz0iIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfXzNDTzZCIG92ZXJmbG93LS1oaWRkZW5fXzM3M2MwX19oRXJSbyI+PGRpdiBjbGFzcz0iIHR5cGVhaGVhZF9fMzczYzBfXzNnSmlyIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfXzNDTzZCIj48aW5wdXQgdHlwZT0idGV4dCIgYXV0b0NvbXBsZXRlPSJvZmYiIHNwZWxsY2hlY2s9ImZhbHNlIiB0YWJpbmRleD0iLTEiIHZhbHVlPSIiIGFyaWEtaGlkZGVuPSJ0cnVlIiBkaXNhYmxlZD0iIiBjbGFzcz0iaW5wdXRfXzM3M2MwX18zN0owcSBpbnB1dF9fMzczYzBfXzF6a0FHIGhpZGRlbi1pbnB1dF9fMzczYzBfXzFnRDVnIiBwbGFjZWhvbGRlcj0iICIvPjxpbnB1dCB0eXBlPSJ0ZXh0IiB2YWx1ZT0iIiBhdXRvQ29tcGxldGU9Im9mZiIgYXJpYS1hdXRvY29tcGxldGU9Imxpc3QiIHRhYmluZGV4PSIwIiBuYW1lPSJmaW5kX2Rlc2MiIGRhdGEtdGVzdGlkPSJzdWdnZXN0LWRlc2MtaW5wdXQiIGlkPSJzZWFyY2hfZGVzY3JpcHRpb24iIGNsYXNzPSJpbnB1dF9fMzczYzBfXzM3SjBxIGlucHV0X18zNzNjMF9fMXprQUcgb3JpZ2luYWwtaW5wdXRfXzM3M2MwX18xQU1mZSIgcGxhY2Vob2xkZXI9InRhY29zLCBjaGVhcCBkaW5uZXIsIE1heOKAmXMiLz48L2Rpdj48L2Rpdj48L2xhYmVsPjwvZGl2PjxkaXYgY2xhc3M9IiBsb2NhdGlvbi1hcnJhbmdlLXVuaXRfXzM3M2MwX18zbUhfcCBmaW5kLW5lYXItYXJyYW5nZS11bml0X18zNzNjMF9fMzRESnIgcmVzcG9uc2l2ZS1ndXR0ZXJfXzM3M2MwX18xQm11MyBhcnJhbmdlLXVuaXRfXzM3M2MwX196dE9oMSBsYXlvdXQtc3RhY2stZ3V0dGVyLTEtNV9fMzczYzBfXzJaTE9qIG1hcmdpbi1zbS10MS01X18zNzNjMF9fM0tWaEwgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fM0NPNkIiPjxsYWJlbCBjbGFzcz0iIGxhYmVsX18zNzNjMF9fMzJnSzIgcHNldWRvLWlucHV0X18zNzNjMF9fRlhHM2EgcHNldWRvLWlucHV0LS1maW5kLW5lYXJfXzM3M2MwX18xd1czdCBwc2V1ZG8taW5wdXQtLW5lYXJfXzM3M2MwX18xaVk3NCBwc2V1ZG8taW5wdXRfXzM3M2MwX19Yb0JZbSIgZm9yPSJzZWFyY2hfbG9jYXRpb24iPjxzcGFuIGNsYXNzPSIgcHNldWRvLWlucHV0LXRleHRfXzM3M2MwX18zeWVLMCBkaXNwbGF5LS1pbmxpbmVfXzM3M2MwX19MZUpHNyBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX18zQ082QiI+PGRpdiBjbGFzcz0iIHBzZXVkby1pbnB1dC1pY29uLWNvbnRhaW5lcl9fMzczYzBfXzFYY3BNIG1hcmdpbi1yMS01X18zNzNjMF9fMjk5ZWcgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fM0NPNkIiPjxzcGFuIGFyaWEtaGlkZGVuPSJmYWxzZSIgcm9sZT0iaW1nIiBhcmlhLWxhYmVsPSJOZWFyIiBjbGFzcz0iaWNvbi0tMjQtbWFya2VyLXYyIHBzZXVkby1pbnB1dC1pY29uX18zNzNjMF9fMm1pREQgY3NzLW55aXR3MCI+PHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIGNsYXNzPSJpY29uX3N2ZyI+PHBhdGggZD0iTTEyIDEuMDM5YTkuMjUgOS4yNSAwIDAxNi41NCAxNS43OTFsLTUuODMgNS44NEExIDEgMCAwMTEyIDIzYTEgMSAwIDAxLS43MS0uMjlsLTUuODMtNS44OEE5LjI1IDkuMjUgMCAwMTEyIDEuMDM5em0wIDIuMDExYTcuMjUgNy4yNSAwIDAwLTUuMTMgMTIuMzdMMTIgMjAuNTRsNS4xMy01LjEyQTcuMjUgNy4yNSAwIDAwMTIgMy4wNXptMCAzLjJhNCA0IDAgMTEwIDggNCA0IDAgMDEwLTh6bTAgMmEyIDIgMCAxMDAgNCAyIDIgMCAwMDAtNHoiLz48L3N2Zz48L3NwYW4+PC9kaXY+PC9zcGFuPjxkaXYgY2xhc3M9IiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX18zQ082QiBvdmVyZmxvdy0taGlkZGVuX18zNzNjMF9faEVyUm8iPjxkaXYgY2xhc3M9IiB0eXBlYWhlYWRfXzM3M2MwX18zZ0ppciBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX18zQ082QiI+PGlucHV0IHR5cGU9InRleHQiIGF1dG9Db21wbGV0ZT0ib2ZmIiBzcGVsbGNoZWNrPSJmYWxzZSIgdGFiaW5kZXg9Ii0xIiB2YWx1ZT0iIiBhcmlhLWhpZGRlbj0idHJ1ZSIgZGlzYWJsZWQ9IiIgY2xhc3M9ImlucHV0X18zNzNjMF9fMzdKMHEgaW5wdXRfXzM3M2MwX18xemtBRyBoaWRkZW4taW5wdXRfXzM3M2MwX18xZ0Q1ZyIgcGxhY2Vob2xkZXI9IiAiLz48aW5wdXQgdHlwZT0idGV4dCIgdmFsdWU9IlNhbiBGcmFuY2lzY28sIENBIiBhdXRvQ29tcGxldGU9Im9mZiIgYXJpYS1hdXRvY29tcGxldGU9Imxpc3QiIHRhYmluZGV4PSIwIiBkYXRhLXRlc3RpZD0ic3VnZ2VzdC1sb2NhdGlvbi1pbnB1dCIgaWQ9InNlYXJjaF9sb2NhdGlvbiIgY2xhc3M9ImlucHV0X18zNzNjMF9fMzdKMHEgaW5wdXRfXzM3M2MwX18xemtBRyBvcmlnaW5hbC1pbnB1dF9fMzczYzBfXzFBTWZlIiBwbGFjZWhvbGRlcj0iYWRkcmVzcywgbmVpZ2hib3Job29kLCBjaXR5LCBzdGF0ZSBvciB6aXAiLz48L2Rpdj48aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJmaW5kX2xvYyIgdmFsdWU9IlNhbiBGcmFuY2lzY28sIENBIi8+PC9kaXY+PC9sYWJlbD48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPSIgYnV0dG9ucy1hcnJhbmdlLXVuaXRfXzM3M2MwX18ybWlPOSBhcnJhbmdlLXVuaXRfXzM3M2MwX196dE9oMSBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX18zQ082QiI+PGRpdiBjbGFzcz0iIGFycmFuZ2VfXzM3M2MwX18zYTJlYSBndXR0ZXItNl9fMzczYzBfX1YtZ2l0IGxheW91dC1lcXVhbF9fMzczYzBfXzFvMUJoIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfXzNDTzZCIj48ZGl2IGNsYXNzPSIgaGlkZGVuLW5vbi1yZXNwb25zaXZlLWlubGluZS1ibG9jayByZXNwb25zaXZlLXZpc2libGUtc21hbGwtaW5saW5lLWJsb2NrIGFycmFuZ2UtdW5pdF9fMzczYzBfX3p0T2gxIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfXzNDTzZCIj48c3R5bGUgZGF0YS1lbW90aW9uLWNzcz0iMXEyaXJ3MSI+LmNzcy0xcTJpcncxe2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyOjFweCBzb2xpZCByZ2JhKDIwMCwyMDEsMjAyLDEpO2NvbG9yOnJnYmEoNDUsNDYsNDcsMSk7YmFja2dyb3VuZC1wb3NpdGlvbjpjYWxjKHZhcigtLW1vdXNlZG93bi14KSAtIGNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDIwMCkgLyAyKSBjYWxjKHZhcigtLW1vdXNlZG93bi15KSAtIGNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDIwMCkgLyAyKTtiYWNrZ3JvdW5kLXNpemU6Y2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMjAwKSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAyMDApO30uY3NzLTFxMmlydzE6YWN0aXZle2NvbG9yOnJnYmEoNDUsNDYsNDcsMSk7fS5jc3MtMXEyaXJ3MTpkaXNhYmxlZHtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlcjoxcHggc29saWQgcmdiYSgyMjcsMjI3LDIyNywxKTt9LmNzcy0xcTJpcncxOmZvY3Vze2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwwLjEyKTt9LmNzcy0xcTJpcncxOmhvdmVye2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwwLjEyKTtjb2xvcjpyZ2JhKDQ1LDQ2LDQ3LDEpO2JveC1zaGFkb3c6bm9uZTt9LmNzcy0xcTJpcncxW2RhdGEtYWN0aXZhdGVkPSd0cnVlJ117YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLDAuMTIpO2JhY2tncm91bmQtaW1hZ2U6cmFkaWFsLWdyYWRpZW50KHJnYmEoMCwwLDAsMC4wNSkgMSUsdHJhbnNwYXJlbnQgMSUpO30uY3NzLTFxMmlydzFbZGF0YS1hY3RpdmF0ZWQ9J3RydWUnXTphY3RpdmV7LXdlYmtpdC10cmFuc2l0aW9uOmFsbCAwczt0cmFuc2l0aW9uOmFsbCAwcztiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsMC4xMik7YmFja2dyb3VuZC1pbWFnZTpyYWRpYWwtZ3JhZGllbnQodHJhbnNwYXJlbnQgMSUsdHJhbnNwYXJlbnQgMSUpO2JhY2tncm91bmQtcG9zaXRpb246Y2FsYyh2YXIoLS1tb3VzZWRvd24teCkgLSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAxLjApIC8gMikgY2FsYyh2YXIoLS1tb3VzZWRvd24teSkgLSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAxLjApIC8gMik7YmFja2dyb3VuZC1zaXplOmNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDEuMCkgY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMS4wKTt9PC9zdHlsZT48c3R5bGUgZGF0YS1lbW90aW9uLWNzcz0iemJ5ejU1Ij4uY3NzLXpieXo1NXstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlcjstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstd2Via2l0LWFwcGVhcmFuY2U6bm9uZTstbW96LWFwcGVhcmFuY2U6bm9uZTthcHBlYXJhbmNlOm5vbmU7YmFja2dyb3VuZC1pbWFnZTpub25lO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtib3JkZXI6MDtib3JkZXItcmFkaXVzOjRweDtib3gtc2hhZG93Om5vbmU7Ym94LXNpemluZzpib3JkZXItYm94O2Rpc3BsYXk6LXdlYmtpdC1pbmxpbmUtYm94O2Rpc3BsYXk6LXdlYmtpdC1pbmxpbmUtZmxleDtkaXNwbGF5Oi1tcy1pbmxpbmUtZmxleGJveDtkaXNwbGF5OmlubGluZS1mbGV4O2N1cnNvcjpwb2ludGVyO2hlaWdodDo0MHB4Oy13ZWJraXQtYm94LXBhY2s6Y2VudGVyOy13ZWJraXQtanVzdGlmeS1jb250ZW50OmNlbnRlcjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO21hcmdpbjowO3BhZGRpbmctYm90dG9tOjhweDtwYWRkaW5nLWxlZnQ6MTZweDtwYWRkaW5nLXJpZ2h0OjE2cHg7cGFkZGluZy10b3A6OHB4O3Bvc2l0aW9uOnJlbGF0aXZlO3RleHQtYWxpZ246Y2VudGVyOy13ZWJraXQtdHJhbnNpdGlvbjphbGwgMC44czt0cmFuc2l0aW9uOmFsbCAwLjhzOy13ZWJraXQtdHJhbnNpdGlvbi1wcm9wZXJ0eTpiYWNrZ3JvdW5kLWltYWdlLGJhY2tncm91bmQtY29sb3IsYmFja2dyb3VuZC1wb3NpdGlvbixiYWNrZ3JvdW5kLXNpemUsYm9yZGVyLWNvbG9yLGJveC1zaGFkb3csb3BhY2l0eTt0cmFuc2l0aW9uLXByb3BlcnR5OmJhY2tncm91bmQtaW1hZ2UsYmFja2dyb3VuZC1jb2xvcixiYWNrZ3JvdW5kLXBvc2l0aW9uLGJhY2tncm91bmQtc2l6ZSxib3JkZXItY29sb3IsYm94LXNoYWRvdyxvcGFjaXR5Oy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7d2lkdGg6YXV0bztiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlcjoxcHggc29saWQgcmdiYSgyMDAsMjAxLDIwMiwxKTtjb2xvcjpyZ2JhKDQ1LDQ2LDQ3LDEpO2JhY2tncm91bmQtcG9zaXRpb246Y2FsYyh2YXIoLS1tb3VzZWRvd24teCkgLSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAyMDApIC8gMikgY2FsYyh2YXIoLS1tb3VzZWRvd24teSkgLSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAyMDApIC8gMik7YmFja2dyb3VuZC1zaXplOmNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDIwMCkgY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMjAwKTt9LmNzcy16Ynl6NTU6ZGlzYWJsZWR7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIzNSwyMzUsMjM1LDEpO2JhY2tncm91bmQtaW1hZ2U6bm9uZTtib3JkZXItY29sb3I6cmdiYSgyMzUsMjM1LDIzNSwxKTtib3gtc2hhZG93Om5vbmU7Y29sb3I6cmdiYSgyMDAsMjAxLDIwMiwxKTtvdXRsaW5lOm5vbmU7cG9pbnRlci1ldmVudHM6bm9uZTstd2Via2l0LXRyYW5zaXRpb246bm9uZTt0cmFuc2l0aW9uOm5vbmU7fS5jc3MtemJ5ejU1OmhvdmVye2JveC1zaGFkb3c6MCAxcHggNHB4IDAgcmdiYSgwLDAsMCwwLjMpO30uY3NzLXpieXo1NTpmb2N1c3tib3gtc2hhZG93OjAgMCA0cHggMXB4IHJnYmEoMCwwLDAsMC4zNSk7b3V0bGluZTpub25lO31AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NTk5cHgpey5yZXNwb25zaXZlIC5jc3MtemJ5ejU1e2JveC1zaGFkb3c6bm9uZTtmb250LXdlaWdodDpub3JtYWw7fX1AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NzgwcHgpey5yZXNwb25zaXZlLWJpeiAuY3NzLXpieXo1NXtib3gtc2hhZG93Om5vbmU7Zm9udC13ZWlnaHQ6bm9ybWFsO319QG1lZGlhIChwb2ludGVyOmNvYXJzZSl7LmNzcy16Ynl6NTU6aG92ZXJ7Ym94LXNoYWRvdzpub25lO319LmNzcy16Ynl6NTUgKyBhe2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbi1sZWZ0OjEycHg7dmVydGljYWwtYWxpZ246bWlkZGxlO30uY3NzLXpieXo1NSArIGE6bm90KFtkYXRhLWJ1dHRvbj0ndHJ1ZSddKSwuY3NzLXpieXo1NSArIC5idXR0b24tc2libGluZzpub3QoW2RhdGEtYnV0dG9uPSd0cnVlJ10pe2ZvbnQtc2l6ZToxNHB4O2xpbmUtaGVpZ2h0OjEuMjg1NzFlbTttYXJnaW4tYm90dG9tOjdweDttYXJnaW4tdG9wOjlweDt9QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjU5OXB4KXsucmVzcG9uc2l2ZSAuY3NzLXpieXo1NSArIGE6bm90KFtkYXRhLWJ1dHRvbj0ndHJ1ZSddKSwucmVzcG9uc2l2ZSAuY3NzLXpieXo1NSArIC5idXR0b24tc2libGluZzpub3QoW2RhdGEtYnV0dG9uPSd0cnVlJ10pe2ZvbnQtc2l6ZToxNnB4O2xpbmUtaGVpZ2h0OjEuMzEyNTBlbTt9fS5pZSAuY3NzLXpieXo1NSA+IHNwYW57ZGlzcGxheTpibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTt9LmNzcy16Ynl6NTU6YWN0aXZle2NvbG9yOnJnYmEoNDUsNDYsNDcsMSk7fS5jc3MtemJ5ejU1OmRpc2FibGVke2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyOjFweCBzb2xpZCByZ2JhKDIyNywyMjcsMjI3LDEpO30uY3NzLXpieXo1NTpmb2N1c3tiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsMC4xMik7fS5jc3MtemJ5ejU1OmhvdmVye2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwwLjEyKTtjb2xvcjpyZ2JhKDQ1LDQ2LDQ3LDEpO2JveC1zaGFkb3c6bm9uZTt9LmNzcy16Ynl6NTVbZGF0YS1hY3RpdmF0ZWQ9J3RydWUnXXtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsMC4xMik7YmFja2dyb3VuZC1pbWFnZTpyYWRpYWwtZ3JhZGllbnQocmdiYSgwLDAsMCwwLjA1KSAxJSx0cmFuc3BhcmVudCAxJSk7fS5jc3MtemJ5ejU1W2RhdGEtYWN0aXZhdGVkPSd0cnVlJ106YWN0aXZley13ZWJraXQtdHJhbnNpdGlvbjphbGwgMHM7dHJhbnNpdGlvbjphbGwgMHM7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLDAuMTIpO2JhY2tncm91bmQtaW1hZ2U6cmFkaWFsLWdyYWRpZW50KHRyYW5zcGFyZW50IDElLHRyYW5zcGFyZW50IDElKTtiYWNrZ3JvdW5kLXBvc2l0aW9uOmNhbGModmFyKC0tbW91c2Vkb3duLXgpIC0gY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMS4wKSAvIDIpIGNhbGModmFyKC0tbW91c2Vkb3duLXkpIC0gY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMS4wKSAvIDIpO2JhY2tncm91bmQtc2l6ZTpjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAxLjApIGNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDEuMCk7fTwvc3R5bGU+PHN0eWxlIGRhdGEtZW1vdGlvbi1jc3M9IjFjbHpyNmgiPi5jc3MtMWNsenI2aHstd2Via2l0LXRleHQtZGVjb3JhdGlvbjpub25lO3RleHQtZGVjb3JhdGlvbjpub25lOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy13ZWJraXQtYm94LWFsaWduOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyOy13ZWJraXQtYXBwZWFyYW5jZTpub25lOy1tb3otYXBwZWFyYW5jZTpub25lO2FwcGVhcmFuY2U6bm9uZTtiYWNrZ3JvdW5kLWltYWdlOm5vbmU7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2JvcmRlcjowO2JvcmRlci1yYWRpdXM6NHB4O2JveC1zaGFkb3c6bm9uZTtib3gtc2l6aW5nOmJvcmRlci1ib3g7ZGlzcGxheTotd2Via2l0LWlubGluZS1ib3g7ZGlzcGxheTotd2Via2l0LWlubGluZS1mbGV4O2Rpc3BsYXk6LW1zLWlubGluZS1mbGV4Ym94O2Rpc3BsYXk6aW5saW5lLWZsZXg7Y3Vyc29yOnBvaW50ZXI7aGVpZ2h0OjQwcHg7LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7bWFyZ2luOjA7cGFkZGluZy1ib3R0b206OHB4O3BhZGRpbmctbGVmdDoxNnB4O3BhZGRpbmctcmlnaHQ6MTZweDtwYWRkaW5nLXRvcDo4cHg7cG9zaXRpb246cmVsYXRpdmU7dGV4dC1hbGlnbjpjZW50ZXI7LXdlYmtpdC10cmFuc2l0aW9uOmFsbCAwLjhzO3RyYW5zaXRpb246YWxsIDAuOHM7LXdlYmtpdC10cmFuc2l0aW9uLXByb3BlcnR5OmJhY2tncm91bmQtaW1hZ2UsYmFja2dyb3VuZC1jb2xvcixiYWNrZ3JvdW5kLXBvc2l0aW9uLGJhY2tncm91bmQtc2l6ZSxib3JkZXItY29sb3IsYm94LXNoYWRvdyxvcGFjaXR5O3RyYW5zaXRpb24tcHJvcGVydHk6YmFja2dyb3VuZC1pbWFnZSxiYWNrZ3JvdW5kLWNvbG9yLGJhY2tncm91bmQtcG9zaXRpb24sYmFja2dyb3VuZC1zaXplLGJvcmRlci1jb2xvcixib3gtc2hhZG93LG9wYWNpdHk7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lO3ZlcnRpY2FsLWFsaWduOm1pZGRsZTt3aWR0aDphdXRvO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyOjFweCBzb2xpZCByZ2JhKDIwMCwyMDEsMjAyLDEpO2NvbG9yOnJnYmEoNDUsNDYsNDcsMSk7YmFja2dyb3VuZC1wb3NpdGlvbjpjYWxjKHZhcigtLW1vdXNlZG93bi14KSAtIGNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDIwMCkgLyAyKSBjYWxjKHZhcigtLW1vdXNlZG93bi15KSAtIGNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDIwMCkgLyAyKTtiYWNrZ3JvdW5kLXNpemU6Y2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMjAwKSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAyMDApO30uY3NzLTFjbHpyNmg6YWN0aXZlLC5jc3MtMWNsenI2aDpmb2N1cywuY3NzLTFjbHpyNmg6aG92ZXIsLmNzcy0xY2x6cjZoOnZpc2l0ZWR7LXdlYmtpdC10ZXh0LWRlY29yYXRpb246bm9uZTt0ZXh0LWRlY29yYXRpb246bm9uZTt9LmNzcy0xY2x6cjZoOmRpc2FibGVke2JhY2tncm91bmQtY29sb3I6cmdiYSgyMzUsMjM1LDIzNSwxKTtiYWNrZ3JvdW5kLWltYWdlOm5vbmU7Ym9yZGVyLWNvbG9yOnJnYmEoMjM1LDIzNSwyMzUsMSk7Ym94LXNoYWRvdzpub25lO2NvbG9yOnJnYmEoMjAwLDIwMSwyMDIsMSk7b3V0bGluZTpub25lO3BvaW50ZXItZXZlbnRzOm5vbmU7LXdlYmtpdC10cmFuc2l0aW9uOm5vbmU7dHJhbnNpdGlvbjpub25lO30uY3NzLTFjbHpyNmg6aG92ZXJ7Ym94LXNoYWRvdzowIDFweCA0cHggMCByZ2JhKDAsMCwwLDAuMyk7fS5jc3MtMWNsenI2aDpmb2N1c3tib3gtc2hhZG93OjAgMCA0cHggMXB4IHJnYmEoMCwwLDAsMC4zNSk7b3V0bGluZTpub25lO31AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NTk5cHgpey5yZXNwb25zaXZlIC5jc3MtMWNsenI2aHtib3gtc2hhZG93Om5vbmU7Zm9udC13ZWlnaHQ6bm9ybWFsO319QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjc4MHB4KXsucmVzcG9uc2l2ZS1iaXogLmNzcy0xY2x6cjZoe2JveC1zaGFkb3c6bm9uZTtmb250LXdlaWdodDpub3JtYWw7fX1AbWVkaWEgKHBvaW50ZXI6Y29hcnNlKXsuY3NzLTFjbHpyNmg6aG92ZXJ7Ym94LXNoYWRvdzpub25lO319LmNzcy0xY2x6cjZoICsgYXtkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tbGVmdDoxMnB4O3ZlcnRpY2FsLWFsaWduOm1pZGRsZTt9LmNzcy0xY2x6cjZoICsgYTpub3QoW2RhdGEtYnV0dG9uPSd0cnVlJ10pLC5jc3MtMWNsenI2aCArIC5idXR0b24tc2libGluZzpub3QoW2RhdGEtYnV0dG9uPSd0cnVlJ10pe2ZvbnQtc2l6ZToxNHB4O2xpbmUtaGVpZ2h0OjEuMjg1NzFlbTttYXJnaW4tYm90dG9tOjdweDttYXJnaW4tdG9wOjlweDt9QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjU5OXB4KXsucmVzcG9uc2l2ZSAuY3NzLTFjbHpyNmggKyBhOm5vdChbZGF0YS1idXR0b249J3RydWUnXSksLnJlc3BvbnNpdmUgLmNzcy0xY2x6cjZoICsgLmJ1dHRvbi1zaWJsaW5nOm5vdChbZGF0YS1idXR0b249J3RydWUnXSl7Zm9udC1zaXplOjE2cHg7bGluZS1oZWlnaHQ6MS4zMTI1MGVtO319LmllIC5jc3MtMWNsenI2aCA+IHNwYW57ZGlzcGxheTpibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTt9LmNzcy0xY2x6cjZoOmFjdGl2ZXtjb2xvcjpyZ2JhKDQ1LDQ2LDQ3LDEpO30uY3NzLTFjbHpyNmg6ZGlzYWJsZWR7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMjI3LDIyNywyMjcsMSk7fS5jc3MtMWNsenI2aDpmb2N1c3tiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsMC4xMik7fS5jc3MtMWNsenI2aDpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsMC4xMik7Y29sb3I6cmdiYSg0NSw0Niw0NywxKTtib3gtc2hhZG93Om5vbmU7fS5jc3MtMWNsenI2aFtkYXRhLWFjdGl2YXRlZD0ndHJ1ZSdde2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwwLjEyKTtiYWNrZ3JvdW5kLWltYWdlOnJhZGlhbC1ncmFkaWVudChyZ2JhKDAsMCwwLDAuMDUpIDElLHRyYW5zcGFyZW50IDElKTt9LmNzcy0xY2x6cjZoW2RhdGEtYWN0aXZhdGVkPSd0cnVlJ106YWN0aXZley13ZWJraXQtdHJhbnNpdGlvbjphbGwgMHM7dHJhbnNpdGlvbjphbGwgMHM7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLDAuMTIpO2JhY2tncm91bmQtaW1hZ2U6cmFkaWFsLWdyYWRpZW50KHRyYW5zcGFyZW50IDElLHRyYW5zcGFyZW50IDElKTtiYWNrZ3JvdW5kLXBvc2l0aW9uOmNhbGModmFyKC0tbW91c2Vkb3duLXgpIC0gY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMS4wKSAvIDIpIGNhbGModmFyKC0tbW91c2Vkb3duLXkpIC0gY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMS4wKSAvIDIpO2JhY2tncm91bmQtc2l6ZTpjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAxLjApIGNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDEuMCk7fTwvc3R5bGU+PGEgaHJlZj0iIyIgY2xhc3M9ImZpbmQtbmVhci1idXR0b25fXzM3M2MwX18xWXB4YyBjc3MtMWNsenI2aCIgZGF0YS1hY3RpdmF0ZWQ9ImZhbHNlIiBkYXRhLXRlc3RpZD0icmVzcG9uc2l2ZS1zdWdnZXN0LXN1Ym1pdCIgZGF0YS1idXR0b249InRydWUiPjxzdHlsZSBkYXRhLWVtb3Rpb24tY3NzPSIxaTk0aWY3Ij4uY3NzLTFpOTRpZjd7Zm9udC1mYW1pbHk6J1BvcHBpbnMnLCdIZWx2ZXRpY2EgTmV1ZScsSGVsdmV0aWNhLEFyaWFsLHNhbnMtc2VyaWYgIWltcG9ydGFudDtmb250LXNpemU6MTZweCAhaW1wb3J0YW50O2ZvbnQtd2VpZ2h0OjUwMCAhaW1wb3J0YW50Oy13ZWJraXQtbGV0dGVyLXNwYWNpbmc6LTAuMnB4ICFpbXBvcnRhbnQ7LW1vei1sZXR0ZXItc3BhY2luZzotMC4ycHggIWltcG9ydGFudDstbXMtbGV0dGVyLXNwYWNpbmc6LTAuMnB4ICFpbXBvcnRhbnQ7bGV0dGVyLXNwYWNpbmc6LTAuMnB4ICFpbXBvcnRhbnQ7bGluZS1oZWlnaHQ6MjRweCAhaW1wb3J0YW50O21hcmdpbi10b3A6MXB4ICFpbXBvcnRhbnQ7fTwvc3R5bGU+PHNwYW4gY2xhc3M9ImNzcy0xaTk0aWY3IGNzcy1uYWNxMDYiIGRhdGEtZm9udC13ZWlnaHQ9InNlbWlib2xkIj5DYW5jZWw8L3NwYW4+PC9hPjwvZGl2PjxkaXYgY2xhc3M9IiBhcnJhbmdlLXVuaXRfXzM3M2MwX196dE9oMSBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX18zQ082QiI+PHN0eWxlIGRhdGEtZW1vdGlvbi1jc3M9IjQ0Zm1pZiI+LmNzcy00NGZtaWZ7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIyNCw3LDcsMSk7Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwxKTtiYWNrZ3JvdW5kLXBvc2l0aW9uOmNhbGModmFyKC0tbW91c2Vkb3duLXgpIC0gY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMjAwKSAvIDIpIGNhbGModmFyKC0tbW91c2Vkb3duLXkpIC0gY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMjAwKSAvIDIpO2JhY2tncm91bmQtc2l6ZTpjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAyMDApIGNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDIwMCk7fS5jc3MtNDRmbWlmOmFjdGl2ZXtjb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LDEpO30uY3NzLTQ0Zm1pZjpmb2N1c3tiYWNrZ3JvdW5kLWNvbG9yOnJnYigyNDksMTksMjcpO30uY3NzLTQ0Zm1pZjpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOnJnYigyNDQsMTMsMjEpO2NvbG9yOnJnYmEoMjU1LDI1NSwyNTUsMSk7fS5jc3MtNDRmbWlmW2RhdGEtYWN0aXZhdGVkPSd0cnVlJ117YmFja2dyb3VuZC1jb2xvcjpyZ2IoMjQ0LDEzLDIxKTtiYWNrZ3JvdW5kLWltYWdlOnJhZGlhbC1ncmFkaWVudChyZ2JhKDAsMCwwLDAuMDUpIDElLHRyYW5zcGFyZW50IDElKTt9LmNzcy00NGZtaWZbZGF0YS1hY3RpdmF0ZWQ9J3RydWUnXTphY3RpdmV7LXdlYmtpdC10cmFuc2l0aW9uOmFsbCAwczt0cmFuc2l0aW9uOmFsbCAwcztiYWNrZ3JvdW5kLWNvbG9yOnJnYigyNDQsMTMsMjEpO2JhY2tncm91bmQtaW1hZ2U6cmFkaWFsLWdyYWRpZW50KHRyYW5zcGFyZW50IDElLHRyYW5zcGFyZW50IDElKTtiYWNrZ3JvdW5kLXBvc2l0aW9uOmNhbGModmFyKC0tbW91c2Vkb3duLXgpIC0gY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMS4wKSAvIDIpIGNhbGModmFyKC0tbW91c2Vkb3duLXkpIC0gY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMS4wKSAvIDIpO2JhY2tncm91bmQtc2l6ZTpjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAxLjApIGNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDEuMCk7fTwvc3R5bGU+PHN0eWxlIGRhdGEtZW1vdGlvbi1jc3M9IjE2czJuZ2UiPi5jc3MtMTZzMm5nZXstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlcjstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstd2Via2l0LWFwcGVhcmFuY2U6bm9uZTstbW96LWFwcGVhcmFuY2U6bm9uZTthcHBlYXJhbmNlOm5vbmU7YmFja2dyb3VuZC1pbWFnZTpub25lO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtib3JkZXI6MDtib3JkZXItcmFkaXVzOjRweDtib3gtc2hhZG93Om5vbmU7Ym94LXNpemluZzpib3JkZXItYm94O2Rpc3BsYXk6LXdlYmtpdC1pbmxpbmUtYm94O2Rpc3BsYXk6LXdlYmtpdC1pbmxpbmUtZmxleDtkaXNwbGF5Oi1tcy1pbmxpbmUtZmxleGJveDtkaXNwbGF5OmlubGluZS1mbGV4O2N1cnNvcjpwb2ludGVyO2hlaWdodDo0MHB4Oy13ZWJraXQtYm94LXBhY2s6Y2VudGVyOy13ZWJraXQtanVzdGlmeS1jb250ZW50OmNlbnRlcjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO21hcmdpbjowO3BhZGRpbmctYm90dG9tOjhweDtwYWRkaW5nLWxlZnQ6MTZweDtwYWRkaW5nLXJpZ2h0OjE2cHg7cGFkZGluZy10b3A6OHB4O3Bvc2l0aW9uOnJlbGF0aXZlO3RleHQtYWxpZ246Y2VudGVyOy13ZWJraXQtdHJhbnNpdGlvbjphbGwgMC44czt0cmFuc2l0aW9uOmFsbCAwLjhzOy13ZWJraXQtdHJhbnNpdGlvbi1wcm9wZXJ0eTpiYWNrZ3JvdW5kLWltYWdlLGJhY2tncm91bmQtY29sb3IsYmFja2dyb3VuZC1wb3NpdGlvbixiYWNrZ3JvdW5kLXNpemUsYm9yZGVyLWNvbG9yLGJveC1zaGFkb3csb3BhY2l0eTt0cmFuc2l0aW9uLXByb3BlcnR5OmJhY2tncm91bmQtaW1hZ2UsYmFja2dyb3VuZC1jb2xvcixiYWNrZ3JvdW5kLXBvc2l0aW9uLGJhY2tncm91bmQtc2l6ZSxib3JkZXItY29sb3IsYm94LXNoYWRvdyxvcGFjaXR5Oy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7d2lkdGg6YXV0bztiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjI0LDcsNywxKTtjb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LDEpO2JhY2tncm91bmQtcG9zaXRpb246Y2FsYyh2YXIoLS1tb3VzZWRvd24teCkgLSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAyMDApIC8gMikgY2FsYyh2YXIoLS1tb3VzZWRvd24teSkgLSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAyMDApIC8gMik7YmFja2dyb3VuZC1zaXplOmNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDIwMCkgY2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMjAwKTt9LmNzcy0xNnMybmdlOmRpc2FibGVke2JhY2tncm91bmQtY29sb3I6cmdiYSgyMzUsMjM1LDIzNSwxKTtiYWNrZ3JvdW5kLWltYWdlOm5vbmU7Ym9yZGVyLWNvbG9yOnJnYmEoMjM1LDIzNSwyMzUsMSk7Ym94LXNoYWRvdzpub25lO2NvbG9yOnJnYmEoMjAwLDIwMSwyMDIsMSk7b3V0bGluZTpub25lO3BvaW50ZXItZXZlbnRzOm5vbmU7LXdlYmtpdC10cmFuc2l0aW9uOm5vbmU7dHJhbnNpdGlvbjpub25lO30uY3NzLTE2czJuZ2U6aG92ZXJ7Ym94LXNoYWRvdzowIDFweCA0cHggMCByZ2JhKDAsMCwwLDAuMyk7fS5jc3MtMTZzMm5nZTpmb2N1c3tib3gtc2hhZG93OjAgMCA0cHggMXB4IHJnYmEoMCwwLDAsMC4zNSk7b3V0bGluZTpub25lO31AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NTk5cHgpey5yZXNwb25zaXZlIC5jc3MtMTZzMm5nZXtib3gtc2hhZG93Om5vbmU7Zm9udC13ZWlnaHQ6bm9ybWFsO319QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjc4MHB4KXsucmVzcG9uc2l2ZS1iaXogLmNzcy0xNnMybmdle2JveC1zaGFkb3c6bm9uZTtmb250LXdlaWdodDpub3JtYWw7fX1AbWVkaWEgKHBvaW50ZXI6Y29hcnNlKXsuY3NzLTE2czJuZ2U6aG92ZXJ7Ym94LXNoYWRvdzpub25lO319LmNzcy0xNnMybmdlICsgYXtkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tbGVmdDoxMnB4O3ZlcnRpY2FsLWFsaWduOm1pZGRsZTt9LmNzcy0xNnMybmdlICsgYTpub3QoW2RhdGEtYnV0dG9uPSd0cnVlJ10pLC5jc3MtMTZzMm5nZSArIC5idXR0b24tc2libGluZzpub3QoW2RhdGEtYnV0dG9uPSd0cnVlJ10pe2ZvbnQtc2l6ZToxNHB4O2xpbmUtaGVpZ2h0OjEuMjg1NzFlbTttYXJnaW4tYm90dG9tOjdweDttYXJnaW4tdG9wOjlweDt9QG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjU5OXB4KXsucmVzcG9uc2l2ZSAuY3NzLTE2czJuZ2UgKyBhOm5vdChbZGF0YS1idXR0b249J3RydWUnXSksLnJlc3BvbnNpdmUgLmNzcy0xNnMybmdlICsgLmJ1dHRvbi1zaWJsaW5nOm5vdChbZGF0YS1idXR0b249J3RydWUnXSl7Zm9udC1zaXplOjE2cHg7bGluZS1oZWlnaHQ6MS4zMTI1MGVtO319LmllIC5jc3MtMTZzMm5nZSA+IHNwYW57ZGlzcGxheTpibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTt9LmNzcy0xNnMybmdlOmFjdGl2ZXtjb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LDEpO30uY3NzLTE2czJuZ2U6Zm9jdXN7YmFja2dyb3VuZC1jb2xvcjpyZ2IoMjQ5LDE5LDI3KTt9LmNzcy0xNnMybmdlOmhvdmVye2JhY2tncm91bmQtY29sb3I6cmdiKDI0NCwxMywyMSk7Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwxKTt9LmNzcy0xNnMybmdlW2RhdGEtYWN0aXZhdGVkPSd0cnVlJ117YmFja2dyb3VuZC1jb2xvcjpyZ2IoMjQ0LDEzLDIxKTtiYWNrZ3JvdW5kLWltYWdlOnJhZGlhbC1ncmFkaWVudChyZ2JhKDAsMCwwLDAuMDUpIDElLHRyYW5zcGFyZW50IDElKTt9LmNzcy0xNnMybmdlW2RhdGEtYWN0aXZhdGVkPSd0cnVlJ106YWN0aXZley13ZWJraXQtdHJhbnNpdGlvbjphbGwgMHM7dHJhbnNpdGlvbjphbGwgMHM7YmFja2dyb3VuZC1jb2xvcjpyZ2IoMjQ0LDEzLDIxKTtiYWNrZ3JvdW5kLWltYWdlOnJhZGlhbC1ncmFkaWVudCh0cmFuc3BhcmVudCAxJSx0cmFuc3BhcmVudCAxJSk7YmFja2dyb3VuZC1wb3NpdGlvbjpjYWxjKHZhcigtLW1vdXNlZG93bi14KSAtIGNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDEuMCkgLyAyKSBjYWxjKHZhcigtLW1vdXNlZG93bi15KSAtIGNhbGModmFyKC0tYnV0dG9uLXdpZHRoLDEwMHB4KSAqIDEuMCkgLyAyKTtiYWNrZ3JvdW5kLXNpemU6Y2FsYyh2YXIoLS1idXR0b24td2lkdGgsMTAwcHgpICogMS4wKSBjYWxjKHZhcigtLWJ1dHRvbi13aWR0aCwxMDBweCkgKiAxLjApO308L3N0eWxlPjxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iZmluZC1uZWFyLWJ1dHRvbl9fMzczYzBfXzFZcHhjIGNzcy0xNnMybmdlIiBkYXRhLWFjdGl2YXRlZD0iZmFsc2UiIGRhdGEtdGVzdGlkPSJzdWdnZXN0LXN1Ym1pdCIgdmFsdWU9InN1Ym1pdCIgZGF0YS1idXR0b249InRydWUiPjxzdHlsZSBkYXRhLWVtb3Rpb24tY3NzPSIxaTk0aWY3Ij4uY3NzLTFpOTRpZjd7Zm9udC1mYW1pbHk6J1BvcHBpbnMnLCdIZWx2ZXRpY2EgTmV1ZScsSGVsdmV0aWNhLEFyaWFsLHNhbnMtc2VyaWYgIWltcG9ydGFudDtmb250LXNpemU6MTZweCAhaW1wb3J0YW50O2ZvbnQtd2VpZ2h0OjUwMCAhaW1wb3J0YW50Oy13ZWJraXQtbGV0dGVyLXNwYWNpbmc6LTAuMnB4ICFpbXBvcnRhbnQ7LW1vei1sZXR0ZXItc3BhY2luZzotMC4ycHggIWltcG9ydGFudDstbXMtbGV0dGVyLXNwYWNpbmc6LTAuMnB4ICFpbXBvcnRhbnQ7bGV0dGVyLXNwYWNpbmc6LTAuMnB4ICFpbXBvcnRhbnQ7bGluZS1oZWlnaHQ6MjRweCAhaW1wb3J0YW50O21hcmdpbi10b3A6MXB4ICFpbXBvcnRhbnQ7fTwvc3R5bGU+PHNwYW4gY2xhc3M9ImNzcy0xaTk0aWY3IGNzcy1uYWNxMDYiIGRhdGEtZm9udC13ZWlnaHQ9InNlbWlib2xkIj48c3BhbiBhcmlhLWhpZGRlbj0iZmFsc2UiIHJvbGU9ImltZyIgYXJpYS1sYWJlbD0iU2VhcmNoIiBjbGFzcz0iaWNvbi0tMjQtc2VhcmNoLXYyIGNzcy0xa3E3OWxpIj48c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgY2xhc3M9Imljb25fc3ZnIj48cGF0aCBkPSJNMjEuODUzIDIwLjM1NWwtMy40NDQtMy40NDNhOS40MjggOS40MjggMCAxMC0xNi43NjEtNi4xNzEgOS40MjggOS40MjggMCAwMDE1LjM0OCA3LjU4NmwzLjQ0MyAzLjQ0MmExIDEgMCAxMDEuNDE0LTEuNDE0ek01LjgyIDE2LjI0NWE3LjQyOSA3LjQyOSAwIDExNS4yNTMgMi4xNzUgNy4zOCA3LjM4IDAgMDEtNS4yNTMtMi4xNzZ6Ii8+PC9zdmc+PC9zcGFuPjwvc3Bhbj48L2J1dHRvbj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Zvcm0+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0iIGF1dGgtYXJyYW5nZS11bml0X18zNzNjMF9fZm1UR0ogYXJyYW5nZS11bml0X18zNzNjMF9fM1hQa0UgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsgbm93cmFwX18zNzNjMF9fMTJtUW4iPjxkaXYgY2xhc3M9IiBhdXRoLWFycmFuZ2UtdW5pdC1pbm5lcl9fMzczYzBfXzExRmZCIGFycmFuZ2VfXzM3M2MwX18yaVZXSyBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGRpdiBjbGFzcz0iIHNlYXJjaC1idXR0b24tY29udGFpbmVyX18zNzNjMF9fQ19kR1UgYXJyYW5nZS11bml0X18zNzNjMF9fM1hQa0UgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxzcGFuIGNsYXNzPSIgZGlzcGxheS0taW5saW5lX18zNzNjMF9fMzFTQ0YgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiIGFyaWEtbGFiZWw9IlNlYXJjaCI+PGRpdiBjbGFzcz0iICBjc3MtMTlzazRoNCBkaXNwbGF5LS1pbmxpbmUtYmxvY2tfXzM3M2MwX18xT2U2bCBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayIgZGlzYWJsZWQ9IiI+PGRpdiBjbGFzcz0iIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIiBhcmlhLWRlc2NyaWJlZGJ5PSJmNmVmMGMzNy1lZTE4LTRhN2MtOWFlMy1iZDE2ODA2NzI0YzQiPjxidXR0b24gY2xhc3M9ImhlYWRlci1saW5rX18zNzNjMF9fM2pMODcgaGVhZGVyLWxpbmstLWljb25fXzM3M2MwX185dm1kVCI+PGRpdiBjbGFzcz0iIHBhZGRpbmctdDFfXzM3M2MwX18zcllnSCBwYWRkaW5nLXIxX18zNzNjMF9fM1A0cDAgcGFkZGluZy1iMV9fMzczYzBfX1R4QkJVIHBhZGRpbmctbDFfXzM3M2MwX18zMXluTiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGRpdiBjbGFzcz0iIG5vdGlmaWNhdGlvbi13cmFwcGVyX18zNzNjMF9fMnZlT2ggZGlzcGxheS0taW5saW5lLWJsb2NrX18zNzNjMF9fMU9lNmwgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxzcGFuIGFyaWEtaGlkZGVuPSJmYWxzZSIgcm9sZT0iaW1nIiBhcmlhLWxhYmVsPSJTZWFyY2giIGNsYXNzPSJpY29uLS0yNC1zZWFyY2gtdjIgbm90aWZpY2F0aW9uLWljb25fXzM3M2MwX183Tk5PRyBjc3MtbnlpdHcwIj48c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgY2xhc3M9Imljb25fc3ZnIj48cGF0aCBkPSJNMjEuODUzIDIwLjM1NWwtMy40NDQtMy40NDNhOS40MjggOS40MjggMCAxMC0xNi43NjEtNi4xNzEgOS40MjggOS40MjggMCAwMDE1LjM0OCA3LjU4NmwzLjQ0MyAzLjQ0MmExIDEgMCAxMDEuNDE0LTEuNDE0ek01LjgyIDE2LjI0NWE3LjQyOSA3LjQyOSAwIDExNS4yNTMgMi4xNzUgNy4zOCA3LjM4IDAgMDEtNS4yNTMtMi4xNzZ6Ii8+PC9zdmc+PC9zcGFuPjwvZGl2PjwvZGl2PjwvYnV0dG9uPjwvZGl2PjwvZGl2Pjwvc3Bhbj48L2Rpdj48ZGl2IGNsYXNzPSIgYXJyYW5nZS11bml0X18zNzNjMF9fM1hQa0UgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxkaXYgY2xhc3M9IiBkaXNwbGF5LS1pbmxpbmUtYmxvY2tfXzM3M2MwX18xT2U2bCBtYXJnaW4tbDJfXzM3M2MwX18zTGU2MCBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PHNwYW4gY2xhc3M9IiBoaWRlLWJlbG93LWFfXzM3M2MwX18xU3FCTyBkaXNwbGF5LS1pbmxpbmVfXzM3M2MwX18zMVNDRiBtYXJnaW4tcjFfXzM3M2MwX184NHA3NiBtYXJnaW4tbDFfXzM3M2MwX185eUhVVCBwYWRkaW5nLXIxX18zNzNjMF9fM1A0cDAgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxhIGNsYXNzPSIgaGVhZGVyLWxpbmtfXzM3M2MwX18zakw4NyIgaHJlZj0iL2FkdmVydGlzZS9jb25zdW1lcl9oZWFkZXJfcmVkaXJlY3QiPjxkaXYgY2xhc3M9IiBwYWRkaW5nLXQxX18zNzNjMF9fM3JZZ0ggcGFkZGluZy1yMV9fMzczYzBfXzNQNHAwIHBhZGRpbmctYjFfXzM3M2MwX19UeEJCVSBwYWRkaW5nLWwxX18zNzNjMF9fMzF5bk4gYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxkaXYgY2xhc3M9IiBub3RpZmljYXRpb24td3JhcHBlcl9fMzczYzBfXzJ2ZU9oIGRpc3BsYXktLWlubGluZS1ibG9ja19fMzczYzBfXzFPZTZsIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIj48cCBjbGFzcz0iIGNzcy0xc2lwZHF3IiBkYXRhLWZvbnQtd2VpZ2h0PSJzZW1pYm9sZCI+Rm9yIEJ1c2luZXNzZXM8L3A+PC9kaXY+PC9kaXY+PC9hPjwvc3Bhbj48c3BhbiBjbGFzcz0iIGhpZGUtYmVsb3ctYV9fMzczYzBfXzFTcUJPIGRpc3BsYXktLWlubGluZV9fMzczYzBfXzMxU0NGIG1hcmdpbi1yMV9fMzczYzBfXzg0cDc2IHBhZGRpbmctcjFfXzM3M2MwX18zUDRwMCBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGEgY2xhc3M9IiBoZWFkZXItbGlua19fMzczYzBfXzNqTDg3IiBocmVmPSIvd3JpdGVhcmV2aWV3Ij48ZGl2IGNsYXNzPSIgcGFkZGluZy10MV9fMzczYzBfXzNyWWdIIHBhZGRpbmctcjFfXzM3M2MwX18zUDRwMCBwYWRkaW5nLWIxX18zNzNjMF9fVHhCQlUgcGFkZGluZy1sMV9fMzczYzBfXzMxeW5OIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIj48ZGl2IGNsYXNzPSIgbm90aWZpY2F0aW9uLXdyYXBwZXJfXzM3M2MwX18ydmVPaCBkaXNwbGF5LS1pbmxpbmUtYmxvY2tfXzM3M2MwX18xT2U2bCBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PHAgY2xhc3M9IiBjc3MtMXNpcGRxdyIgZGF0YS1mb250LXdlaWdodD0ic2VtaWJvbGQiPldyaXRlIGEgUmV2aWV3PC9wPjwvZGl2PjwvZGl2PjwvYT48L3NwYW4+PHNwYW4gY2xhc3M9IiBkaXNwbGF5LS1pbmxpbmVfXzM3M2MwX18zMVNDRiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGEgaHJlZj0iL2xvZ2luP3JldHVybl91cmw9aHR0cHM6Ly93d3cueWVscC5jb20vbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyIiBjbGFzcz0iIGNzcy0xY2x6cjZoIiBkYXRhLWFjdGl2YXRlZD0iZmFsc2UiIGRhdGEtYnV0dG9uPSJ0cnVlIj48c3BhbiBjbGFzcz0iY3NzLTFqb3QweGQiIGRhdGEtZm9udC13ZWlnaHQ9InNlbWlib2xkIj5Mb2cgSW48L3NwYW4+PC9hPjxhIGhyZWY9Ii9zaWdudXA/cmV0dXJuX3VybD1odHRwczovL3d3dy55ZWxwLmNvbS9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIiIGNsYXNzPSJoaWRlLWJlbG93LWJfXzM3M2MwX18zZTUzaSBjc3MtcnRjZGx1IiBkYXRhLWFjdGl2YXRlZD0iZmFsc2UiIGRhdGEtYnV0dG9uPSJ0cnVlIj48c3BhbiBjbGFzcz0iY3NzLTFqb3QweGQiIGRhdGEtZm9udC13ZWlnaHQ9InNlbWlib2xkIj5TaWduIFVwPC9zcGFuPjwvYT48L3NwYW4+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0iIGhlYWRlci1uYXYtY29udGFpbmVyX18zNzNjMF9fMkR4OUwgaGVhZGVyLW5hdi1tb2JpbGUtZm9ybS1jbG9zZWRfXzM3M2MwX192bzQ0LSBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayBub3dyYXBfXzM3M2MwX18xMm1RbiI+PGRpdiBjbGFzcz0iIGhlYWRlci1uYXZfXzM3M2MwX19lejF6XyBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGRpdj48ZGl2IGNsYXNzPSIgaGVhZGVyLW5hdl91bml0IGhlYWRlci1uYXZfdW5pdF9fMzczYzBfXzIzVG92IHVuZGVmaW5lZCBkaXNwbGF5LS1pbmxpbmUtYmxvY2tfXzM3M2MwX18xT2U2bCBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGRpdiBjbGFzcz0iIGhlYWRlci1saW5rX18zNzNjMF9fb1k1OEkgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj48YSBjbGFzcz0iIGhlYWRlci1saW5rX2FuY2hvcl9fMzczYzBfXy1hb3JjIiBocmVmPSIvc2VhcmNoP2NmbHQ9cmVzdGF1cmFudHMmYW1wO2ZpbmRfbG9jPVNhbiUyMEZyYW5jaXNjbyUyQyUyMENBIiB0YWJpbmRleD0iMCI+PHNwYW4gY2xhc3M9IiBjc3MtMXgya2F3diI+UmVzdGF1cmFudHM8L3NwYW4+PHNwYW4gY2xhc3M9IiBkaXNwbGF5LS1pbmxpbmVfXzM3M2MwX18zMVNDRiBwYWRkaW5nLWwxX18zNzNjMF9fMzF5bk4gYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBjbGFzcz0iaWNvbi0tMjQtY2hldnJvbi1kb3duLXYyIGNzcy1ueWl0dzAiPjxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiBjbGFzcz0iaWNvbl9zdmciPjxwYXRoIGQ9Ik0xMiAxNS4yNWExIDEgMCAwMS0uNy0uMjlsLTQuNTgtNC41QTEuMDExIDEuMDExIDAgMDE4LjEyIDlMMTIgMTIuODUgMTUuODggOWExIDEgMCAxMTEuNCAxLjQyTDEyLjcgMTVhMSAxIDAgMDEtLjcuMjV6Ii8+PC9zdmc+PC9zcGFuPjwvc3Bhbj48L2E+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0iIGhlYWRlci1uYXZfdW5pdCBoZWFkZXItbmF2X3VuaXRfXzM3M2MwX18yM1RvdiB1bmRlZmluZWQgZGlzcGxheS0taW5saW5lLWJsb2NrX18zNzNjMF9fMU9lNmwgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxkaXYgY2xhc3M9IiBoZWFkZXItbGlua19fMzczYzBfX29ZNThJIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+PGEgY2xhc3M9IiBoZWFkZXItbGlua19hbmNob3JfXzM3M2MwX18tYW9yYyIgaHJlZj0iL3NlYXJjaD9jZmx0PWhvbWVzZXJ2aWNlcyZhbXA7ZmluZF9sb2M9U2FuJTIwRnJhbmNpc2NvJTJDJTIwQ0EiIHRhYmluZGV4PSIwIj48c3BhbiBjbGFzcz0iIGNzcy0xeDJrYXd2Ij5Ib21lIFNlcnZpY2VzPC9zcGFuPjxzcGFuIGNsYXNzPSIgZGlzcGxheS0taW5saW5lX18zNzNjMF9fMzFTQ0YgcGFkZGluZy1sMV9fMzczYzBfXzMxeW5OIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIj48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSIgY2xhc3M9Imljb24tLTI0LWNoZXZyb24tZG93bi12MiBjc3MtbnlpdHcwIj48c3ZnIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgY2xhc3M9Imljb25fc3ZnIj48cGF0aCBkPSJNMTIgMTUuMjVhMSAxIDAgMDEtLjctLjI5bC00LjU4LTQuNUExLjAxMSAxLjAxMSAwIDAxOC4xMiA5TDEyIDEyLjg1IDE1Ljg4IDlhMSAxIDAgMTExLjQgMS40MkwxMi43IDE1YTEgMSAwIDAxLS43LjI1eiIvPjwvc3ZnPjwvc3Bhbj48L3NwYW4+PC9hPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9IiBoZWFkZXItbmF2X3VuaXQgaGVhZGVyLW5hdl91bml0X18zNzNjMF9fMjNUb3YgdW5kZWZpbmVkIGRpc3BsYXktLWlubGluZS1ibG9ja19fMzczYzBfXzFPZTZsIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIj48ZGl2IGNsYXNzPSIgaGVhZGVyLWxpbmtfXzM3M2MwX19vWTU4SSBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPjxhIGNsYXNzPSIgaGVhZGVyLWxpbmtfYW5jaG9yX18zNzNjMF9fLWFvcmMiIGhyZWY9Ii9zZWFyY2g/Y2ZsdD1hdXRvJmFtcDtmaW5kX2xvYz1TYW4lMjBGcmFuY2lzY28lMkMlMjBDQSIgdGFiaW5kZXg9IjAiPjxzcGFuIGNsYXNzPSIgY3NzLTF4Mmthd3YiPkF1dG8gU2VydmljZXM8L3NwYW4+PHNwYW4gY2xhc3M9IiBkaXNwbGF5LS1pbmxpbmVfXzM3M2MwX18zMVNDRiBwYWRkaW5nLWwxX18zNzNjMF9fMzF5bk4gYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBjbGFzcz0iaWNvbi0tMjQtY2hldnJvbi1kb3duLXYyIGNzcy1ueWl0dzAiPjxzdmcgd2lkdGg9IjI0IiBoZWlnaHQ9IjI0IiBjbGFzcz0iaWNvbl9zdmciPjxwYXRoIGQ9Ik0xMiAxNS4yNWExIDEgMCAwMS0uNy0uMjlsLTQuNTgtNC41QTEuMDExIDEuMDExIDAgMDE4LjEyIDlMMTIgMTIuODUgMTUuODggOWExIDEgMCAxMTEuNCAxLjQyTDEyLjcgMTVhMSAxIDAgMDEtLjcuMjV6Ii8+PC9zdmc+PC9zcGFuPjwvc3Bhbj48L2E+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0iIGhlYWRlci1uYXZfdW5pdCBoZWFkZXItbmF2X3VuaXRfXzM3M2MwX18yM1RvdiB1bmRlZmluZWQgZGlzcGxheS0taW5saW5lLWJsb2NrX18zNzNjMF9fMU9lNmwgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxkaXYgY2xhc3M9IiBoZWFkZXItbGlua19fMzczYzBfX29ZNThJIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+PGEgY2xhc3M9IiBoZWFkZXItbGlua19hbmNob3JfXzM3M2MwX18tYW9yYyBkZWZhdWx0LWN1cnNvcl9fMzczYzBfXzNzblNBIiB0YWJpbmRleD0iMCI+PHNwYW4gY2xhc3M9IiBjc3MtMXgya2F3diI+TW9yZTwvc3Bhbj48c3BhbiBjbGFzcz0iIGRpc3BsYXktLWlubGluZV9fMzczYzBfXzMxU0NGIHBhZGRpbmctbDFfXzM3M2MwX18zMXluTiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiIGNsYXNzPSJpY29uLS0yNC1jaGV2cm9uLWRvd24tdjIgY3NzLW55aXR3MCI+PHN2ZyB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIGNsYXNzPSJpY29uX3N2ZyI+PHBhdGggZD0iTTEyIDE1LjI1YTEgMSAwIDAxLS43LS4yOWwtNC41OC00LjVBMS4wMTEgMS4wMTEgMCAwMTguMTIgOUwxMiAxMi44NSAxNS44OCA5YTEgMSAwIDExMS40IDEuNDJMMTIuNyAxNWExIDEgMCAwMS0uNy4yNXoiLz48L3N2Zz48L3NwYW4+PC9zcGFuPjwvYT48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qc29uIiBkYXRhLWh5cGVybm92YS1rZXk9InllbHBfbWFpbl9fZDg5Zjg2ZTlhYzM3Nzk3OWYwZGM4YjA0ZmY5OGFmMTNkZDk3ZmMwMl9feWVscF9tYWluX19Db25zdW1lckhlYWRlcl9fZHluYW1pYyIgZGF0YS1oeXBlcm5vdmEtaWQ9IjA0Yjk2MTFkLWVhM2EtNDY4MC04YTI0LTc4Yjc0MGMxNDhkMSI+PCEtLXsiaG9saWRheU1vZGlmaWVyIjpudWxsLCJsb2dvVXJsIjoiaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzL3NydjAveWVscF9kZXNpZ25fY2RuLzdlZjcxYmY3N2EzMy9hc3NldHMvaW1nL3llbHBfbG9nb19kZXNrdG9wL2Nvb2tib29rLnN2ZyIsImxvY2FsZSI6ImVuX1VTIiwidW5pcXVlUmVxdWVzdElkIjoiMzIxNjQ4OWNlMWZjMGUzMiIsIm1lc3NhZ2VzIjp7IjxhICV7aGNhcHRjaGFfaW5mb30mZ3Q7VGhpcyBzaXRlIGlzIHByb3RlY3RlZCBieSBoQ2FwdGNoYSAtIDwvYSZndDsgPGEgJXtoY2FwdGNoYV9wcH0mZ3Q7U2VlIGFkZGl0aW9uYWwgUHJpdmFjeSBQb2xpY3k8L2EmZ3Q7IDxhICV7aGNhcHRjaGFfdG9zfSZndDthbmQgVGVybXM8L2EmZ3Q7IjoiPGEgJXtoY2FwdGNoYV9pbmZvfSZndDtUaGlzIHNpdGUgaXMgcHJvdGVjdGVkIGJ5IGhDYXB0Y2hhIC0gPC9hJmd0OyA8YSAle2hjYXB0Y2hhX3BwfSZndDtTZWUgYWRkaXRpb25hbCBQcml2YWN5IFBvbGljeTwvYSZndDsgPGEgJXtoY2FwdGNoYV90b3N9Jmd0O2FuZCBUZXJtczwvYSZndDsiLCI8YSAle3JlY2FwdGNoYV9pbmZvfSZndDtUaGlzIHNpdGUgaXMgcHJvdGVjdGVkIGJ5IHJlQ0FQVENIQSAtPC9hJmd0OyA8YSAle2dvb2dsZV9wcH0mZ3Q7U2VlIGFkZGl0aW9uYWwgUHJpdmFjeSBQb2xpY3k8L2EmZ3Q7IDxhICV7Z29vZ2xlX3Rvc30mZ3Q7YW5kIFRlcm1zPC9hJmd0OyI6IjxhICV7cmVjYXB0Y2hhX2luZm99Jmd0O1RoaXMgc2l0ZSBpcyBwcm90ZWN0ZWQgYnkgcmVDQVBUQ0hBIC08L2EmZ3Q7IDxhICV7Z29vZ2xlX3BwfSZndDtTZWUgYWRkaXRpb25hbCBQcml2YWN5IFBvbGljeTwvYSZndDsgPGEgJXtnb29nbGVfdG9zfSZndDthbmQgVGVybXM8L2EmZ3Q7IiwiPG9sJmd0O1xuICAgICAgICAgICAgPGxpJmd0O0F0IHRoZSB0b3Agb2YgeW91ciBDaHJvbWUgd2luZG93LCBuZWFyIHRoZSB3ZWIgYWRkcmVzcywgY2xpY2sgPGImZ3Q7dGhlIGdyYXkgbG9jayBpY29uPC9iJmd0Oy48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O0luIHRoZSB3aW5kb3cgdGhhdCBwb3BzIHVwLCBtYWtlIHN1cmUgPGImZ3Q7TG9jYXRpb248L2ImZ3Q7IGlzIHNldCB0byA8YiZndDtBc2sgKGRlZmF1bHQpPC9iJmd0OyBvciA8YiZndDtBbGxvdzwvYiZndDsuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtZb3UncmUgZ29vZCB0byBnbyEgUmVsb2FkIHRoaXMgWWVscCBwYWdlIGFuZCB0cnkgeW91ciBzZWFyY2ggYWdhaW4uPC9saSZndDtcbiAgICAgICAgPC9vbCZndDtcbiAgICAgICAgPHAmZ3Q7XG4gICAgICAgICAgICBJZiB5b3UncmUgc3RpbGwgaGF2aW5nIHRyb3VibGUsIGNoZWNrIG91dCA8YSBocmVmPVwiaHR0cHM6Ly9zdXBwb3J0Lmdvb2dsZS5jb20vY2hyb21lL2Fuc3dlci8xNDIwNjU/Y289R0VOSUUuUGxhdGZvcm0lM0REZXNrdG9wJmFtcDtobD1lbiZhbXA7b2NvPTBcIiB0YXJnZXQ9XCJfYmxhbmtcIiZndDtHb29nbGUncyBzdXBwb3J0IHBhZ2U8L2EmZ3Q7LlxuICAgICAgICAgICAgWW91IGNhbiBhbHNvIHNlYXJjaCBuZWFyIGEgY2l0eSwgcGxhY2UsIG9yIGFkZHJlc3MgaW5zdGVhZC5cbiAgICAgICAgPC9wJmd0OyI6IjxvbCZndDtcbiAgICAgICAgICAgIDxsaSZndDtBdCB0aGUgdG9wIG9mIHlvdXIgQ2hyb21lIHdpbmRvdywgbmVhciB0aGUgd2ViIGFkZHJlc3MsIGNsaWNrIDxiJmd0O3RoZSBncmF5IGxvY2sgaWNvbjwvYiZndDsuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtJbiB0aGUgd2luZG93IHRoYXQgcG9wcyB1cCwgbWFrZSBzdXJlIDxiJmd0O0xvY2F0aW9uPC9iJmd0OyBpcyBzZXQgdG8gPGImZ3Q7QXNrIChkZWZhdWx0KTwvYiZndDsgb3IgPGImZ3Q7QWxsb3c8L2ImZ3Q7LjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7WW91J3JlIGdvb2QgdG8gZ28hIFJlbG9hZCB0aGlzIFllbHAgcGFnZSBhbmQgdHJ5IHlvdXIgc2VhcmNoIGFnYWluLjwvbGkmZ3Q7XG4gICAgICAgIDwvb2wmZ3Q7XG4gICAgICAgIDxwJmd0O1xuICAgICAgICAgICAgSWYgeW91J3JlIHN0aWxsIGhhdmluZyB0cm91YmxlLCBjaGVjayBvdXQgPGEgaHJlZj1cImh0dHBzOi8vc3VwcG9ydC5nb29nbGUuY29tL2Nocm9tZS9hbnN3ZXIvMTQyMDY1P2NvPUdFTklFLlBsYXRmb3JtJTNERGVza3RvcCZhbXA7aGw9ZW4mYW1wO29jbz0wXCIgdGFyZ2V0PVwiX2JsYW5rXCImZ3Q7R29vZ2xlJ3Mgc3VwcG9ydCBwYWdlPC9hJmd0Oy5cbiAgICAgICAgICAgIFlvdSBjYW4gYWxzbyBzZWFyY2ggbmVhciBhIGNpdHksIHBsYWNlLCBvciBhZGRyZXNzIGluc3RlYWQuXG4gICAgICAgIDwvcCZndDsiLCI8b2wmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7QXQgdGhlIHRvcCBvZiB5b3VyIEZpcmVmb3ggd2luZG93LCB0byB0aGUgbGVmdCBvZiB0aGUgd2ViIGFkZHJlc3MsIHlvdSBzaG91bGQgc2VlIGEgPGImZ3Q7Z3JlZW4gbG9jazwvYiZndDsuIENsaWNrIGl0LjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7SW4gdGhlIHdpbmRvdyB0aGF0IHBvcHMgdXAsIHlvdSBzaG91bGQgc2VlIDxiJmd0O0Jsb2NrZWQ8L2ImZ3Q7IG9yIDxiJmd0O0Jsb2NrZWQgVGVtcG9yYXJpbHk8L2ImZ3Q7IG5leHQgdG8gPGImZ3Q7QWNjZXNzIFlvdXIgTG9jYXRpb248L2ImZ3Q7LiBDbGljayB0aGUgPGImZ3Q7eDwvYiZndDsgbmV4dCB0byB0aGlzIGxpbmUuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtZb3UncmUgZ29vZCB0byBnbyEgUmVmcmVzaCB0aGlzIFllbHAgcGFnZSBhbmQgdHJ5IHlvdXIgc2VhcmNoIGFnYWluLjwvbGkmZ3Q7XG4gICAgICAgIDwvb2wmZ3Q7XG4gICAgICAgIDxwJmd0O1xuICAgICAgICAgICAgSWYgeW91J3JlIHN0aWxsIGhhdmluZyB0cm91YmxlLCBjaGVjayBvdXQgPGEgaHJlZj1cImh0dHBzOi8vd3d3Lm1vemlsbGEub3JnL2VuLVVTL2ZpcmVmb3gvZ2VvbG9jYXRpb24vXCIgdGFyZ2V0PVwiX2JsYW5rXCImZ3Q7RmlyZWZveCdzIHN1cHBvcnQgcGFnZTwvYSZndDsuXG4gICAgICAgICAgICBZb3UgY2FuIGFsc28gc2VhcmNoIG5lYXIgYSBjaXR5LCBwbGFjZSwgb3IgYWRkcmVzcyBpbnN0ZWFkLlxuICAgICAgICA8L3AmZ3Q7IjoiPG9sJmd0O1xuICAgICAgICAgICAgPGxpJmd0O0F0IHRoZSB0b3Agb2YgeW91ciBGaXJlZm94IHdpbmRvdywgdG8gdGhlIGxlZnQgb2YgdGhlIHdlYiBhZGRyZXNzLCB5b3Ugc2hvdWxkIHNlZSBhIDxiJmd0O2dyZWVuIGxvY2s8L2ImZ3Q7LiBDbGljayBpdC48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O0luIHRoZSB3aW5kb3cgdGhhdCBwb3BzIHVwLCB5b3Ugc2hvdWxkIHNlZSA8YiZndDtCbG9ja2VkPC9iJmd0OyBvciA8YiZndDtCbG9ja2VkIFRlbXBvcmFyaWx5PC9iJmd0OyBuZXh0IHRvIDxiJmd0O0FjY2VzcyBZb3VyIExvY2F0aW9uPC9iJmd0Oy4gQ2xpY2sgdGhlIDxiJmd0O3g8L2ImZ3Q7IG5leHQgdG8gdGhpcyBsaW5lLjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7WW91J3JlIGdvb2QgdG8gZ28hIFJlZnJlc2ggdGhpcyBZZWxwIHBhZ2UgYW5kIHRyeSB5b3VyIHNlYXJjaCBhZ2Fpbi48L2xpJmd0O1xuICAgICAgICA8L29sJmd0O1xuICAgICAgICA8cCZndDtcbiAgICAgICAgICAgIElmIHlvdSdyZSBzdGlsbCBoYXZpbmcgdHJvdWJsZSwgY2hlY2sgb3V0IDxhIGhyZWY9XCJodHRwczovL3d3dy5tb3ppbGxhLm9yZy9lbi1VUy9maXJlZm94L2dlb2xvY2F0aW9uL1wiIHRhcmdldD1cIl9ibGFua1wiJmd0O0ZpcmVmb3gncyBzdXBwb3J0IHBhZ2U8L2EmZ3Q7LlxuICAgICAgICAgICAgWW91IGNhbiBhbHNvIHNlYXJjaCBuZWFyIGEgY2l0eSwgcGxhY2UsIG9yIGFkZHJlc3MgaW5zdGVhZC5cbiAgICAgICAgPC9wJmd0OyIsIjxvbCZndDtcbiAgICAgICAgICAgIDxsaSZndDtBdCB0aGUgdG9wIG9mIHlvdXIgT3BlcmEgd2luZG93LCBuZWFyIHRoZSB3ZWIgYWRkcmVzcywgeW91IHNob3VsZCBzZWUgYSA8YiZndDtncmF5IGxvY2F0aW9uIHBpbjwvYiZndDsuIENsaWNrIGl0LjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7SW4gdGhlIHdpbmRvdyB0aGF0IHBvcHMgdXAsIGNsaWNrIDxiJmd0O0NsZWFyIFRoaXMgU2V0dGluZzwvYiZndDs8L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O1lvdSdyZSBnb29kIHRvIGdvISBSZWxvYWQgdGhpcyBZZWxwIHBhZ2UgYW5kIHRyeSB5b3VyIHNlYXJjaCBhZ2Fpbi48L2xpJmd0O1xuICAgICAgICA8L29sJmd0O1xuICAgICAgICA8cCZndDtcbiAgICAgICAgICAgIElmIHlvdSdyZSBzdGlsbCBoYXZpbmcgdHJvdWJsZSwgY2hlY2sgb3V0IDxhIGhyZWY9XCJodHRwczovL2hlbHAub3BlcmEuY29tL2VuL3ByZXN0by9jb250cm9sLXBhZ2VzLyNnZW9sb2NhdGlvblwiIHRhcmdldD1cIl9ibGFua1wiJmd0O09wZXJhJ3Mgc3VwcG9ydCBwYWdlPC9hJmd0Oy5cbiAgICAgICAgICAgIFlvdSBjYW4gYWxzbyBzZWFyY2ggbmVhciBhIGNpdHksIHBsYWNlLCBvciBhZGRyZXNzIGluc3RlYWQuXG4gICAgICAgIDwvcCZndDsiOiI8b2wmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7QXQgdGhlIHRvcCBvZiB5b3VyIE9wZXJhIHdpbmRvdywgbmVhciB0aGUgd2ViIGFkZHJlc3MsIHlvdSBzaG91bGQgc2VlIGEgPGImZ3Q7Z3JheSBsb2NhdGlvbiBwaW48L2ImZ3Q7LiBDbGljayBpdC48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O0luIHRoZSB3aW5kb3cgdGhhdCBwb3BzIHVwLCBjbGljayA8YiZndDtDbGVhciBUaGlzIFNldHRpbmc8L2ImZ3Q7PC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtZb3UncmUgZ29vZCB0byBnbyEgUmVsb2FkIHRoaXMgWWVscCBwYWdlIGFuZCB0cnkgeW91ciBzZWFyY2ggYWdhaW4uPC9saSZndDtcbiAgICAgICAgPC9vbCZndDtcbiAgICAgICAgPHAmZ3Q7XG4gICAgICAgICAgICBJZiB5b3UncmUgc3RpbGwgaGF2aW5nIHRyb3VibGUsIGNoZWNrIG91dCA8YSBocmVmPVwiaHR0cHM6Ly9oZWxwLm9wZXJhLmNvbS9lbi9wcmVzdG8vY29udHJvbC1wYWdlcy8jZ2VvbG9jYXRpb25cIiB0YXJnZXQ9XCJfYmxhbmtcIiZndDtPcGVyYSdzIHN1cHBvcnQgcGFnZTwvYSZndDsuXG4gICAgICAgICAgICBZb3UgY2FuIGFsc28gc2VhcmNoIG5lYXIgYSBjaXR5LCBwbGFjZSwgb3IgYWRkcmVzcyBpbnN0ZWFkLlxuICAgICAgICA8L3AmZ3Q7IiwiPG9sJmd0O1xuICAgICAgICAgICAgPGxpJmd0O0F0IHRoZSB0b3AtcmlnaHQgaGFuZCBjb3JuZXIgb2YgdGhlIHdpbmRvdywgY2xpY2sgdGhlIDxiJmd0O2J1dHRvbiB3aXRoIHRocmVlIGRvdHMgb24gaXQ8L2ImZ3Q7LCB0aGVuIDxiJmd0O1NldHRpbmdzPC9iJmd0Oy48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O0NsaWNrIDxiJmd0O0Nob29zZSB3aGF0IHRvIGNsZWFyPC9iJmd0OyB1bmRlcm5lYXRoIDxiJmd0O0NsZWFyIGJyb3dzaW5nIGRhdGE8L2ImZ3Q7LjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7Q2xpY2sgPGImZ3Q7U2hvdyBtb3JlPC9iJmd0OywgdGhlbiBtYWtlIHN1cmUgb25seSB0aGUgYm94IGxhYmVsZWQgPGImZ3Q7TG9jYXRpb24gcGVybWlzc2lvbnM8L2ImZ3Q7IGlzIGNoZWNrZWQuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtDbGljayA8YiZndDtDbGVhcjwvYiZndDsuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtZb3UncmUgZ29vZCB0byBnbyEgUmVmcmVzaCB0aGlzIFllbHAgcGFnZSBhbmQgdHJ5IHlvdXIgc2VhcmNoIGFnYWluLjwvbGkmZ3Q7XG4gICAgICAgIDwvb2wmZ3Q7XG4gICAgICAgIDxwJmd0O1xuICAgICAgICAgICAgWW91IGNhbiBhbHNvIHNlYXJjaCBuZWFyIGEgY2l0eSwgcGxhY2UsIG9yIGFkZHJlc3MgaW5zdGVhZC5cbiAgICAgICAgPC9wJmd0OyI6IjxvbCZndDtcbiAgICAgICAgICAgIDxsaSZndDtBdCB0aGUgdG9wLXJpZ2h0IGhhbmQgY29ybmVyIG9mIHRoZSB3aW5kb3csIGNsaWNrIHRoZSA8YiZndDtidXR0b24gd2l0aCB0aHJlZSBkb3RzIG9uIGl0PC9iJmd0OywgdGhlbiA8YiZndDtTZXR0aW5nczwvYiZndDsuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtDbGljayA8YiZndDtDaG9vc2Ugd2hhdCB0byBjbGVhcjwvYiZndDsgdW5kZXJuZWF0aCA8YiZndDtDbGVhciBicm93c2luZyBkYXRhPC9iJmd0Oy48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O0NsaWNrIDxiJmd0O1Nob3cgbW9yZTwvYiZndDssIHRoZW4gbWFrZSBzdXJlIG9ubHkgdGhlIGJveCBsYWJlbGVkIDxiJmd0O0xvY2F0aW9uIHBlcm1pc3Npb25zPC9iJmd0OyBpcyBjaGVja2VkLjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7Q2xpY2sgPGImZ3Q7Q2xlYXI8L2ImZ3Q7LjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7WW91J3JlIGdvb2QgdG8gZ28hIFJlZnJlc2ggdGhpcyBZZWxwIHBhZ2UgYW5kIHRyeSB5b3VyIHNlYXJjaCBhZ2Fpbi48L2xpJmd0O1xuICAgICAgICA8L29sJmd0O1xuICAgICAgICA8cCZndDtcbiAgICAgICAgICAgIFlvdSBjYW4gYWxzbyBzZWFyY2ggbmVhciBhIGNpdHksIHBsYWNlLCBvciBhZGRyZXNzIGluc3RlYWQuXG4gICAgICAgIDwvcCZndDsiLCI8b2wmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7Q2xpY2sgPGImZ3Q7U2FmYXJpPC9iJmd0OyBpbiB0aGUgTWVudSBCYXIgYXQgdGhlIHRvcCBvZiB0aGUgc2NyZWVuLCB0aGVuIDxiJmd0O1ByZWZlcmVuY2VzPC9iJmd0Oy48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O0NsaWNrIHRoZSA8YiZndDtXZWJzaXRlczwvYiZndDsgdGFiLCB0aGVuIGNsaWNrIDxiJmd0O0xvY2F0aW9uPC9iJmd0OyBvbiB0aGUgbGVmdC1oYW5kIHBhbmVsLjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7TmV4dCB0byA8YiZndDt5ZWxwLmNvbTwvYiZndDsgaW4gdGhlIHJpZ2h0LWhhbmQgcGFuZWwsIGNoYW5nZSB0aGUgZHJvcGRvd24gdG8gPGImZ3Q7QXNrPC9iJmd0OyBvciA8YiZndDtBbGxvdzwvYiZndDsuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtNYWNPUyBtYXkgbm93IHByb21wdCB5b3UgdG8gZW5hYmxlIExvY2F0aW9uIFNlcnZpY2VzLiBJZiBpdCBkb2VzLCBmb2xsb3cgaXRzIGluc3RydWN0aW9ucyB0byBlbmFibGUgTG9jYXRpb24gU2VydmljZXMgZm9yIFNhZmFyaS48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O0Nsb3NlIHRoZSBTZXR0aW5ncyBkaWFsb2cgYW5kIHJlZnJlc2ggdGhlIHBhZ2UuIFRyeSB1c2luZyBDdXJyZW50IExvY2F0aW9uIHNlYXJjaCBhZ2Fpbi48L2xpJmd0O1xuICAgICAgICA8L29sJmd0O1xuICAgICAgICA8cCZndDtcbiAgICAgICAgICAgIElmIHlvdSdyZSBzdGlsbCBoYXZpbmcgdHJvdWJsZSwgY2hlY2sgb3V0IDxhIGhyZWY9XCJodHRwczovL3N1cHBvcnQuYXBwbGUuY29tL2VuLXVzL0hUMjA0NjkwXCIgdGFyZ2V0PVwiX2JsYW5rXCImZ3Q7U2FmYXJpJ3Mgc3VwcG9ydCBwYWdlPC9hJmd0Oy5cbiAgICAgICAgICAgIFlvdSBjYW4gYWxzbyBzZWFyY2ggbmVhciBhIGNpdHksIHBsYWNlLCBvciBhZGRyZXNzIGluc3RlYWQuXG4gICAgICAgIDwvcCZndDsiOiI8b2wmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7Q2xpY2sgPGImZ3Q7U2FmYXJpPC9iJmd0OyBpbiB0aGUgTWVudSBCYXIgYXQgdGhlIHRvcCBvZiB0aGUgc2NyZWVuLCB0aGVuIDxiJmd0O1ByZWZlcmVuY2VzPC9iJmd0Oy48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O0NsaWNrIHRoZSA8YiZndDtXZWJzaXRlczwvYiZndDsgdGFiLCB0aGVuIGNsaWNrIDxiJmd0O0xvY2F0aW9uPC9iJmd0OyBvbiB0aGUgbGVmdC1oYW5kIHBhbmVsLjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7TmV4dCB0byA8YiZndDt5ZWxwLmNvbTwvYiZndDsgaW4gdGhlIHJpZ2h0LWhhbmQgcGFuZWwsIGNoYW5nZSB0aGUgZHJvcGRvd24gdG8gPGImZ3Q7QXNrPC9iJmd0OyBvciA8YiZndDtBbGxvdzwvYiZndDsuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtNYWNPUyBtYXkgbm93IHByb21wdCB5b3UgdG8gZW5hYmxlIExvY2F0aW9uIFNlcnZpY2VzLiBJZiBpdCBkb2VzLCBmb2xsb3cgaXRzIGluc3RydWN0aW9ucyB0byBlbmFibGUgTG9jYXRpb24gU2VydmljZXMgZm9yIFNhZmFyaS48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O0Nsb3NlIHRoZSBTZXR0aW5ncyBkaWFsb2cgYW5kIHJlZnJlc2ggdGhlIHBhZ2UuIFRyeSB1c2luZyBDdXJyZW50IExvY2F0aW9uIHNlYXJjaCBhZ2Fpbi48L2xpJmd0O1xuICAgICAgICA8L29sJmd0O1xuICAgICAgICA8cCZndDtcbiAgICAgICAgICAgIElmIHlvdSdyZSBzdGlsbCBoYXZpbmcgdHJvdWJsZSwgY2hlY2sgb3V0IDxhIGhyZWY9XCJodHRwczovL3N1cHBvcnQuYXBwbGUuY29tL2VuLXVzL0hUMjA0NjkwXCIgdGFyZ2V0PVwiX2JsYW5rXCImZ3Q7U2FmYXJpJ3Mgc3VwcG9ydCBwYWdlPC9hJmd0Oy5cbiAgICAgICAgICAgIFlvdSBjYW4gYWxzbyBzZWFyY2ggbmVhciBhIGNpdHksIHBsYWNlLCBvciBhZGRyZXNzIGluc3RlYWQuXG4gICAgICAgIDwvcCZndDsiLCI8b2wmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7Q2xpY2sgdGhlIDxiJmd0O2dlYXI8L2ImZ3Q7IGluIHRoZSB1cHBlci1yaWdodCBoYW5kIGNvcm5lciBvZiB0aGUgd2luZG93LCB0aGVuIDxiJmd0O0ludGVybmV0IG9wdGlvbnM8L2ImZ3Q7LjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7Q2xpY2sgdGhlIDxiJmd0O1ByaXZhY3k8L2ImZ3Q7IHRhYiBpbiB0aGUgbmV3IHdpbmRvdyB0aGF0IGp1c3QgYXBwZWFyZWQuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtVbmNoZWNrIHRoZSBib3ggbGFiZWxlZCA8YiZndDtOZXZlciBhbGxvdyB3ZWJzaXRlcyB0byByZXF1ZXN0IHlvdXIgcGh5c2ljYWwgbG9jYXRpb248L2ImZ3Q7IGlmIGl0J3MgYWxyZWFkeSBjaGVja2VkLjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7Q2xpY2sgdGhlIGJ1dHRvbiBsYWJlbGVkIDxiJmd0O0NsZWFyIFNpdGVzPC9iJmd0Oy48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O1lvdSdyZSBnb29kIHRvIGdvISBDbGljayA8YiZndDtPSzwvYiZndDssIHRoZW4gcmVmcmVzaCB0aGlzIFllbHAgcGFnZSBhbmQgdHJ5IHlvdXIgc2VhcmNoIGFnYWluLjwvbGkmZ3Q7XG4gICAgICAgIDwvb2wmZ3Q7XG4gICAgICAgIDxwJmd0O1xuICAgICAgICAgICAgWW91IGNhbiBhbHNvIHNlYXJjaCBuZWFyIGEgY2l0eSwgcGxhY2UsIG9yIGFkZHJlc3MgaW5zdGVhZC5cbiAgICAgICAgPC9wJmd0OyI6IjxvbCZndDtcbiAgICAgICAgICAgIDxsaSZndDtDbGljayB0aGUgPGImZ3Q7Z2VhcjwvYiZndDsgaW4gdGhlIHVwcGVyLXJpZ2h0IGhhbmQgY29ybmVyIG9mIHRoZSB3aW5kb3csIHRoZW4gPGImZ3Q7SW50ZXJuZXQgb3B0aW9uczwvYiZndDsuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtDbGljayB0aGUgPGImZ3Q7UHJpdmFjeTwvYiZndDsgdGFiIGluIHRoZSBuZXcgd2luZG93IHRoYXQganVzdCBhcHBlYXJlZC48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O1VuY2hlY2sgdGhlIGJveCBsYWJlbGVkIDxiJmd0O05ldmVyIGFsbG93IHdlYnNpdGVzIHRvIHJlcXVlc3QgeW91ciBwaHlzaWNhbCBsb2NhdGlvbjwvYiZndDsgaWYgaXQncyBhbHJlYWR5IGNoZWNrZWQuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtDbGljayB0aGUgYnV0dG9uIGxhYmVsZWQgPGImZ3Q7Q2xlYXIgU2l0ZXM8L2ImZ3Q7LjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7WW91J3JlIGdvb2QgdG8gZ28hIENsaWNrIDxiJmd0O09LPC9iJmd0OywgdGhlbiByZWZyZXNoIHRoaXMgWWVscCBwYWdlIGFuZCB0cnkgeW91ciBzZWFyY2ggYWdhaW4uPC9saSZndDtcbiAgICAgICAgPC9vbCZndDtcbiAgICAgICAgPHAmZ3Q7XG4gICAgICAgICAgICBZb3UgY2FuIGFsc28gc2VhcmNoIG5lYXIgYSBjaXR5LCBwbGFjZSwgb3IgYWRkcmVzcyBpbnN0ZWFkLlxuICAgICAgICA8L3AmZ3Q7IiwiPHAmZ3Q7XG4gICAgICAgICAgICBPb3BzISBXZSBkb24ndCByZWNvZ25pemUgdGhlIHdlYiBicm93c2VyIHlvdSdyZSBjdXJyZW50bHkgdXNpbmcuIFRyeSBjaGVja2luZyB0aGUgYnJvd3NlcidzIGhlbHAgbWVudSwgb3Igc2VhcmNoaW5nIHRoZSBXZWIgZm9yIGluc3RydWN0aW9ucyB0byB0dXJuIG9uIEhUTUw1IEdlb2xvY2F0aW9uIGZvciB5b3VyIGJyb3dzZXIuXG4gICAgICAgICAgICBZb3UgY2FuIGFsc28gc2VhcmNoIG5lYXIgYSBjaXR5LCBwbGFjZSwgb3IgYWRkcmVzcyBpbnN0ZWFkLlxuICAgICAgICA8L3AmZ3Q7IjoiPHAmZ3Q7XG4gICAgICAgICAgICBPb3BzISBXZSBkb24ndCByZWNvZ25pemUgdGhlIHdlYiBicm93c2VyIHlvdSdyZSBjdXJyZW50bHkgdXNpbmcuIFRyeSBjaGVja2luZyB0aGUgYnJvd3NlcidzIGhlbHAgbWVudSwgb3Igc2VhcmNoaW5nIHRoZSBXZWIgZm9yIGluc3RydWN0aW9ucyB0byB0dXJuIG9uIEhUTUw1IEdlb2xvY2F0aW9uIGZvciB5b3VyIGJyb3dzZXIuXG4gICAgICAgICAgICBZb3UgY2FuIGFsc28gc2VhcmNoIG5lYXIgYSBjaXR5LCBwbGFjZSwgb3IgYWRkcmVzcyBpbnN0ZWFkLlxuICAgICAgICA8L3AmZ3Q7IiwiPHAmZ3Q7Rmlyc3QsIHRyeSByZWZyZXNoaW5nIHRoZSBwYWdlIGFuZCBjbGlja2luZyBDdXJyZW50IExvY2F0aW9uIGFnYWluLiBNYWtlIHN1cmUgeW91IGNsaWNrIDxiJmd0O0FsbG93PC9iJmd0OyBvciA8YiZndDtHcmFudCBQZXJtaXNzaW9uczwvYiZndDsgaWYgeW91ciBicm93c2VyIGFza3MgZm9yIHlvdXIgbG9jYXRpb24uIEFsc28sIHRyeSA8YSBocmVmPVwiaHR0cHM6Ly9zdXBwb3J0LmFwcGxlLmNvbS9lbi11cy9IVDIwNDY5MFwiJmd0O2VuYWJsaW5nIExvY2F0aW9uIFNlcnZpY2VzIGZvciB5b3VyIGJyb3dzZXI8L2EmZ3Q7LiBJZiB5b3VyIGJyb3dzZXIgc3RpbGwgZG9lc24ndCBhc2sgeW91LCB0cnkgdGhlc2Ugc3RlcHM6PC9wJmd0OyI6IjxwJmd0O0ZpcnN0LCB0cnkgcmVmcmVzaGluZyB0aGUgcGFnZSBhbmQgY2xpY2tpbmcgQ3VycmVudCBMb2NhdGlvbiBhZ2Fpbi4gTWFrZSBzdXJlIHlvdSBjbGljayA8YiZndDtBbGxvdzwvYiZndDsgb3IgPGImZ3Q7R3JhbnQgUGVybWlzc2lvbnM8L2ImZ3Q7IGlmIHlvdXIgYnJvd3NlciBhc2tzIGZvciB5b3VyIGxvY2F0aW9uLiBBbHNvLCB0cnkgPGEgaHJlZj1cImh0dHBzOi8vc3VwcG9ydC5hcHBsZS5jb20vZW4tdXMvSFQyMDQ2OTBcIiZndDtlbmFibGluZyBMb2NhdGlvbiBTZXJ2aWNlcyBmb3IgeW91ciBicm93c2VyPC9hJmd0Oy4gSWYgeW91ciBicm93c2VyIHN0aWxsIGRvZXNuJ3QgYXNrIHlvdSwgdHJ5IHRoZXNlIHN0ZXBzOjwvcCZndDsiLCI8cCZndDtGaXJzdCwgdHJ5IHJlZnJlc2hpbmcgdGhlIHBhZ2UgYW5kIGNsaWNraW5nIEN1cnJlbnQgTG9jYXRpb24gYWdhaW4uIE1ha2Ugc3VyZSB5b3UgY2xpY2sgPGImZ3Q7QWxsb3c8L2ImZ3Q7IG9yIDxiJmd0O0dyYW50IFBlcm1pc3Npb25zPC9iJmd0OyBpZiB5b3VyIGJyb3dzZXIgYXNrcyBmb3IgeW91ciBsb2NhdGlvbi4gSWYgeW91ciBicm93c2VyIGRvZXNuJ3QgYXNrIHlvdSwgdHJ5IHRoZXNlIHN0ZXBzOjwvcCZndDsiOiI8cCZndDtGaXJzdCwgdHJ5IHJlZnJlc2hpbmcgdGhlIHBhZ2UgYW5kIGNsaWNraW5nIEN1cnJlbnQgTG9jYXRpb24gYWdhaW4uIE1ha2Ugc3VyZSB5b3UgY2xpY2sgPGImZ3Q7QWxsb3c8L2ImZ3Q7IG9yIDxiJmd0O0dyYW50IFBlcm1pc3Npb25zPC9iJmd0OyBpZiB5b3VyIGJyb3dzZXIgYXNrcyBmb3IgeW91ciBsb2NhdGlvbi4gSWYgeW91ciBicm93c2VyIGRvZXNuJ3QgYXNrIHlvdSwgdHJ5IHRoZXNlIHN0ZXBzOjwvcCZndDsiLCI8c3Ryb25nJmd0O0dvIG1vYmlsZSA8L3N0cm9uZyZndDsgd2l0aCB0aGUgPGEgaHJlZj0le21vYmlsZUFwcExpbmtIcmVmfSZndDsgJXttb2JpbGVBcHBMaW5rVGV4dH0gPC9hJmd0OyBmb3IgaU9TIGFuZCBBbmRyb2lkIjoiPHN0cm9uZyZndDtHbyBtb2JpbGUgPC9zdHJvbmcmZ3Q7IHdpdGggdGhlIDxhIGhyZWY9JXttb2JpbGVBcHBMaW5rSHJlZn0mZ3Q7ICV7bW9iaWxlQXBwTGlua1RleHR9IDwvYSZndDsgZm9yIGlPUyBhbmQgQW5kcm9pZCIsIkFib3V0IE1lIjoiQWJvdXQgTWUiLCJBY2NvdW50IFNldHRpbmdzIjoiQWNjb3VudCBTZXR0aW5ncyIsIkFkIENob2ljZXMiOiJBZCBDaG9pY2VzIiwiQXJlIHlvdSBhIGh1bWFuPyBQbGVhc2UgY29tcGxldGUgdGhlIGJvdCBjaGFsbGVuZ2UgYmVsb3cuIjoiQXJlIHlvdSBhIGh1bWFuPyBQbGVhc2UgY29tcGxldGUgdGhlIGJvdCBjaGFsbGVuZ2UgYmVsb3cuIiwiQmxvZyI6IkJsb2ciLCJCdXNpbmVzcyBMaXN0aW5ncyBwcm92aWRlZCBieSBZZWxsb3cgUGFnZXPCriI6IkJ1c2luZXNzIExpc3RpbmdzIHByb3ZpZGVkIGJ5IFllbGxvdyBQYWdlc8KuIiwiQ2FuY2VsIjoiQ2FuY2VsIiwiQ2xvc2UiOiJDbG9zZSIsIkNvbnRlbnQgR3VpZGVsaW5lcyI6IkNvbnRlbnQgR3VpZGVsaW5lcyIsIkNvcHlyaWdodCDCqSAyMDA04oCTJXtjdXJyZW50WWVhcn0gWWVscCI6IkNvcHlyaWdodCDCqSAyMDA04oCTJXtjdXJyZW50WWVhcn0gWWVscCIsIkNvdW50cmllcyI6IkNvdW50cmllcyIsIkN1cnJlbnQgTG9jYXRpb24iOiJDdXJyZW50IExvY2F0aW9uIiwiRmluZCI6IkZpbmQiLCJGaW5kIEZyaWVuZHMiOiJGaW5kIEZyaWVuZHMiLCJGaW5kaW5nIHlvdXIgbG9jYXRpb24uLi4iOiJGaW5kaW5nIHlvdXIgbG9jYXRpb24uLi4iLCJGb3IgQnVzaW5lc3NlcyI6IkZvciBCdXNpbmVzc2VzIiwiTGFuZ3VhZ2VzIjoiTGFuZ3VhZ2VzIiwiTG9nIEluIjoiTG9nIEluIiwiTG9nIE91dCI6IkxvZyBPdXQiLCJNZW51IjoiTWVudSIsIk1lc3NhZ2VzIjoiTWVzc2FnZXMiLCJNb3JlIjoiTW9yZSIsIk5FVyI6Ik5FVyIsIk5lYXIiOiJOZWFyIiwiTmVlZCBoZWxwPyI6Ik5lZWQgaGVscD8iLCJOb3RpZmljYXRpb25zIjoiTm90aWZpY2F0aW9ucyIsIk9vcHMhIFlvdSBuZWVkIHRvIGhhdmUgdmVyaWZpZWQgeW91ciBlbWFpbCB0byBsb2cgaW4gd2l0aCBHb29nbGUuIFBsZWFzZSBsb2cgaW4gdXNpbmcgeW91ciBlbWFpbCBhbmQgcGFzc3dvcmQuIjoiT29wcyEgWW91IG5lZWQgdG8gaGF2ZSB2ZXJpZmllZCB5b3VyIGVtYWlsIHRvIGxvZyBpbiB3aXRoIEdvb2dsZS4gUGxlYXNlIGxvZyBpbiB1c2luZyB5b3VyIGVtYWlsIGFuZCBwYXNzd29yZC4iLCJPb3BzLCBzb21ldGhpbmcgd2VudCB3cm9uZy4gUGxlYXNlIHRyeSBhZ2Fpbi4iOiJPb3BzLCBzb21ldGhpbmcgd2VudCB3cm9uZy4gUGxlYXNlIHRyeSBhZ2Fpbi4iLCJPb3BzLCB3ZSBjYW4ndCBmaW5kIHlvdXIgbG9jYXRpb24iOiJPb3BzLCB3ZSBjYW4ndCBmaW5kIHlvdXIgbG9jYXRpb24iLCJQcml2YWN5IFBvbGljeSI6IlByaXZhY3kgUG9saWN5IiwiU2VhcmNoIjoiU2VhcmNoIiwiU2lnbiBVcCI6IlNpZ24gVXAiLCJTb21lIERhdGEgQnkgQWN4aW9tIjoiU29tZSBEYXRhIEJ5IEFjeGlvbSIsIlNvbWUgYnVzaW5lc3MgZGF0YSBieSA8YSB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub2ZvbGxvd1wiIGhyZWY9XCJodHRwOi8vd3d3LnllbGxvdy5jb20udHJcIiBjbGFzcz1cIiV7Y2xhc3Nlc31cIiZndDtZZWxsb3cuY29tLnRyPC9hJmd0OyI6IlNvbWUgYnVzaW5lc3MgZGF0YSBieSA8YSB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub2ZvbGxvd1wiIGhyZWY9XCJodHRwOi8vd3d3LnllbGxvdy5jb20udHJcIiBjbGFzcz1cIiV7Y2xhc3Nlc31cIiZndDtZZWxsb3cuY29tLnRyPC9hJmd0OyIsIlNvbWV0aGluZyBicm9rZSBhbmQgd2UncmUgbm90IHN1cmUgd2hhdC4gVHJ5IGFnYWluIGxhdGVyLCBvciBzZWFyY2ggbmVhciBhIGNpdHksIHBsYWNlLCBvciBhZGRyZXNzIGluc3RlYWQuIjoiU29tZXRoaW5nIGJyb2tlIGFuZCB3ZSdyZSBub3Qgc3VyZSB3aGF0LiBUcnkgYWdhaW4gbGF0ZXIsIG9yIHNlYXJjaCBuZWFyIGEgY2l0eSwgcGxhY2UsIG9yIGFkZHJlc3MgaW5zdGVhZC4iLCJTdGF0dXMiOiJTdGF0dXMiLCJTdXBwb3J0IjoiU3VwcG9ydCIsIlRlcm1zIG9mIFNlcnZpY2UiOiJUZXJtcyBvZiBTZXJ2aWNlIiwiVG9nZ2xlIE1lbnUiOiJUb2dnbGUgTWVudSIsIldlIGNvdWxkbid0IGZpbmQgYW4gYWNjdXJhdGUgcG9zaXRpb24uIElmIHlvdSdyZSB1c2luZyBhIGxhcHRvcCBvciB0YWJsZXQsIHRyeSBtb3ZpbmcgaXQgc29tZXdoZXJlIGVsc2UgYW5kIGdpdmUgaXQgYW5vdGhlciBnby4gT3IsIHNlYXJjaCBuZWFyIGEgY2l0eSwgcGxhY2UsIG9yIGFkZHJlc3MgaW5zdGVhZC4iOiJXZSBjb3VsZG4ndCBmaW5kIGFuIGFjY3VyYXRlIHBvc2l0aW9uLiBJZiB5b3UncmUgdXNpbmcgYSBsYXB0b3Agb3IgdGFibGV0LCB0cnkgbW92aW5nIGl0IHNvbWV3aGVyZSBlbHNlIGFuZCBnaXZlIGl0IGFub3RoZXIgZ28uIE9yLCBzZWFyY2ggbmVhciBhIGNpdHksIHBsYWNlLCBvciBhZGRyZXNzIGluc3RlYWQuIiwiV2UgY291bGRuJ3QgZmluZCB5b3UgcXVpY2tseSBlbm91Z2ghIFRyeSBhZ2FpbiBsYXRlciwgb3Igc2VhcmNoIG5lYXIgYSBjaXR5LCBwbGFjZSwgb3IgYWRkcmVzcyBpbnN0ZWFkLiI6IldlIGNvdWxkbid0IGZpbmQgeW91IHF1aWNrbHkgZW5vdWdoISBUcnkgYWdhaW4gbGF0ZXIsIG9yIHNlYXJjaCBuZWFyIGEgY2l0eSwgcGxhY2UsIG9yIGFkZHJlc3MgaW5zdGVhZC4iLCJXZWJpbmFycyI6IldlYmluYXJzIiwiV3JpdGUgYSBSZXZpZXciOiJXcml0ZSBhIFJldmlldyIsIlllbHAgSGVhZGVyIjoiWWVscCBIZWFkZXIiLCJZZWxwIGZvciBCdXNpbmVzcyBhcHAiOiJZZWxwIGZvciBCdXNpbmVzcyBhcHAiLCJhZGRyZXNzLCBuZWlnaGJvcmhvb2QsIGNpdHksIHN0YXRlIG9yIHppcCI6ImFkZHJlc3MsIG5laWdoYm9yaG9vZCwgY2l0eSwgc3RhdGUgb3IgemlwIiwidGFjb3MsIGNoZWFwIGRpbm5lciwgTWF44oCZcyI6InRhY29zLCBjaGVhcCBkaW5uZXIsIE1heOKAmXMifSwiZ2FDb25maWciOnsiY2xpZW50SUQiOiJBNDM1OTJDRDM4MkYzMzNDIiwiZGltZW5zaW9ucyI6eyJnbG9iYWwiOnsiYWNjb3VudF9sZXZlbCI6WzEsImFub24iXSwiY29udGVudF9jb3VudHJ5IjpbMTEsIlVTIl0sImRpc3RpbCI6WzEyLG51bGxdLCJkaXN0aWxfanNfZW5hYmxlZCI6WzEzLG51bGxdLCJmdWxsX3VybCI6WzE1LCIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyIl0sImludGVncmF0aW9uIjpbMTcsIiJdLCJpbnRlcm5hbF9pcCI6WzE4LCJGYWxzZSJdLCJrbm93bl9ib3QiOlszNiwib3RoZXIiXSwicmVmZXJyZXIiOlsyOCwibm9uZSJdfSwid3d3Ijp7ImFjY291bnRfbGV2ZWwiOlsxLCJhbm9uIl0sImNvbnRlbnRfY291bnRyeSI6WzE1LCJVUyJdLCJkZWNyeXB0ZWRfeXV2X2lkIjpbMywiQTQzNTkyQ0QzODJGMzMzQyJdLCJkaXN0aWwiOls1MyxudWxsXSwiZGlzdGlsX2pzX2VuYWJsZWQiOlsxMzgsbnVsbF0sImZ1bGxfdXJsIjpbMzQsIi9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIiXSwiaW50ZWdyYXRpb24iOlsxNCwiIl0sImludGVybmFsX2lwIjpbMjcsIkZhbHNlIl0sImlzX2Jpel91c2VyIjpbMTI5LCJGYWxzZSJdLCJrbm93bl9ib3QiOlsxODYsIm90aGVyIl0sInJlZmVycmVyIjpbNjQsIm5vbmUiXSwicmVtb3RlX2lwIjpbNCwiOTcuMTIyLjE5Ny4wIl0sInNlcnZpY2UiOlsxMDcsInllbHAtbWFpbiJdLCJ2aWV3cG9ydF90cmFja2luZyI6WzI5LG51bGxdLCJhZC53ZWJfY2Fyb3VzZWxfYm90dG9tX29mX2JpeiI6Wzc4LCJzdGF0dXNfcXVvIl0sInd3d19lZHVjYXRpb25fYmFubmVyIjpbMTkwLCJlbmFibGVkIl0sImNvbnRyaWJ1dGlvbnMud3d3LnJlbW92ZV9yZXZpZXdfZHJhZnRfbW9kdWxlcyI6WzE4Mywic3RhdHVzX3F1byJdLCJjb250cmlidXRpb25zLnd3dy53YXJfYXR0YWNoX3Bob3RvcyI6Wzk5LCJlbmFibGVkIl0sImNvbnRyaWJ1dGlvbnMud3d3Lndhcl9jb21wb3NlX3JlY2VudF9waG90b3MiOlsxMDIsImVuYWJsZWQiXSwiY29udHJpYnV0aW9ucy53d3cud2FyX2NvbXBvc2VfcmVkZXNpZ24iOls2LCJlbmFibGVkIl0sImNvbnRyaWJ1dGlvbnMud3d3Lndhcl9jb21wb3NlX3NpZ251cCI6WzE0OCwiZGlzYWJsZWQiXSwiZWF0MjRfZnJlZV9kZWxpdmVyeV9iYW5uZXIiOls0NSwiZGlzYWJsZWQiXSwibHNtb25leS53d3cueWdfcmFxX2NhcmRzX29uX3NlYXJjaCI6WzE1Miwic3RhdHVzX3F1byJdLCJsc2F0Lnd3dy5kcm9wZG93bl9oZWFkZXIiOls1NCwiZW5hYmxlZCJdLCJsc20ud3d3LnVucGFrdF9jdGFfY2hhbmdlIjpbMTA4LCJ1bnBha3RfY3RhX2VuYWJsZWQiXSwibWVzc2FnaW5nLnd3dy5jb21wb3Nlcl9ub3RpZmljYXRpb25zX3NwYW1fYW5kX2hvdmVyX3N0YXRlIjpbMTc3LCJub3RpZmljYXRpb25zX2VuYWJsZWQiXSwibWVzc2FnaW5nLnd3dy5yYXFfY2FyZHNfb25fc2VhcmNoIjpbNjEsInN0YXR1c19xdW8iXSwibWVzc2FnaW5nLnd3dy55ZWxwX2d1YXJhbnRlZWQiOlsxNjAsInN0YXR1c19xdW8iXSwibm93YWl0X3Jlc3RhdXJhbnQud3d3Lm5vX3dhaXRfbWVzc2FnZSI6WzEwNiwic2hvd193YWl0X29yX2dldF9pbl9saW5lX2NvcHkiXSwicGFnZWxldF9tb2RlX3d3d19iaXpfZGV0YWlscyI6WzI0LCJhbGxvd19hc3luYyJdLCJwYXltZW50LnV4Lnd3dyI6WzE5NywiZW5hYmxlZCJdLCJwbGF0Zm9ybV9waWNrdXBfZmlsdGVyIjpbMjAsImVuYWJsZWQiXSwicmVhZGVyeC53ZWIuYml6X2Zvcl9zZXJ2aWNlcyI6WzExNiwiYml6X3N0YXR1c19xdW8iXSwicmVhZGVyeC53ZWIucG9wdWxhcl9kaXNoZXMiOlsxOTgsImhpZ2hsaWdodHNfcG9wdWxhcl9kaXNoZXMiXSwicmV2aWV3X2FjdGlvbnNfZHJvcGRvd24iOlsyLCJkaXNhYmxlZCJdLCJzZWFyY2h1eC53d3cuc2VydmljZXNfc2VycF9jYXJkX25ld19sYXlvdXRfdjBfMCI6WzE1MSwic3RhdHVzX3F1byJdLCJzdHlsZWd1aWRlX2J1dHRvbnMiOlsxMywic3RhdHVzX3F1byJdLCJzdHlsZWd1aWRlX3R5cG9ncmFwaHkiOlsxNTksInN0YXR1c19xdW8iXSwidHhuLnd3dy5jaGVja291dF9wYWdlX2NoYW5nZXMiOlsxMzUsImVuYWJsZWQiXSwid3d3X2Jpel9kZXRhaWxzX3JhcV9zdGlja3kiOls4NCwiZW5hYmxlZCJdLCJ3d3dfY3VycmVudF9sb2NhdGlvbl9zdWdnZXN0aW9uIjpbMTg1LCJlbmFibGVkIl0sInd3d19zZWNvbmRfcGFnZV9waXRjaCI6WzExMSwic3RhdHVzX3F1byJdLCJ3d3dfc2lnbnVwX3JlZGVzaWduIjpbOTIsInN0YXR1c19xdW8iXSwieXRwX2RlbGl2ZXJ5X2xhbmRpbmciOlsxMjUsInBsYXRmb3JtX3BhZ2VzIl0sInl0cF9lYXQyNF95ZWxwX3N0eWxlX3RvX2lmcmFtZSI6WzEzNiwic3RhdHVzX3F1byJdLCJ5dHBfb3JkZXJfY29uZmlybWF0aW9uX3BhZ2UiOlsxNDMsImVuYWJsZWQiXSwid3d3X3NlYXJjaF9zbmlwcGV0c19pbl9zeW5jX3dpdGhfYWRzIjpbMTEyLCJzdGF0dXNfcXVvXzgiXSwieXJfZGluZXIud3d3LmRpcmVjdF9jaGVja291dF9mb3JfZXhhY3RfbWF0Y2giOlsxNjMsImRpc2FibGVkIl19fSwiZG9tYWluIjoieWVscC5jb20iLCJlbmFibGVfaGlnaF92b2x1bWVfZXZlbnRzIjpmYWxzZSwiZ2FfZW5hYmxlZCI6dHJ1ZSwianNfZGltZW5zaW9ucyI6eyJnbG9iYWwiOnt9LCJ3d3ciOnsianNfdmVydGljYWxfc2VhcmNoX3R5cGUiOlszOSxudWxsXSwicGxhdGZvcm1fb3JkZXJfdHlwZSI6WzEyNyxudWxsXX19LCJtZXRyaWNzIjp7Imdsb2JhbCI6e30sInd3dyI6e319LCJ0cmFja2VycyI6eyJ3d3ciOiJVQS0zMDUwMS0yNCIsImdsb2JhbCI6IlVBLTMwNTAxLTEifSwidXNlcl9pZCI6bnVsbH0sImluaXRpYWxIaWRkZW5Mb2NhdGlvbklucHV0TmFtZSI6ImZpbmRfbG9jIiwiaW5pdGlhbExvY2F0aW9uRGlzcGxheVZhbCI6IlNhbiBGcmFuY2lzY28sIENBIiwiaW5pdGlhbEhpZGRlbkxvY2F0aW9uSW5wdXRWYWwiOiJTYW4gRnJhbmNpc2NvLCBDQSIsImluaXRpYWxJc0N1cnJlbnRMb2NhdGlvbiI6ZmFsc2UsImluaXRpYWxTZWFyY2hEaXNwbGF5VmFsIjoiIiwidXNlckRhdGEiOm51bGwsImJpelNpdGVVUkwiOm51bGwsImN1cnJlbnRVUkwiOiJodHRwczovL3d3dy55ZWxwLmNvbS9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIiLCJsb2dvdXRDc3JmVG9rZW4iOiJiMWJmMzI3ZmZlMWNlYzY0NmIwY2I1MjEzNjA1ZWQzMDA4MjlhZTg1NDE1YjVjZWNkMzhlMjQ4NDIwM2JiYjkzIiwibGVmdExpbmtzRGF0YSI6W3sidGV4dCI6IlJlc3RhdXJhbnRzIiwiaHJlZiI6Ii9zZWFyY2g/Y2ZsdD1yZXN0YXVyYW50cyZhbXA7ZmluZF9sb2M9U2FuK0ZyYW5jaXNjbyUyQytDQSIsImljb25OYW1lIjoiSWNvbkZvb2QyNCIsInBsYXRmb3JtIjoiZGVza3RvcCIsImFsaWFzIjoicmVzdGF1cmFudHMiLCJwcm9tbyI6bnVsbCwiZHJvcGRvd25MaW5rc0RhdGEiOltbeyJ0ZXh0IjoiRGVsaXZlcnkiLCJocmVmIjoiL3NlYXJjaD9maW5kX2Rlc2M9ZGVsaXZlcnkmYW1wO2ZpbmRfbG9jPVNhbitGcmFuY2lzY28lMkMrQ0EiLCJpY29uTmFtZSI6Ikljb25EZWxpdmVyeTI0IiwiZ2FMYWJlbCI6ImRlbGl2ZXJ5In0seyJ0ZXh0IjoiQnVyZ2VycyIsImhyZWYiOiIvc2VhcmNoP2NmbHQ9YnVyZ2VycyZhbXA7ZmluZF9sb2M9U2FuK0ZyYW5jaXNjbyUyQytDQSIsImljb25OYW1lIjoiSWNvbkJ1cmdlcnMyNCIsImdhTGFiZWwiOiJidXJnZXJzIn0seyJ0ZXh0IjoiQ2hpbmVzZSIsImhyZWYiOiIvc2VhcmNoP2NmbHQ9Y2hpbmVzZSZhbXA7ZmluZF9sb2M9U2FuK0ZyYW5jaXNjbyUyQytDQSIsImljb25OYW1lIjoiSWNvbk5vb2RsZXMyNCIsImdhTGFiZWwiOiJjaGluZXNlIn0seyJ0ZXh0IjoiSXRhbGlhbiIsImhyZWYiOiIvc2VhcmNoP2NmbHQ9aXRhbGlhbiZhbXA7ZmluZF9sb2M9U2FuK0ZyYW5jaXNjbyUyQytDQSIsImljb25OYW1lIjoiSWNvblBhc3RhMjQiLCJnYUxhYmVsIjoiaXRhbGlhbiJ9XSxbeyJ0ZXh0IjoiUmVzZXJ2YXRpb25zIiwiaHJlZiI6Ii9zZWFyY2g/ZmluZF9kZXNjPXJlc2VydmF0aW9ucyZhbXA7ZmluZF9sb2M9U2FuK0ZyYW5jaXNjbyUyQytDQSIsImljb25OYW1lIjoiSWNvblJlc2VydmF0aW9uMjQiLCJnYUxhYmVsIjoicmVzZXJ2YXRpb25zIn0seyJ0ZXh0IjoiSmFwYW5lc2UiLCJocmVmIjoiL3NlYXJjaD9jZmx0PWphcGFuZXNlJmFtcDtmaW5kX2xvYz1TYW4rRnJhbmNpc2NvJTJDK0NBIiwiaWNvbk5hbWUiOiJJY29uU3VzaGkyNCIsImdhTGFiZWwiOiJqYXBhbmVzZSJ9LHsidGV4dCI6Ik1leGljYW4iLCJocmVmIjoiL3NlYXJjaD9jZmx0PW1leGljYW4mYW1wO2ZpbmRfbG9jPVNhbitGcmFuY2lzY28lMkMrQ0EiLCJpY29uTmFtZSI6Ikljb25UYWNvMjQiLCJnYUxhYmVsIjoibWV4aWNhbiJ9LHsidGV4dCI6IlRoYWkiLCJocmVmIjoiL3NlYXJjaD9jZmx0PXRoYWkmYW1wO2ZpbmRfbG9jPVNhbitGcmFuY2lzY28lMkMrQ0EiLCJpY29uTmFtZSI6Ikljb25UaGFpMjQiLCJnYUxhYmVsIjoidGhhaSJ9XV19LHsidGV4dCI6IkhvbWUgU2VydmljZXMiLCJocmVmIjoiL3NlYXJjaD9jZmx0PWhvbWVzZXJ2aWNlcyZhbXA7ZmluZF9sb2M9U2FuK0ZyYW5jaXNjbyUyQytDQSIsImljb25OYW1lIjoiSWNvbkhvbWVTZXJ2aWNlczI0IiwicGxhdGZvcm0iOiJkZXNrdG9wIiwiYWxpYXMiOiJob21lc2VydmljZXMiLCJwcm9tbyI6bnVsbCwiZHJvcGRvd25MaW5rc0RhdGEiOltbeyJ0ZXh0IjoiQ29udHJhY3RvcnMiLCJocmVmIjoiL3NlYXJjaD9jZmx0PWNvbnRyYWN0b3JzJmFtcDtmaW5kX2xvYz1TYW4rRnJhbmNpc2NvJTJDK0NBIiwiaWNvbk5hbWUiOiJJY29uQ29udHJhY3RvcjI0IiwiZ2FMYWJlbCI6ImNvbnRyYWN0b3JzIn0seyJ0ZXh0IjoiRWxlY3RyaWNpYW5zIiwiaHJlZiI6Ii9zZWFyY2g/Y2ZsdD1lbGVjdHJpY2lhbnMmYW1wO2ZpbmRfbG9jPVNhbitGcmFuY2lzY28lMkMrQ0EiLCJpY29uTmFtZSI6Ikljb25FbGVjdHJpY2lhbjI0IiwiZ2FMYWJlbCI6ImVsZWN0cmljaWFucyJ9LHsidGV4dCI6IkhvbWUgQ2xlYW5lcnMiLCJocmVmIjoiL3NlYXJjaD9jZmx0PWhvbWVjbGVhbmluZyZhbXA7ZmluZF9sb2M9U2FuK0ZyYW5jaXNjbyUyQytDQSIsImljb25OYW1lIjoiSWNvbkhvbWVDbGVhbmluZzI0IiwiZ2FMYWJlbCI6ImhvbWVjbGVhbmluZyJ9LHsidGV4dCI6IkhWQUMiLCJocmVmIjoiL3NlYXJjaD9jZmx0PWh2YWMmYW1wO2ZpbmRfbG9jPVNhbitGcmFuY2lzY28lMkMrQ0EiLCJpY29uTmFtZSI6Ikljb25IZWF0aW5nQ29vbGluZzI0IiwiZ2FMYWJlbCI6Imh2YWMifV0sW3sidGV4dCI6IkxhbmRzY2FwaW5nIiwiaHJlZiI6Ii9zZWFyY2g/Y2ZsdD1sYW5kc2NhcGluZyZhbXA7ZmluZF9sb2M9U2FuK0ZyYW5jaXNjbyUyQytDQSIsImljb25OYW1lIjoiSWNvbkxhbmRzY2FwaW5nMjQiLCJnYUxhYmVsIjoibGFuZHNjYXBpbmcifSx7InRleHQiOiJMb2Nrc21pdGhzIiwiaHJlZiI6Ii9zZWFyY2g/Y2ZsdD1sb2Nrc21pdGhzJmFtcDtmaW5kX2xvYz1TYW4rRnJhbmNpc2NvJTJDK0NBIiwiaWNvbk5hbWUiOiJJY29uTG9ja3NtaXRoMjQiLCJnYUxhYmVsIjoibG9ja3NtaXRocyJ9LHsidGV4dCI6Ik1vdmVycyIsImhyZWYiOiIvc2VhcmNoP2NmbHQ9bW92ZXJzJmFtcDtmaW5kX2xvYz1TYW4rRnJhbmNpc2NvJTJDK0NBIiwiaWNvbk5hbWUiOiJJY29uTW92aW5nMjQiLCJnYUxhYmVsIjoibW92ZXJzIn0seyJ0ZXh0IjoiUGx1bWJlcnMiLCJocmVmIjoiL3NlYXJjaD9jZmx0PXBsdW1iaW5nJmFtcDtmaW5kX2xvYz1TYW4rRnJhbmNpc2NvJTJDK0NBIiwiaWNvbk5hbWUiOiJJY29uUGx1bWJlcnMyNCIsImdhTGFiZWwiOiJwbHVtYmluZyJ9XV19LHsidGV4dCI6IkF1dG8gU2VydmljZXMiLCJocmVmIjoiL3NlYXJjaD9jZmx0PWF1dG8mYW1wO2ZpbmRfbG9jPVNhbitGcmFuY2lzY28lMkMrQ0EiLCJpY29uTmFtZSI6Ikljb25DYXIyNCIsInBsYXRmb3JtIjoiZGVza3RvcCIsImFsaWFzIjoiYXV0byIsInByb21vIjpudWxsLCJkcm9wZG93bkxpbmtzRGF0YSI6W1t7InRleHQiOiJBdXRvIFJlcGFpciIsImhyZWYiOiIvc2VhcmNoP2NmbHQ9YXV0b3JlcGFpciZhbXA7ZmluZF9sb2M9U2FuK0ZyYW5jaXNjbyUyQytDQSIsImljb25OYW1lIjoiSWNvbkF1dG9SZXBhaXIyNCIsImdhTGFiZWwiOiJhdXRvcmVwYWlyIn0seyJ0ZXh0IjoiQXV0byBEZXRhaWxpbmciLCJocmVmIjoiL3NlYXJjaD9jZmx0PWF1dG9fZGV0YWlsaW5nJmFtcDtmaW5kX2xvYz1TYW4rRnJhbmNpc2NvJTJDK0NBIiwiaWNvbk5hbWUiOiJJY29uQXV0b0RldGFpbGluZzI0IiwiZ2FMYWJlbCI6ImF1dG9fZGV0YWlsaW5nIn0seyJ0ZXh0IjoiQm9keSBTaG9wcyIsImhyZWYiOiIvc2VhcmNoP2NmbHQ9Ym9keXNob3BzJmFtcDtmaW5kX2xvYz1TYW4rRnJhbmNpc2NvJTJDK0NBIiwiaWNvbk5hbWUiOiJJY29uQm9keVNob3AyNCIsImdhTGFiZWwiOiJib2R5c2hvcHMifSx7InRleHQiOiJDYXIgV2FzaCIsImhyZWYiOiIvc2VhcmNoP2NmbHQ9Y2Fyd2FzaCZhbXA7ZmluZF9sb2M9U2FuK0ZyYW5jaXNjbyUyQytDQSIsImljb25OYW1lIjoiSWNvbkNhcldhc2gyNCIsImdhTGFiZWwiOiJjYXJ3YXNoIn1dLFt7InRleHQiOiJDYXIgRGVhbGVycyIsImhyZWYiOiIvc2VhcmNoP2NmbHQ9Y2FyX2RlYWxlcnMmYW1wO2ZpbmRfbG9jPVNhbitGcmFuY2lzY28lMkMrQ0EiLCJpY29uTmFtZSI6Ikljb25DYXJEZWFsZXIyNCIsImdhTGFiZWwiOiJjYXJfZGVhbGVycyJ9LHsidGV4dCI6Ik9pbCBDaGFuZ2UiLCJocmVmIjoiL3NlYXJjaD9jZmx0PW9pbGNoYW5nZSZhbXA7ZmluZF9sb2M9U2FuK0ZyYW5jaXNjbyUyQytDQSIsImljb25OYW1lIjoiSWNvbk9pbENoYW5nZTI0IiwiZ2FMYWJlbCI6Im9pbGNoYW5nZSJ9LHsidGV4dCI6IlBhcmtpbmciLCJocmVmIjoiL3NlYXJjaD9jZmx0PXBhcmtpbmcmYW1wO2ZpbmRfbG9jPVNhbitGcmFuY2lzY28lMkMrQ0EiLCJpY29uTmFtZSI6Ikljb25QYXJraW5nMjQiLCJnYUxhYmVsIjoicGFya2luZyJ9LHsidGV4dCI6IlRvd2luZyIsImhyZWYiOiIvc2VhcmNoP2NmbHQ9dG93aW5nJmFtcDtmaW5kX2xvYz1TYW4rRnJhbmNpc2NvJTJDK0NBIiwiaWNvbk5hbWUiOiJJY29uVG93aW5nMjQiLCJnYUxhYmVsIjoidG93aW5nIn1dXX0seyJ0ZXh0IjoiTW9yZSIsImhyZWYiOm51bGwsImljb25OYW1lIjoiIiwicGxhdGZvcm0iOiJkZXNrdG9wIiwiYWxpYXMiOiJtb3JlIiwicHJvbW8iOm51bGwsImRyb3Bkb3duTGlua3NEYXRhIjpbW3sidGV4dCI6IkRyeSBDbGVhbmluZyIsImhyZWYiOiIvc2VhcmNoP2NmbHQ9ZHJ5Y2xlYW4mYW1wO2ZpbmRfbG9jPVNhbitGcmFuY2lzY28lMkMrQ0EiLCJpY29uTmFtZSI6Ikljb25EcnlDbGVhbmluZzI0IiwiZ2FMYWJlbCI6ImRyeWNsZWFuaW5nIn0seyJ0ZXh0IjoiUGhvbmUgUmVwYWlyIiwiaHJlZiI6Ii9zZWFyY2g/Y2ZsdD1tb2JpbGVwaG9uZXJlcGFpciZhbXA7ZmluZF9sb2M9U2FuK0ZyYW5jaXNjbyUyQytDQSIsImljb25OYW1lIjoiSWNvblBob25lUmVwYWlyMjQiLCJnYUxhYmVsIjoicGhvbmVyZXBhaXIifSx7InRleHQiOiJCYXJzIiwiaHJlZiI6Ii9zZWFyY2g/Y2ZsdD1iYXJzJmFtcDtmaW5kX2xvYz1TYW4rRnJhbmNpc2NvJTJDK0NBIiwiaWNvbk5hbWUiOiJJY29uQmFyczI0IiwiZ2FMYWJlbCI6ImJhcnMifSx7InRleHQiOiJOaWdodGxpZmUiLCJocmVmIjoiL3NlYXJjaD9jZmx0PW5pZ2h0bGlmZSZhbXA7ZmluZF9sb2M9U2FuK0ZyYW5jaXNjbyUyQytDQSIsImljb25OYW1lIjoiSWNvbk5pZ2h0bGlmZTI0IiwiZ2FMYWJlbCI6Im5pZ2h0bGlmZSJ9XSxbeyJ0ZXh0IjoiSGFpciBTYWxvbnMiLCJocmVmIjoiL3NlYXJjaD9jZmx0PWhhaXImYW1wO2ZpbmRfbG9jPVNhbitGcmFuY2lzY28lMkMrQ0EiLCJpY29uTmFtZSI6Ikljb25TYWxvbjI0IiwiZ2FMYWJlbCI6ImhhaXJfc2Fsb25zIn0seyJ0ZXh0IjoiR3ltcyIsImhyZWYiOiIvc2VhcmNoP2NmbHQ9Z3ltcyZhbXA7ZmluZF9sb2M9U2FuK0ZyYW5jaXNjbyUyQytDQSIsImljb25OYW1lIjoiSWNvbkd5bXMyNCIsImdhTGFiZWwiOiJneW1zIn0seyJ0ZXh0IjoiTWFzc2FnZSIsImhyZWYiOiIvc2VhcmNoP2NmbHQ9bWFzc2FnZSZhbXA7ZmluZF9sb2M9U2FuK0ZyYW5jaXNjbyUyQytDQSIsImljb25OYW1lIjoiSWNvbk1hc3NhZ2UyNCIsImdhTGFiZWwiOiJtYXNzYWdlIn0seyJ0ZXh0IjoiU2hvcHBpbmciLCJocmVmIjoiL3NlYXJjaD9jZmx0PXNob3BwaW5nJmFtcDtmaW5kX2xvYz1TYW4rRnJhbmNpc2NvJTJDK0NBIiwiaWNvbk5hbWUiOiJJY29uU2hvcHBpbmcyNCIsImdhTGFiZWwiOiJzaG9wcGluZyJ9XV19XSwicmlnaHRMaW5rc0RhdGEiOlt7InRleHQiOiJXcml0ZSBhIFJldmlldyIsImhyZWYiOiIvd3JpdGVhcmV2aWV3IiwiaWNvbk5hbWUiOiJJY29uUGVuY2lsMjQiLCJwbGF0Zm9ybSI6ImRlc2t0b3AiLCJhbGlhcyI6IndyaXRlYXJldmlldyIsInByb21vIjpudWxsLCJkcm9wZG93bkxpbmtzRGF0YSI6W119LHsidGV4dCI6IkZvciBCdXNpbmVzc2VzIiwiaHJlZiI6Ii9hZHZlcnRpc2UvY29uc3VtZXJfaGVhZGVyX3JlZGlyZWN0IiwiaWNvbk5hbWUiOiJJY29uQml6aG91c2UyNCIsInBsYXRmb3JtIjoiZGVza3RvcCIsImFsaWFzIjoiYml6Y2FsbG91dCIsInByb21vIjpudWxsLCJkcm9wZG93bkxpbmtzRGF0YSI6W119XX0tLT48L3NjcmlwdD48L3llbHAtcmVhY3Qtcm9vdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgICAgICAgICAgPHNjcmlwdCBub25jZT0iMzIxNjQ4OWMiPgogICAgICAgICAgICAoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICB2YXIgbWFpbiA9IG51bGw7CgogICAgICAgICAgICAgICAgdmFyIG1haW49KGZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShiKXt3aW5kb3cueURGUC5BQlA9e307d2luZG93LnlERlAuQUJQLmdldFBpeGVsU291cmNlPWZ1bmN0aW9uKGMpe3JldHVybiBiKyI/Y2g9IitjKyImcm49IitNYXRoLnJhbmRvbSgpKjExfTt3aW5kb3cueURGUC5BQlAuZGV0ZWN0PWZ1bmN0aW9uKGwpe3ZhciBnPWZhbHNlO3ZhciBmPTI7dmFyIGk9ZmFsc2U7dmFyIGg9ZmFsc2U7ZnVuY3Rpb24gayhuLG0pe2lmKGY9PT0wfHxtPjQwMCl7bihmPT09MCYmZyl9ZWxzZXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ayhuLG0qMil9LG0qMil9fWZ1bmN0aW9uIGooKXtpZihmIT09MCl7cmV0dXJufWc9IWkmJmh9dmFyIGU9ZnVuY3Rpb24oKXtmLT0xO2ooKX07dmFyIGQ9bmV3IEltYWdlKCk7ZC5vbmxvYWQ9ZTtkLm9uZXJyb3I9ZnVuY3Rpb24oKXtpPXRydWU7ZSgpfTtkLnNyYz13aW5kb3cueURGUC5BQlAuZ2V0UGl4ZWxTb3VyY2UoMSk7dmFyIGM9bmV3IEltYWdlKCk7Yy5vbmxvYWQ9ZTsKYy5vbmVycm9yPWZ1bmN0aW9uKCl7aD10cnVlO2UoKX07Yy5zcmM9d2luZG93LnlERlAuQUJQLmdldFBpeGVsU291cmNlKDIpO2sobCwxMDApfTt3aW5kb3cueURGUC5BQlAuYWJwSW5zdGFsbGVkQ2hhbm5lbD0iMTM4MjU1MTg3NiI7d2luZG93LnlERlAuQUJQLmFicE5vdEluc3RhbGxlZENoYW5uZWw9IjI4NTkyODUwNzMifXdpbmRvdy55REZQPXdpbmRvdy55REZQfHx7fTt3aW5kb3cueURGUC5pbml0QUJQRGV0ZWN0aW9uPWE7cmV0dXJuIHdpbmRvdy55REZQLmluaXRBQlBEZXRlY3Rpb259KSgpOwoKICAgICAgICAgICAgICAgIGlmIChtYWluID09PSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgdGhyb3cgJ2ludmFsaWQgaW5saW5lIHNjcmlwdCwgbWlzc2luZyBtYWluIGRlY2xhcmF0aW9uLic7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBtYWluKCIvcHguZ2lmIik7CiAgICAgICAgICAgIH0pKCk7CiAgICA8L3NjcmlwdD4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9InByaW50LW1hc3RoZWFkIj4KICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzLzIvd3d3L2ltZy9iN2U5ZDY0NzE4OGQvZ2Z4L2hlYWRlcl9wcmludC5naWYiIGNsYXNzPSJwcmludC1ia2ctaW1nIiBhbHQ9IlllbHAiPgogICAgPC9kaXY+CgoKICAgICAgICAgICAgICAgIDwvZGl2PgoKCgogICAgICAgICAgICA8c3BhbiBpZD0icGFnZS1jb250ZW50IiBjbGFzcz0ib2Zmc2NyZWVuIj4mbmJzcDs8L3NwYW4+CgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWFpbi1jb250ZW50LXdyYXAgbWFpbi1jb250ZW50LXdyYXAtLWZ1bGwiPgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJzdXBlci1jb250YWluZXIiIGNsYXNzPSJjb250ZW50LWNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgIDxkaXYgaWQ9ImFsZXJ0LWNvbnRhaW5lciI+CgogICAgPC9kaXY+CgoKICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciBiaXotbWVudSI+CiAgICAgICAgICAgIAogICAgPGRpdiBjbGFzcz0ibWVudS1oZWFkZXIiPgogICAgICAgIAogICAgPHVsIGNsYXNzPSJicmVhZGNydW1icyI+CiAgICAgICAgPGxpPgogICAgICAgICAgICA8c3Ryb25nPjxhIGhyZWY9Ii9iaXovbm9vZGxlcy1leHByZXNzLWRlbnZlciI+Tm9vZGxlcyBFeHByZXNzPC9hPjwvc3Ryb25nPgogICAgICAgIDwvbGk+CiAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgIDxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE0LWNoZXZyb24tcmlnaHQgaWNvbi0tc2l6ZS0xNCB1LXNwYWNlLXIxIj4KICAgIDxzdmcgcm9sZT0iaW1nIiBjbGFzcz0iaWNvbl9zdmciPgogICAgICAgIDx1c2UgeGxpbms6aHJlZj0iIzE0eDE0X2NoZXZyb25fcmlnaHQiIC8+CiAgICA8L3N2Zz4KPC9zcGFuPk1lbnUKICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CgogICAgPC9kaXY+CgogICAgPGRpdiBjbGFzcz0iY2xlYXJmaXggbGF5b3V0LWJsb2NrIGxheW91dC1hIj4KICAgIDxkaXYgY2xhc3M9ImNvbHVtbiBjb2x1bW4tYWxwaGEgIj4KICAgICAgICAgICAgICAgIDxoMT4KICAgICAgICAgICAgICAgICAgICBNZW51IGZvciBOb29kbGVzIEV4cHJlc3MKICAgICAgICAgICAgICAgIDwvaDE+CgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtc2VjdGlvbnMiPgogICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbi1oZWFkZXIgc2VjdGlvbi1oZWFkZXItLW5vLXNwYWNpbmciPgogICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0iYWx0ZXJuYXRlIiBpZD0iYXBwZXRpemVyIj4KICAgICAgICAgICAgICAgICAgICBBcHBldGl6ZXIKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0idS1zcGFjZS1iMyI+CiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0iPgogICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UgYXJyYW5nZS0tNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQiPgoKICAgICAgICAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icGhvdG8tYm94IGJpei1waG90by1ib3ggcGItNjBzIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWxpZ2h0Ym94LW1lZGlhLWxpbmsganMtYW5hbHl0aWNzLWNsaWNrIiBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vMi1waWVjZXMtdmVnZXRhYmxlLWVnZy1yb2xscyIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9icGhvdG8vd2M1aFVSZHhJRWcxUmU2NU1WSTRPUS82MHMuanBnIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIG1lbnUtaXRlbS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtLzItcGllY2VzLXZlZ2V0YWJsZS1lZ2ctcm9sbHMiPjIgUGllY2VzIFZlZ2V0YWJsZSBFZ2cgUm9sbHM8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im1lbnUtaXRlbS1kZXRhaWxzLWRlc2NyaXB0aW9uIj5DcmlzcHkgZG91Z2ggZmlsbGVkIHdpdGggbWluY2VkIHZlZ2V0YWJsZXMuPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLWRldGFpbHMtc3RhdHMgdS10ZXh0LXN1YnRsZSI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vMi1waWVjZXMtdmVnZXRhYmxlLWVnZy1yb2xscyIpPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LWNhbWVyYSBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9jYW1lcmEiIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjEgcGhvdG88L2E+CiAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDMuOTUKICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXBsYWNlaG9sZGVyLXBob3RvIj4KICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIGFycmFuZ2UtLTYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0Ij4KCiAgICAgICAgICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InBob3RvLWJveCBiaXotcGhvdG8tYm94IHBiLTYwcyI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1saWdodGJveC1tZWRpYS1saW5rIGpzLWFuYWx5dGljcy1jbGljayIgaHJlZj0iL2Jpel91c2VyX3Bob3Rvcy9Tazg5WmxsQ2JXVnFBNE1fTW9KN0xnL3VwbG9hZCIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvMi93d3cvaW1nL2RjYTU0Zjk3ZmI4NC9kZWZhdWx0X2F2YXRhcnMvbWVudV9tZWRpdW1fc3F1YXJlLnBuZyIgd2lkdGg9IjYwIj4KICAgICAgICAgICAgPC9hPgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCBtZW51LWl0ZW0tZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDQgUGllY2VzIENoZWVzZSBXb250b24KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0ibWVudS1pdGVtLWRldGFpbHMtZGVzY3JpcHRpb24iPkNoaW5lc2UgZHVtcGxpbmcgdGhhdCBjb21lcyB3aXRoIGZpbGxpbmcuPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAKCgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDYuNTAKICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXBsYWNlaG9sZGVyLXBob3RvIj4KICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIGFycmFuZ2UtLTYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0Ij4KCiAgICAgICAgICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InBob3RvLWJveCBiaXotcGhvdG8tYm94IHBiLTYwcyI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1saWdodGJveC1tZWRpYS1saW5rIGpzLWFuYWx5dGljcy1jbGljayIgaHJlZj0iL2Jpel91c2VyX3Bob3Rvcy9Tazg5WmxsQ2JXVnFBNE1fTW9KN0xnL3VwbG9hZCIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvMi93d3cvaW1nL2RjYTU0Zjk3ZmI4NC9kZWZhdWx0X2F2YXRhcnMvbWVudV9tZWRpdW1fc3F1YXJlLnBuZyIgd2lkdGg9IjYwIj4KICAgICAgICAgICAgPC9hPgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCBtZW51LWl0ZW0tZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDggUGllY2VzIFN0ZWFtZWQgUG9yayBEdW1wbGluZ3MKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0ibWVudS1pdGVtLWRldGFpbHMtZGVzY3JpcHRpb24iPkZpbGxlZCBkb3VnaC4gQ29va2VkIHVzaW5nIG1vaXN0IGhlYXQuPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAKCgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDkuOTUKICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0iPgogICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UgYXJyYW5nZS0tNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQiPgoKICAgICAgICAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icGhvdG8tYm94IGJpei1waG90by1ib3ggcGItNjBzIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWxpZ2h0Ym94LW1lZGlhLWxpbmsganMtYW5hbHl0aWNzLWNsaWNrIiBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vNi1waWVjZXMtcG9yay1idW5zIiBkYXRhLWFuYWx5dGljcy1sYWJlbD0iYml6LXBob3RvIj4KICAgICAgICAgICAgICAgIDxpbWcgYWx0PSIiIGNsYXNzPSJwaG90by1ib3gtaW1nIiBoZWlnaHQ9IjYwIiBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2JwaG90by9SUnVwd084OUFkTzMwcVNheW5qYV93LzYwcy5qcGciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwgbWVudS1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vNi1waWVjZXMtcG9yay1idW5zIj42IFBpZWNlcyBQb3JrIEJ1bnM8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLWRldGFpbHMtc3RhdHMgdS10ZXh0LXN1YnRsZSI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vNi1waWVjZXMtcG9yay1idW5zIik+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJ3aWR0aDogMTZweDsgaGVpZ2h0OiAxNnB4OyIgY2xhc3M9Imljb24gaWNvbi0tMTgtY2FtZXJhIGljb24tLXNpemUtMTggaWNvbi0tbmV1dHJhbC1ncmF5IHUtc3BhY2Utci1oYWxmIj4KICAgIDxzdmcgcm9sZT0iaW1nIiBjbGFzcz0iaWNvbl9zdmciPgogICAgICAgIDx1c2UgeGxpbms6aHJlZj0iIzE4eDE4X2NhbWVyYSIgLz4KICAgIDwvc3ZnPgo8L3NwYW4+MSBwaG90bzwvYT4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1wcmljZXMgYXJyYW5nZV91bml0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibWVudS1pdGVtLXByaWNlLWFtb3VudCI+CiAgICAgICAgICAgICAgICAkMTAuOTUKICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0iPgogICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UgYXJyYW5nZS0tNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQiPgoKICAgICAgICAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icGhvdG8tYm94IGJpei1waG90by1ib3ggcGItNjBzIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWxpZ2h0Ym94LW1lZGlhLWxpbmsganMtYW5hbHl0aWNzLWNsaWNrIiBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vc3BpY3ktY3VjdW1iZXIiIGRhdGEtYW5hbHl0aWNzLWxhYmVsPSJiaXotcGhvdG8iPgogICAgICAgICAgICAgICAgPGltZyBhbHQ9IiIgY2xhc3M9InBob3RvLWJveC1pbWciIGhlaWdodD0iNjAiIHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYnBob3RvL25ka0NtZ05fVmZ1U2VxaWRWT3oxdmcvNjBzLmpwZyIgd2lkdGg9IjYwIj4KICAgICAgICAgICAgPC9hPgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCBtZW51LWl0ZW0tZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9zcGljeS1jdWN1bWJlciI+U3BpY3kgQ3VjdW1iZXI8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im1lbnUtaXRlbS1kZXRhaWxzLWRlc2NyaXB0aW9uIj5DdWN1bWJlciBtaXhlZCB3aXRoIGRyZXNzaW5nLjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1kZXRhaWxzLXN0YXRzIHUtdGV4dC1zdWJ0bGUiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL3NwaWN5LWN1Y3VtYmVyI21lbnUtcmV2aWV3cyIgY2xhc3M9Im51bS1yZXZpZXdzIj48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9IndpZHRoOiAxNnB4OyBoZWlnaHQ6IDE2cHg7IiBjbGFzcz0iaWNvbiBpY29uLS0xOC1yZXZpZXcgaWNvbi0tc2l6ZS0xOCBpY29uLS1uZXV0cmFsLWdyYXkgdS1zcGFjZS1yLWhhbGYiPgogICAgPHN2ZyByb2xlPSJpbWciIGNsYXNzPSJpY29uX3N2ZyI+CiAgICAgICAgPHVzZSB4bGluazpocmVmPSIjMTh4MThfcmV2aWV3IiAvPgogICAgPC9zdmc+Cjwvc3Bhbj4yIHJldmlld3M8L2E+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vc3BpY3ktY3VjdW1iZXIiKT48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9IndpZHRoOiAxNnB4OyBoZWlnaHQ6IDE2cHg7IiBjbGFzcz0iaWNvbiBpY29uLS0xOC1jYW1lcmEgaWNvbi0tc2l6ZS0xOCBpY29uLS1uZXV0cmFsLWdyYXkgdS1zcGFjZS1yLWhhbGYiPgogICAgPHN2ZyByb2xlPSJpbWciIGNsYXNzPSJpY29uX3N2ZyI+CiAgICAgICAgPHVzZSB4bGluazpocmVmPSIjMTh4MThfY2FtZXJhIiAvPgogICAgPC9zdmc+Cjwvc3Bhbj43IHBob3RvczwvYT4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1wcmljZXMgYXJyYW5nZV91bml0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibWVudS1pdGVtLXByaWNlLWFtb3VudCI+CiAgICAgICAgICAgICAgICAkOC45NQogICAgICAgICAgICA8L2xpPgogICAgPC91bD4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAKCgoKICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbSI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9zcGljeS1zb3J0ZWQtYmVlZiIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9icGhvdG8vODFSTUJrWWQ1LUFGTHVrc1NYZmg4Zy82MHMuanBnIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIG1lbnUtaXRlbS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL3NwaWN5LXNvcnRlZC1iZWVmIj5TcGljeSBTb3J0ZWQgQmVlZjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0ibWVudS1pdGVtLWRldGFpbHMtZGVzY3JpcHRpb24iPkJlZWYsIGJyaXNrZXQgYW5kIHRyaXBlLjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1kZXRhaWxzLXN0YXRzIHUtdGV4dC1zdWJ0bGUiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL3NwaWN5LXNvcnRlZC1iZWVmI21lbnUtcmV2aWV3cyIgY2xhc3M9Im51bS1yZXZpZXdzIj48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9IndpZHRoOiAxNnB4OyBoZWlnaHQ6IDE2cHg7IiBjbGFzcz0iaWNvbiBpY29uLS0xOC1yZXZpZXcgaWNvbi0tc2l6ZS0xOCBpY29uLS1uZXV0cmFsLWdyYXkgdS1zcGFjZS1yLWhhbGYiPgogICAgPHN2ZyByb2xlPSJpbWciIGNsYXNzPSJpY29uX3N2ZyI+CiAgICAgICAgPHVzZSB4bGluazpocmVmPSIjMTh4MThfcmV2aWV3IiAvPgogICAgPC9zdmc+Cjwvc3Bhbj41IHJldmlld3M8L2E+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vc3BpY3ktc29ydGVkLWJlZWYiKT48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9IndpZHRoOiAxNnB4OyBoZWlnaHQ6IDE2cHg7IiBjbGFzcz0iaWNvbiBpY29uLS0xOC1jYW1lcmEgaWNvbi0tc2l6ZS0xOCBpY29uLS1uZXV0cmFsLWdyYXkgdS1zcGFjZS1yLWhhbGYiPgogICAgPHN2ZyByb2xlPSJpbWciIGNsYXNzPSJpY29uX3N2ZyI+CiAgICAgICAgPHVzZSB4bGluazpocmVmPSIjMTh4MThfY2FtZXJhIiAvPgogICAgPC9zdmc+Cjwvc3Bhbj4xIHBob3RvPC9hPgogICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLXByaWNlcyBhcnJhbmdlX3VuaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgPGxpIGNsYXNzPSJtZW51LWl0ZW0tcHJpY2UtYW1vdW50Ij4KICAgICAgICAgICAgICAgICQxMi45NQogICAgICAgICAgICA8L2xpPgogICAgPC91bD4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAKCgoKICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tcGxhY2Vob2xkZXItcGhvdG8iPgogICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UgYXJyYW5nZS0tNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQiPgoKICAgICAgICAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icGhvdG8tYm94IGJpei1waG90by1ib3ggcGItNjBzIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWxpZ2h0Ym94LW1lZGlhLWxpbmsganMtYW5hbHl0aWNzLWNsaWNrIiBocmVmPSIvYml6X3VzZXJfcGhvdG9zL1NrODlabGxDYldWcUE0TV9Nb0o3TGcvdXBsb2FkIiBkYXRhLWFuYWx5dGljcy1sYWJlbD0iYml6LXBob3RvIj4KICAgICAgICAgICAgICAgIDxpbWcgYWx0PSIiIGNsYXNzPSJwaG90by1ib3gtaW1nIiBoZWlnaHQ9IjYwIiBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2Fzc2V0cy8yL3d3dy9pbWcvZGNhNTRmOTdmYjg0L2RlZmF1bHRfYXZhdGFycy9tZW51X21lZGl1bV9zcXVhcmUucG5nIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIG1lbnUtaXRlbS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU3Rld2VkIEJlZWYgYW5kIEJlZWYgVGVuZG9uCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAKCgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDkuOTUKICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXBsYWNlaG9sZGVyLXBob3RvIj4KICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIGFycmFuZ2UtLTYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0Ij4KCiAgICAgICAgICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InBob3RvLWJveCBiaXotcGhvdG8tYm94IHBiLTYwcyI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1saWdodGJveC1tZWRpYS1saW5rIGpzLWFuYWx5dGljcy1jbGljayIgaHJlZj0iL2Jpel91c2VyX3Bob3Rvcy9Tazg5WmxsQ2JXVnFBNE1fTW9KN0xnL3VwbG9hZCIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvMi93d3cvaW1nL2RjYTU0Zjk3ZmI4NC9kZWZhdWx0X2F2YXRhcnMvbWVudV9tZWRpdW1fc3F1YXJlLnBuZyIgd2lkdGg9IjYwIj4KICAgICAgICAgICAgPC9hPgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCBtZW51LWl0ZW0tZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBvdCBTdGV3ZWQgQmVlZgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgCgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLXByaWNlcyBhcnJhbmdlX3VuaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgPGxpIGNsYXNzPSJtZW51LWl0ZW0tcHJpY2UtYW1vdW50Ij4KICAgICAgICAgICAgICAgICQxMS45NQogICAgICAgICAgICA8L2xpPgogICAgPC91bD4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAKCgoKICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbSI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9jcmlzcHktcG9yay1pbnRlc3RpbmUiIGRhdGEtYW5hbHl0aWNzLWxhYmVsPSJiaXotcGhvdG8iPgogICAgICAgICAgICAgICAgPGltZyBhbHQ9IiIgY2xhc3M9InBob3RvLWJveC1pbWciIGhlaWdodD0iNjAiIHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYnBob3RvLzA2N1FUbGtQZmsxVHlJa21mVEo3bmcvNjBzLmpwZyIgd2lkdGg9IjYwIj4KICAgICAgICAgICAgPC9hPgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCBtZW51LWl0ZW0tZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9jcmlzcHktcG9yay1pbnRlc3RpbmUiPkNyaXNweSBQb3JrIEludGVzdGluZTwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1zdGF0cyB1LXRleHQtc3VidGxlIj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9jcmlzcHktcG9yay1pbnRlc3RpbmUjbWVudS1yZXZpZXdzIiBjbGFzcz0ibnVtLXJldmlld3MiPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LXJldmlldyBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9yZXZpZXciIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjEgcmV2aWV3PC9hPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL2NyaXNweS1wb3JrLWludGVzdGluZSIpPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LWNhbWVyYSBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9jYW1lcmEiIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjIgcGhvdG9zPC9hPgogICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLXByaWNlcyBhcnJhbmdlX3VuaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgPGxpIGNsYXNzPSJtZW51LWl0ZW0tcHJpY2UtYW1vdW50Ij4KICAgICAgICAgICAgICAgICQxMi45NQogICAgICAgICAgICA8L2xpPgogICAgPC91bD4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAKCgoKICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbSI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9icmFpc2VkLXBvcmstZm9vdCIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9icGhvdG8vREt0V1ZtRnNFMFdyN0ZvSVF6QWtQdy82MHMuanBnIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIG1lbnUtaXRlbS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL2JyYWlzZWQtcG9yay1mb290Ij5CcmFpc2VkIFBvcmsgRm9vdDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1zdGF0cyB1LXRleHQtc3VidGxlIj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9icmFpc2VkLXBvcmstZm9vdCIpPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LWNhbWVyYSBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9jYW1lcmEiIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjEgcGhvdG88L2E+CiAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDExLjk1CiAgICAgICAgICAgIDwvbGk+CiAgICA8L3VsPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLWhlYWRlciBzZWN0aW9uLWhlYWRlci0tbm8tc3BhY2luZyI+CiAgICAgICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJhbHRlcm5hdGUiIGlkPSJhdXRoZW50aWMtbm9vZGxlcyI+CiAgICAgICAgICAgICAgICAgICAgQXV0aGVudGljIE5vb2RsZXMKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0idS1zcGFjZS1iMyI+CiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0iPgogICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UgYXJyYW5nZS0tNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQiPgoKICAgICAgICAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icGhvdG8tYm94IGJpei1waG90by1ib3ggcGItNjBzIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWxpZ2h0Ym94LW1lZGlhLWxpbmsganMtYW5hbHl0aWNzLWNsaWNrIiBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vY2xhc3NpYy1iZWVmLW5vb2RsZXMtc291cCIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9icGhvdG8vd2VfYjVvT2J1al84dktzbW92ZGMydy82MHMuanBnIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIG1lbnUtaXRlbS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL2NsYXNzaWMtYmVlZi1ub29kbGVzLXNvdXAiPkNsYXNzaWMgQmVlZiBOb29kbGVzIFNvdXA8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLWRldGFpbHMtc3RhdHMgdS10ZXh0LXN1YnRsZSI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vY2xhc3NpYy1iZWVmLW5vb2RsZXMtc291cCNtZW51LXJldmlld3MiIGNsYXNzPSJudW0tcmV2aWV3cyI+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJ3aWR0aDogMTZweDsgaGVpZ2h0OiAxNnB4OyIgY2xhc3M9Imljb24gaWNvbi0tMTgtcmV2aWV3IGljb24tLXNpemUtMTggaWNvbi0tbmV1dHJhbC1ncmF5IHUtc3BhY2Utci1oYWxmIj4KICAgIDxzdmcgcm9sZT0iaW1nIiBjbGFzcz0iaWNvbl9zdmciPgogICAgICAgIDx1c2UgeGxpbms6aHJlZj0iIzE4eDE4X3JldmlldyIgLz4KICAgIDwvc3ZnPgo8L3NwYW4+MSByZXZpZXc8L2E+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vY2xhc3NpYy1iZWVmLW5vb2RsZXMtc291cCIpPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LWNhbWVyYSBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9jYW1lcmEiIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjQgcGhvdG9zPC9hPgogICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLXByaWNlcyBhcnJhbmdlX3VuaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgPGxpIGNsYXNzPSJtZW51LWl0ZW0tcHJpY2UtYW1vdW50Ij4KICAgICAgICAgICAgICAgICQxMy45NQogICAgICAgICAgICA8L2xpPgogICAgPC91bD4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAKCgoKICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbSI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS90b21hdG8tc3Rld2VkLWJlZWYtbm9vZGxlcy1zb3VwIiBkYXRhLWFuYWx5dGljcy1sYWJlbD0iYml6LXBob3RvIj4KICAgICAgICAgICAgICAgIDxpbWcgYWx0PSIiIGNsYXNzPSJwaG90by1ib3gtaW1nIiBoZWlnaHQ9IjYwIiBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2JwaG90by91bFVsU2hnTHl5NFdfaVFwcHY4dTF3LzYwcy5qcGciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwgbWVudS1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vdG9tYXRvLXN0ZXdlZC1iZWVmLW5vb2RsZXMtc291cCI+VG9tYXRvIFN0ZXdlZCBCZWVmIE5vb2RsZXMgU291cDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1zdGF0cyB1LXRleHQtc3VidGxlIj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS90b21hdG8tc3Rld2VkLWJlZWYtbm9vZGxlcy1zb3VwIik+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJ3aWR0aDogMTZweDsgaGVpZ2h0OiAxNnB4OyIgY2xhc3M9Imljb24gaWNvbi0tMTgtY2FtZXJhIGljb24tLXNpemUtMTggaWNvbi0tbmV1dHJhbC1ncmF5IHUtc3BhY2Utci1oYWxmIj4KICAgIDxzdmcgcm9sZT0iaW1nIiBjbGFzcz0iaWNvbl9zdmciPgogICAgICAgIDx1c2UgeGxpbms6aHJlZj0iIzE4eDE4X2NhbWVyYSIgLz4KICAgIDwvc3ZnPgo8L3NwYW4+MSBwaG90bzwvYT4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1wcmljZXMgYXJyYW5nZV91bml0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibWVudS1pdGVtLXByaWNlLWFtb3VudCI+CiAgICAgICAgICAgICAgICAkMTMuOTUKICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0iPgogICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UgYXJyYW5nZS0tNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQiPgoKICAgICAgICAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icGhvdG8tYm94IGJpei1waG90by1ib3ggcGItNjBzIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWxpZ2h0Ym94LW1lZGlhLWxpbmsganMtYW5hbHl0aWNzLWNsaWNrIiBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vZGFuLWRhbi1ub29kbGVzIiBkYXRhLWFuYWx5dGljcy1sYWJlbD0iYml6LXBob3RvIj4KICAgICAgICAgICAgICAgIDxpbWcgYWx0PSIiIGNsYXNzPSJwaG90by1ib3gtaW1nIiBoZWlnaHQ9IjYwIiBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2JwaG90by83QzQ4LWRocUQ5dTlCZXh5NzJLaV9RLzYwcy5qcGciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwgbWVudS1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vZGFuLWRhbi1ub29kbGVzIj5EYW4gRGFuIE5vb2RsZXM8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im1lbnUtaXRlbS1kZXRhaWxzLWRlc2NyaXB0aW9uIj5TcGljeS48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1zdGF0cyB1LXRleHQtc3VidGxlIj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9kYW4tZGFuLW5vb2RsZXMjbWVudS1yZXZpZXdzIiBjbGFzcz0ibnVtLXJldmlld3MiPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LXJldmlldyBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9yZXZpZXciIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjMyIHJldmlld3M8L2E+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vZGFuLWRhbi1ub29kbGVzIik+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJ3aWR0aDogMTZweDsgaGVpZ2h0OiAxNnB4OyIgY2xhc3M9Imljb24gaWNvbi0tMTgtY2FtZXJhIGljb24tLXNpemUtMTggaWNvbi0tbmV1dHJhbC1ncmF5IHUtc3BhY2Utci1oYWxmIj4KICAgIDxzdmcgcm9sZT0iaW1nIiBjbGFzcz0iaWNvbl9zdmciPgogICAgICAgIDx1c2UgeGxpbms6aHJlZj0iIzE4eDE4X2NhbWVyYSIgLz4KICAgIDwvc3ZnPgo8L3NwYW4+MTQgcGhvdG9zPC9hPgogICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLXByaWNlcyBhcnJhbmdlX3VuaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgPGxpIGNsYXNzPSJtZW51LWl0ZW0tcHJpY2UtYW1vdW50Ij4KICAgICAgICAgICAgICAgICQxMy45NQogICAgICAgICAgICA8L2xpPgogICAgPC91bD4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAKCgoKICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbSI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9ob21lc3R5bGUtcG9yay1ub29kbGVzIiBkYXRhLWFuYWx5dGljcy1sYWJlbD0iYml6LXBob3RvIj4KICAgICAgICAgICAgICAgIDxpbWcgYWx0PSIiIGNsYXNzPSJwaG90by1ib3gtaW1nIiBoZWlnaHQ9IjYwIiBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2JwaG90by9KNUtILUg5NG94TlQ1LWRqQnVoYXVBLzYwcy5qcGciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwgbWVudS1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vaG9tZXN0eWxlLXBvcmstbm9vZGxlcyI+SG9tZXN0eWxlIFBvcmsgTm9vZGxlczwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1zdGF0cyB1LXRleHQtc3VidGxlIj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9ob21lc3R5bGUtcG9yay1ub29kbGVzI21lbnUtcmV2aWV3cyIgY2xhc3M9Im51bS1yZXZpZXdzIj48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9IndpZHRoOiAxNnB4OyBoZWlnaHQ6IDE2cHg7IiBjbGFzcz0iaWNvbiBpY29uLS0xOC1yZXZpZXcgaWNvbi0tc2l6ZS0xOCBpY29uLS1uZXV0cmFsLWdyYXkgdS1zcGFjZS1yLWhhbGYiPgogICAgPHN2ZyByb2xlPSJpbWciIGNsYXNzPSJpY29uX3N2ZyI+CiAgICAgICAgPHVzZSB4bGluazpocmVmPSIjMTh4MThfcmV2aWV3IiAvPgogICAgPC9zdmc+Cjwvc3Bhbj4zIHJldmlld3M8L2E+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vaG9tZXN0eWxlLXBvcmstbm9vZGxlcyIpPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LWNhbWVyYSBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9jYW1lcmEiIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjMgcGhvdG9zPC9hPgogICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLXByaWNlcyBhcnJhbmdlX3VuaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgPGxpIGNsYXNzPSJtZW51LWl0ZW0tcHJpY2UtYW1vdW50Ij4KICAgICAgICAgICAgICAgICQxMy45NQogICAgICAgICAgICA8L2xpPgogICAgPC91bD4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAKCgoKICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbSI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9sYW56aG91LWJlZWYtbm9vZGxlcy1zb3VwIiBkYXRhLWFuYWx5dGljcy1sYWJlbD0iYml6LXBob3RvIj4KICAgICAgICAgICAgICAgIDxpbWcgYWx0PSIiIGNsYXNzPSJwaG90by1ib3gtaW1nIiBoZWlnaHQ9IjYwIiBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2JwaG90by9Kd3NWbnNVeEpoQmdZYlhpdTFNbmtnLzYwcy5qcGciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwgbWVudS1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vbGFuemhvdS1iZWVmLW5vb2RsZXMtc291cCI+TGFuemhvdSBCZWVmIE5vb2RsZXMgU291cDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1zdGF0cyB1LXRleHQtc3VidGxlIj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9sYW56aG91LWJlZWYtbm9vZGxlcy1zb3VwIik+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJ3aWR0aDogMTZweDsgaGVpZ2h0OiAxNnB4OyIgY2xhc3M9Imljb24gaWNvbi0tMTgtY2FtZXJhIGljb24tLXNpemUtMTggaWNvbi0tbmV1dHJhbC1ncmF5IHUtc3BhY2Utci1oYWxmIj4KICAgIDxzdmcgcm9sZT0iaW1nIiBjbGFzcz0iaWNvbl9zdmciPgogICAgICAgIDx1c2UgeGxpbms6aHJlZj0iIzE4eDE4X2NhbWVyYSIgLz4KICAgIDwvc3ZnPgo8L3NwYW4+MSBwaG90bzwvYT4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1wcmljZXMgYXJyYW5nZV91bml0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibWVudS1pdGVtLXByaWNlLWFtb3VudCI+CiAgICAgICAgICAgICAgICAkMTEuOTUKICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXBsYWNlaG9sZGVyLXBob3RvIj4KICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIGFycmFuZ2UtLTYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0Ij4KCiAgICAgICAgICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InBob3RvLWJveCBiaXotcGhvdG8tYm94IHBiLTYwcyI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1saWdodGJveC1tZWRpYS1saW5rIGpzLWFuYWx5dGljcy1jbGljayIgaHJlZj0iL2Jpel91c2VyX3Bob3Rvcy9Tazg5WmxsQ2JXVnFBNE1fTW9KN0xnL3VwbG9hZCIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvMi93d3cvaW1nL2RjYTU0Zjk3ZmI4NC9kZWZhdWx0X2F2YXRhcnMvbWVudV9tZWRpdW1fc3F1YXJlLnBuZyIgd2lkdGg9IjYwIj4KICAgICAgICAgICAgPC9hPgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCBtZW51LWl0ZW0tZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEJyYWlzZWQgUG9yayBGb290IE5vb2RsZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgIAoKCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1wcmljZXMgYXJyYW5nZV91bml0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibWVudS1pdGVtLXByaWNlLWFtb3VudCI+CiAgICAgICAgICAgICAgICAkMTMuOTUKICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXBsYWNlaG9sZGVyLXBob3RvIj4KICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIGFycmFuZ2UtLTYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0Ij4KCiAgICAgICAgICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InBob3RvLWJveCBiaXotcGhvdG8tYm94IHBiLTYwcyI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1saWdodGJveC1tZWRpYS1saW5rIGpzLWFuYWx5dGljcy1jbGljayIgaHJlZj0iL2Jpel91c2VyX3Bob3Rvcy9Tazg5WmxsQ2JXVnFBNE1fTW9KN0xnL3VwbG9hZCIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvMi93d3cvaW1nL2RjYTU0Zjk3ZmI4NC9kZWZhdWx0X2F2YXRhcnMvbWVudV9tZWRpdW1fc3F1YXJlLnBuZyIgd2lkdGg9IjYwIj4KICAgICAgICAgICAgPC9hPgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCBtZW51LWl0ZW0tZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEJyYWlzZWQgUG9yayBJbnRlc3RpbmUgTm9vZGxlcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgCgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLXByaWNlcyBhcnJhbmdlX3VuaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgPGxpIGNsYXNzPSJtZW51LWl0ZW0tcHJpY2UtYW1vdW50Ij4KICAgICAgICAgICAgICAgICQxMy45NQogICAgICAgICAgICA8L2xpPgogICAgPC91bD4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbi1oZWFkZXIgc2VjdGlvbi1oZWFkZXItLW5vLXNwYWNpbmciPgogICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0iYWx0ZXJuYXRlIiBpZD0iYXV0aGVudGljLXN6ZWNodWFuIj4KICAgICAgICAgICAgICAgICAgICBBdXRoZW50aWMgU3plY2h1YW4KICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0idS1zcGFjZS1iMyI+CiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0iPgogICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UgYXJyYW5nZS0tNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQiPgoKICAgICAgICAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icGhvdG8tYm94IGJpei1waG90by1ib3ggcGItNjBzIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWxpZ2h0Ym94LW1lZGlhLWxpbmsganMtYW5hbHl0aWNzLWNsaWNrIiBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vc3BpY3ktYm9pbGVkLWZpc2giIGRhdGEtYW5hbHl0aWNzLWxhYmVsPSJiaXotcGhvdG8iPgogICAgICAgICAgICAgICAgPGltZyBhbHQ9IiIgY2xhc3M9InBob3RvLWJveC1pbWciIGhlaWdodD0iNjAiIHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYnBob3RvL1JMYnNwUWwzQkh6R3owZXVpZmE5M0EvNjBzLmpwZyIgd2lkdGg9IjYwIj4KICAgICAgICAgICAgPC9hPgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCBtZW51LWl0ZW0tZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9zcGljeS1ib2lsZWQtZmlzaCI+U3BpY3kgQm9pbGVkIEZpc2g8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLWRldGFpbHMtc3RhdHMgdS10ZXh0LXN1YnRsZSI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vc3BpY3ktYm9pbGVkLWZpc2gjbWVudS1yZXZpZXdzIiBjbGFzcz0ibnVtLXJldmlld3MiPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LXJldmlldyBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9yZXZpZXciIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjEzIHJldmlld3M8L2E+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vc3BpY3ktYm9pbGVkLWZpc2giKT48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9IndpZHRoOiAxNnB4OyBoZWlnaHQ6IDE2cHg7IiBjbGFzcz0iaWNvbiBpY29uLS0xOC1jYW1lcmEgaWNvbi0tc2l6ZS0xOCBpY29uLS1uZXV0cmFsLWdyYXkgdS1zcGFjZS1yLWhhbGYiPgogICAgPHN2ZyByb2xlPSJpbWciIGNsYXNzPSJpY29uX3N2ZyI+CiAgICAgICAgPHVzZSB4bGluazpocmVmPSIjMTh4MThfY2FtZXJhIiAvPgogICAgPC9zdmc+Cjwvc3Bhbj41IHBob3RvczwvYT4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1wcmljZXMgYXJyYW5nZV91bml0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibWVudS1pdGVtLXByaWNlLWFtb3VudCI+CiAgICAgICAgICAgICAgICAkMTcuOTUKICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0iPgogICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UgYXJyYW5nZS0tNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQiPgoKICAgICAgICAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icGhvdG8tYm94IGJpei1waG90by1ib3ggcGItNjBzIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWxpZ2h0Ym94LW1lZGlhLWxpbmsganMtYW5hbHl0aWNzLWNsaWNrIiBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vc3BpY3ktYm9pbGVkLWJlZWYiIGRhdGEtYW5hbHl0aWNzLWxhYmVsPSJiaXotcGhvdG8iPgogICAgICAgICAgICAgICAgPGltZyBhbHQ9IiIgY2xhc3M9InBob3RvLWJveC1pbWciIGhlaWdodD0iNjAiIHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYnBob3RvL2xjY1phTWtsQVZ0N2x0bXlET1ZTdkEvNjBzLmpwZyIgd2lkdGg9IjYwIj4KICAgICAgICAgICAgPC9hPgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCBtZW51LWl0ZW0tZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9zcGljeS1ib2lsZWQtYmVlZiI+U3BpY3kgQm9pbGVkIEJlZWY8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLWRldGFpbHMtc3RhdHMgdS10ZXh0LXN1YnRsZSI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vc3BpY3ktYm9pbGVkLWJlZWYjbWVudS1yZXZpZXdzIiBjbGFzcz0ibnVtLXJldmlld3MiPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LXJldmlldyBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9yZXZpZXciIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjIgcmV2aWV3czwvYT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9zcGljeS1ib2lsZWQtYmVlZiIpPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LWNhbWVyYSBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9jYW1lcmEiIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjIgcGhvdG9zPC9hPgogICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLXByaWNlcyBhcnJhbmdlX3VuaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgPGxpIGNsYXNzPSJtZW51LWl0ZW0tcHJpY2UtYW1vdW50Ij4KICAgICAgICAgICAgICAgICQxNy45NQogICAgICAgICAgICA8L2xpPgogICAgPC91bD4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAKCgoKICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbSI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9zcGljeS1ib2lsZWQtZmlzaC1hbmQtYmVlZiIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9icGhvdG8vQ1ZGR1UzdXhNS1hNWmFleUZlS0NKZy82MHMuanBnIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIG1lbnUtaXRlbS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL3NwaWN5LWJvaWxlZC1maXNoLWFuZC1iZWVmIj5TcGljeSBCb2lsZWQgRmlzaCBhbmQgQmVlZjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1zdGF0cyB1LXRleHQtc3VidGxlIj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9zcGljeS1ib2lsZWQtZmlzaC1hbmQtYmVlZiNtZW51LXJldmlld3MiIGNsYXNzPSJudW0tcmV2aWV3cyI+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJ3aWR0aDogMTZweDsgaGVpZ2h0OiAxNnB4OyIgY2xhc3M9Imljb24gaWNvbi0tMTgtcmV2aWV3IGljb24tLXNpemUtMTggaWNvbi0tbmV1dHJhbC1ncmF5IHUtc3BhY2Utci1oYWxmIj4KICAgIDxzdmcgcm9sZT0iaW1nIiBjbGFzcz0iaWNvbl9zdmciPgogICAgICAgIDx1c2UgeGxpbms6aHJlZj0iIzE4eDE4X3JldmlldyIgLz4KICAgIDwvc3ZnPgo8L3NwYW4+NSByZXZpZXdzPC9hPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL3NwaWN5LWJvaWxlZC1maXNoLWFuZC1iZWVmIik+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJ3aWR0aDogMTZweDsgaGVpZ2h0OiAxNnB4OyIgY2xhc3M9Imljb24gaWNvbi0tMTgtY2FtZXJhIGljb24tLXNpemUtMTggaWNvbi0tbmV1dHJhbC1ncmF5IHUtc3BhY2Utci1oYWxmIj4KICAgIDxzdmcgcm9sZT0iaW1nIiBjbGFzcz0iaWNvbl9zdmciPgogICAgICAgIDx1c2UgeGxpbms6aHJlZj0iIzE4eDE4X2NhbWVyYSIgLz4KICAgIDwvc3ZnPgo8L3NwYW4+NSBwaG90b3M8L2E+CiAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDE4Ljk1CiAgICAgICAgICAgIDwvbGk+CiAgICA8L3VsPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIAoKCgogICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtIj4KICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIGFycmFuZ2UtLTYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0Ij4KCiAgICAgICAgICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InBob3RvLWJveCBiaXotcGhvdG8tYm94IHBiLTYwcyI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1saWdodGJveC1tZWRpYS1saW5rIGpzLWFuYWx5dGljcy1jbGljayIgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL21hcG8tdG9mdSIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9icGhvdG8vYTdaTW5ISHo2Q05EUU11eDJxc1J1dy82MHMuanBnIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIG1lbnUtaXRlbS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL21hcG8tdG9mdSI+TWFwbyBUb2Z1PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1kZXNjcmlwdGlvbiI+U3BpY3kuPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLWRldGFpbHMtc3RhdHMgdS10ZXh0LXN1YnRsZSI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vbWFwby10b2Z1I21lbnUtcmV2aWV3cyIgY2xhc3M9Im51bS1yZXZpZXdzIj48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9IndpZHRoOiAxNnB4OyBoZWlnaHQ6IDE2cHg7IiBjbGFzcz0iaWNvbiBpY29uLS0xOC1yZXZpZXcgaWNvbi0tc2l6ZS0xOCBpY29uLS1uZXV0cmFsLWdyYXkgdS1zcGFjZS1yLWhhbGYiPgogICAgPHN2ZyByb2xlPSJpbWciIGNsYXNzPSJpY29uX3N2ZyI+CiAgICAgICAgPHVzZSB4bGluazpocmVmPSIjMTh4MThfcmV2aWV3IiAvPgogICAgPC9zdmc+Cjwvc3Bhbj44IHJldmlld3M8L2E+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vbWFwby10b2Z1Iik+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJ3aWR0aDogMTZweDsgaGVpZ2h0OiAxNnB4OyIgY2xhc3M9Imljb24gaWNvbi0tMTgtY2FtZXJhIGljb24tLXNpemUtMTggaWNvbi0tbmV1dHJhbC1ncmF5IHUtc3BhY2Utci1oYWxmIj4KICAgIDxzdmcgcm9sZT0iaW1nIiBjbGFzcz0iaWNvbl9zdmciPgogICAgICAgIDx1c2UgeGxpbms6aHJlZj0iIzE4eDE4X2NhbWVyYSIgLz4KICAgIDwvc3ZnPgo8L3NwYW4+NiBwaG90b3M8L2E+CiAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDE0Ljk1CiAgICAgICAgICAgIDwvbGk+CiAgICA8L3VsPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIAoKCgogICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtIj4KICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIGFycmFuZ2UtLTYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0Ij4KCiAgICAgICAgICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InBob3RvLWJveCBiaXotcGhvdG8tYm94IHBiLTYwcyI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1saWdodGJveC1tZWRpYS1saW5rIGpzLWFuYWx5dGljcy1jbGljayIgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL3R3aWNlLWNvb2tlZC1wb3JrIiBkYXRhLWFuYWx5dGljcy1sYWJlbD0iYml6LXBob3RvIj4KICAgICAgICAgICAgICAgIDxpbWcgYWx0PSIiIGNsYXNzPSJwaG90by1ib3gtaW1nIiBoZWlnaHQ9IjYwIiBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2JwaG90by8tMlpzRVM2WkhuUDlFQjhhX1JBYVdBLzYwcy5qcGciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwgbWVudS1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vdHdpY2UtY29va2VkLXBvcmsiPlR3aWNlIENvb2tlZCBQb3JrPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1kZXNjcmlwdGlvbiI+U3BpY3kuPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLWRldGFpbHMtc3RhdHMgdS10ZXh0LXN1YnRsZSI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vdHdpY2UtY29va2VkLXBvcmsjbWVudS1yZXZpZXdzIiBjbGFzcz0ibnVtLXJldmlld3MiPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LXJldmlldyBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9yZXZpZXciIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjkgcmV2aWV3czwvYT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS90d2ljZS1jb29rZWQtcG9yayIpPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LWNhbWVyYSBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9jYW1lcmEiIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjIgcGhvdG9zPC9hPgogICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLXByaWNlcyBhcnJhbmdlX3VuaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgPGxpIGNsYXNzPSJtZW51LWl0ZW0tcHJpY2UtYW1vdW50Ij4KICAgICAgICAgICAgICAgICQxNy45NQogICAgICAgICAgICA8L2xpPgogICAgPC91bD4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAKCgoKICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbSI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS90d2ljZS1jb29rZWQtZmlzaCIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9icGhvdG8veEtqcFo1ZDBpUkc3NHAxamVJVU82QS82MHMuanBnIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIG1lbnUtaXRlbS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL3R3aWNlLWNvb2tlZC1maXNoIj5Ud2ljZSBDb29rZWQgRmlzaDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0ibWVudS1pdGVtLWRldGFpbHMtZGVzY3JpcHRpb24iPlNwaWN5LjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1kZXRhaWxzLXN0YXRzIHUtdGV4dC1zdWJ0bGUiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL3R3aWNlLWNvb2tlZC1maXNoI21lbnUtcmV2aWV3cyIgY2xhc3M9Im51bS1yZXZpZXdzIj48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9IndpZHRoOiAxNnB4OyBoZWlnaHQ6IDE2cHg7IiBjbGFzcz0iaWNvbiBpY29uLS0xOC1yZXZpZXcgaWNvbi0tc2l6ZS0xOCBpY29uLS1uZXV0cmFsLWdyYXkgdS1zcGFjZS1yLWhhbGYiPgogICAgPHN2ZyByb2xlPSJpbWciIGNsYXNzPSJpY29uX3N2ZyI+CiAgICAgICAgPHVzZSB4bGluazpocmVmPSIjMTh4MThfcmV2aWV3IiAvPgogICAgPC9zdmc+Cjwvc3Bhbj42IHJldmlld3M8L2E+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vdHdpY2UtY29va2VkLWZpc2giKT48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9IndpZHRoOiAxNnB4OyBoZWlnaHQ6IDE2cHg7IiBjbGFzcz0iaWNvbiBpY29uLS0xOC1jYW1lcmEgaWNvbi0tc2l6ZS0xOCBpY29uLS1uZXV0cmFsLWdyYXkgdS1zcGFjZS1yLWhhbGYiPgogICAgPHN2ZyByb2xlPSJpbWciIGNsYXNzPSJpY29uX3N2ZyI+CiAgICAgICAgPHVzZSB4bGluazpocmVmPSIjMTh4MThfY2FtZXJhIiAvPgogICAgPC9zdmc+Cjwvc3Bhbj4zIHBob3RvczwvYT4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1wcmljZXMgYXJyYW5nZV91bml0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibWVudS1pdGVtLXByaWNlLWFtb3VudCI+CiAgICAgICAgICAgICAgICAkMTcuOTUKICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0iPgogICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UgYXJyYW5nZS0tNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQiPgoKICAgICAgICAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icGhvdG8tYm94IGJpei1waG90by1ib3ggcGItNjBzIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWxpZ2h0Ym94LW1lZGlhLWxpbmsganMtYW5hbHl0aWNzLWNsaWNrIiBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vcHJlc2VydmVkLXBlcHBlci1maXNoIiBkYXRhLWFuYWx5dGljcy1sYWJlbD0iYml6LXBob3RvIj4KICAgICAgICAgICAgICAgIDxpbWcgYWx0PSIiIGNsYXNzPSJwaG90by1ib3gtaW1nIiBoZWlnaHQ9IjYwIiBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2JwaG90by9MYVBPWUd6WWI0ZlBHYXJ5Y25xdDVnLzYwcy5qcGciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwgbWVudS1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vcHJlc2VydmVkLXBlcHBlci1maXNoIj5QcmVzZXJ2ZWQgUGVwcGVyIEZpc2g8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im1lbnUtaXRlbS1kZXRhaWxzLWRlc2NyaXB0aW9uIj5TcGljeS48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1zdGF0cyB1LXRleHQtc3VidGxlIj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9wcmVzZXJ2ZWQtcGVwcGVyLWZpc2gjbWVudS1yZXZpZXdzIiBjbGFzcz0ibnVtLXJldmlld3MiPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LXJldmlldyBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9yZXZpZXciIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjQgcmV2aWV3czwvYT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9wcmVzZXJ2ZWQtcGVwcGVyLWZpc2giKT48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9IndpZHRoOiAxNnB4OyBoZWlnaHQ6IDE2cHg7IiBjbGFzcz0iaWNvbiBpY29uLS0xOC1jYW1lcmEgaWNvbi0tc2l6ZS0xOCBpY29uLS1uZXV0cmFsLWdyYXkgdS1zcGFjZS1yLWhhbGYiPgogICAgPHN2ZyByb2xlPSJpbWciIGNsYXNzPSJpY29uX3N2ZyI+CiAgICAgICAgPHVzZSB4bGluazpocmVmPSIjMTh4MThfY2FtZXJhIiAvPgogICAgPC9zdmc+Cjwvc3Bhbj4zIHBob3RvczwvYT4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1wcmljZXMgYXJyYW5nZV91bml0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibWVudS1pdGVtLXByaWNlLWFtb3VudCI+CiAgICAgICAgICAgICAgICAkMTcuOTUKICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0iPgogICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UgYXJyYW5nZS0tNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQiPgoKICAgICAgICAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icGhvdG8tYm94IGJpei1waG90by1ib3ggcGItNjBzIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWxpZ2h0Ym94LW1lZGlhLWxpbmsganMtYW5hbHl0aWNzLWNsaWNrIiBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vdGFpd2FuLXN0eWxlLXBvcmstdG9mdSIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9icGhvdG8vaEw0Ri0tMmNfVktaZTFqc0lNR2tGZy82MHMuanBnIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIG1lbnUtaXRlbS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL3RhaXdhbi1zdHlsZS1wb3JrLXRvZnUiPlRhaXdhbiBTdHlsZSBQb3JrIFRvZnU8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im1lbnUtaXRlbS1kZXRhaWxzLWRlc2NyaXB0aW9uIj5TcGljeS48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1zdGF0cyB1LXRleHQtc3VidGxlIj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS90YWl3YW4tc3R5bGUtcG9yay10b2Z1I21lbnUtcmV2aWV3cyIgY2xhc3M9Im51bS1yZXZpZXdzIj48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9IndpZHRoOiAxNnB4OyBoZWlnaHQ6IDE2cHg7IiBjbGFzcz0iaWNvbiBpY29uLS0xOC1yZXZpZXcgaWNvbi0tc2l6ZS0xOCBpY29uLS1uZXV0cmFsLWdyYXkgdS1zcGFjZS1yLWhhbGYiPgogICAgPHN2ZyByb2xlPSJpbWciIGNsYXNzPSJpY29uX3N2ZyI+CiAgICAgICAgPHVzZSB4bGluazpocmVmPSIjMTh4MThfcmV2aWV3IiAvPgogICAgPC9zdmc+Cjwvc3Bhbj4yIHJldmlld3M8L2E+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vdGFpd2FuLXN0eWxlLXBvcmstdG9mdSIpPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LWNhbWVyYSBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9jYW1lcmEiIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjIgcGhvdG9zPC9hPgogICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLXByaWNlcyBhcnJhbmdlX3VuaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgPGxpIGNsYXNzPSJtZW51LWl0ZW0tcHJpY2UtYW1vdW50Ij4KICAgICAgICAgICAgICAgICQxNi45NQogICAgICAgICAgICA8L2xpPgogICAgPC91bD4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAKCgoKICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tcGxhY2Vob2xkZXItcGhvdG8iPgogICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UgYXJyYW5nZS0tNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQiPgoKICAgICAgICAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icGhvdG8tYm94IGJpei1waG90by1ib3ggcGItNjBzIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWxpZ2h0Ym94LW1lZGlhLWxpbmsganMtYW5hbHl0aWNzLWNsaWNrIiBocmVmPSIvYml6X3VzZXJfcGhvdG9zL1NrODlabGxDYldWcUE0TV9Nb0o3TGcvdXBsb2FkIiBkYXRhLWFuYWx5dGljcy1sYWJlbD0iYml6LXBob3RvIj4KICAgICAgICAgICAgICAgIDxpbWcgYWx0PSIiIGNsYXNzPSJwaG90by1ib3gtaW1nIiBoZWlnaHQ9IjYwIiBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2Fzc2V0cy8yL3d3dy9pbWcvZGNhNTRmOTdmYjg0L2RlZmF1bHRfYXZhdGFycy9tZW51X21lZGl1bV9zcXVhcmUucG5nIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIG1lbnUtaXRlbS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL3NhbHR5LWZpc2gtZnJpZWQtcmljZSI+U2FsdHkgRmlzaCBGcmllZCBSaWNlPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1kZXNjcmlwdGlvbiI+U3BpY3kuPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLWRldGFpbHMtc3RhdHMgdS10ZXh0LXN1YnRsZSI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vc2FsdHktZmlzaC1mcmllZC1yaWNlI21lbnUtcmV2aWV3cyIgY2xhc3M9Im51bS1yZXZpZXdzIj48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9IndpZHRoOiAxNnB4OyBoZWlnaHQ6IDE2cHg7IiBjbGFzcz0iaWNvbiBpY29uLS0xOC1yZXZpZXcgaWNvbi0tc2l6ZS0xOCBpY29uLS1uZXV0cmFsLWdyYXkgdS1zcGFjZS1yLWhhbGYiPgogICAgPHN2ZyByb2xlPSJpbWciIGNsYXNzPSJpY29uX3N2ZyI+CiAgICAgICAgPHVzZSB4bGluazpocmVmPSIjMTh4MThfcmV2aWV3IiAvPgogICAgPC9zdmc+Cjwvc3Bhbj4yIHJldmlld3M8L2E+CiAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDE1Ljk1CiAgICAgICAgICAgIDwvbGk+CiAgICA8L3VsPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIAoKCgogICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS1wbGFjZWhvbGRlci1waG90byI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9iaXpfdXNlcl9waG90b3MvU2s4OVpsbENiV1ZxQTRNX01vSjdMZy91cGxvYWQiIGRhdGEtYW5hbHl0aWNzLWxhYmVsPSJiaXotcGhvdG8iPgogICAgICAgICAgICAgICAgPGltZyBhbHQ9IiIgY2xhc3M9InBob3RvLWJveC1pbWciIGhlaWdodD0iNjAiIHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzLzIvd3d3L2ltZy9kY2E1NGY5N2ZiODQvZGVmYXVsdF9hdmF0YXJzL21lbnVfbWVkaXVtX3NxdWFyZS5wbmciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwgbWVudS1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vc2hyZWRkZWQtY2hpY2tlbi13aXRoLWdhcmxpYy1zYXVjZSI+U2hyZWRkZWQgQ2hpY2tlbiB3aXRoIEdhcmxpYyBTYXVjZTwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0ibWVudS1pdGVtLWRldGFpbHMtZGVzY3JpcHRpb24iPlNwaWN5LjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1kZXRhaWxzLXN0YXRzIHUtdGV4dC1zdWJ0bGUiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL3NocmVkZGVkLWNoaWNrZW4td2l0aC1nYXJsaWMtc2F1Y2UjbWVudS1yZXZpZXdzIiBjbGFzcz0ibnVtLXJldmlld3MiPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LXJldmlldyBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9yZXZpZXciIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjEgcmV2aWV3PC9hPgogICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLXByaWNlcyBhcnJhbmdlX3VuaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgPGxpIGNsYXNzPSJtZW51LWl0ZW0tcHJpY2UtYW1vdW50Ij4KICAgICAgICAgICAgICAgICQxNi45NQogICAgICAgICAgICA8L2xpPgogICAgPC91bD4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAKCgoKICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tcGxhY2Vob2xkZXItcGhvdG8iPgogICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UgYXJyYW5nZS0tNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQiPgoKICAgICAgICAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icGhvdG8tYm94IGJpei1waG90by1ib3ggcGItNjBzIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWxpZ2h0Ym94LW1lZGlhLWxpbmsganMtYW5hbHl0aWNzLWNsaWNrIiBocmVmPSIvYml6X3VzZXJfcGhvdG9zL1NrODlabGxDYldWcUE0TV9Nb0o3TGcvdXBsb2FkIiBkYXRhLWFuYWx5dGljcy1sYWJlbD0iYml6LXBob3RvIj4KICAgICAgICAgICAgICAgIDxpbWcgYWx0PSIiIGNsYXNzPSJwaG90by1ib3gtaW1nIiBoZWlnaHQ9IjYwIiBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2Fzc2V0cy8yL3d3dy9pbWcvZGNhNTRmOTdmYjg0L2RlZmF1bHRfYXZhdGFycy9tZW51X21lZGl1bV9zcXVhcmUucG5nIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIG1lbnUtaXRlbS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2hyZWRkZWQgUG9yayB3aXRoIEdhcmxpYyBTYXVjZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1kZXNjcmlwdGlvbiI+U3BpY3kuPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAKCgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDE2Ljk1CiAgICAgICAgICAgIDwvbGk+CiAgICA8L3VsPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIAoKCgogICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtIj4KICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIGFycmFuZ2UtLTYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0Ij4KCiAgICAgICAgICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InBob3RvLWJveCBiaXotcGhvdG8tYm94IHBiLTYwcyI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1saWdodGJveC1tZWRpYS1saW5rIGpzLWFuYWx5dGljcy1jbGljayIgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL3NlcnJhbm8tcGVwcGVyLWNoaWNrZW4iIGRhdGEtYW5hbHl0aWNzLWxhYmVsPSJiaXotcGhvdG8iPgogICAgICAgICAgICAgICAgPGltZyBhbHQ9IiIgY2xhc3M9InBob3RvLWJveC1pbWciIGhlaWdodD0iNjAiIHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYnBob3RvL2VXdVJFRmhfX2J2YVYzSDFsNTZVYWcvNjBzLmpwZyIgd2lkdGg9IjYwIj4KICAgICAgICAgICAgPC9hPgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCBtZW51LWl0ZW0tZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9zZXJyYW5vLXBlcHBlci1jaGlja2VuIj5TZXJyYW5vIFBlcHBlciBDaGlja2VuPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1kZXNjcmlwdGlvbiI+U3BpY3kuPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLWRldGFpbHMtc3RhdHMgdS10ZXh0LXN1YnRsZSI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vc2VycmFuby1wZXBwZXItY2hpY2tlbiNtZW51LXJldmlld3MiIGNsYXNzPSJudW0tcmV2aWV3cyI+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJ3aWR0aDogMTZweDsgaGVpZ2h0OiAxNnB4OyIgY2xhc3M9Imljb24gaWNvbi0tMTgtcmV2aWV3IGljb24tLXNpemUtMTggaWNvbi0tbmV1dHJhbC1ncmF5IHUtc3BhY2Utci1oYWxmIj4KICAgIDxzdmcgcm9sZT0iaW1nIiBjbGFzcz0iaWNvbl9zdmciPgogICAgICAgIDx1c2UgeGxpbms6aHJlZj0iIzE4eDE4X3JldmlldyIgLz4KICAgIDwvc3ZnPgo8L3NwYW4+MyByZXZpZXdzPC9hPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL3NlcnJhbm8tcGVwcGVyLWNoaWNrZW4iKT48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9IndpZHRoOiAxNnB4OyBoZWlnaHQ6IDE2cHg7IiBjbGFzcz0iaWNvbiBpY29uLS0xOC1jYW1lcmEgaWNvbi0tc2l6ZS0xOCBpY29uLS1uZXV0cmFsLWdyYXkgdS1zcGFjZS1yLWhhbGYiPgogICAgPHN2ZyByb2xlPSJpbWciIGNsYXNzPSJpY29uX3N2ZyI+CiAgICAgICAgPHVzZSB4bGluazpocmVmPSIjMTh4MThfY2FtZXJhIiAvPgogICAgPC9zdmc+Cjwvc3Bhbj40IHBob3RvczwvYT4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1wcmljZXMgYXJyYW5nZV91bml0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibWVudS1pdGVtLXByaWNlLWFtb3VudCI+CiAgICAgICAgICAgICAgICAkMTYuOTUKICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0iPgogICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UgYXJyYW5nZS0tNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQiPgoKICAgICAgICAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icGhvdG8tYm94IGJpei1waG90by1ib3ggcGItNjBzIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWxpZ2h0Ym94LW1lZGlhLWxpbmsganMtYW5hbHl0aWNzLWNsaWNrIiBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vY2hvbmctcWluZy1wZXBwZXItY2hpY2tlbiIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9icGhvdG8vQjQ2ZnZlT0x5VS1IVmpHQlBMSTd6QS82MHMuanBnIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIG1lbnUtaXRlbS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL2Nob25nLXFpbmctcGVwcGVyLWNoaWNrZW4iPkNob25nIFFpbmcgUGVwcGVyIENoaWNrZW48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im1lbnUtaXRlbS1kZXRhaWxzLWRlc2NyaXB0aW9uIj5TcGljeS48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1zdGF0cyB1LXRleHQtc3VidGxlIj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9jaG9uZy1xaW5nLXBlcHBlci1jaGlja2VuI21lbnUtcmV2aWV3cyIgY2xhc3M9Im51bS1yZXZpZXdzIj48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9IndpZHRoOiAxNnB4OyBoZWlnaHQ6IDE2cHg7IiBjbGFzcz0iaWNvbiBpY29uLS0xOC1yZXZpZXcgaWNvbi0tc2l6ZS0xOCBpY29uLS1uZXV0cmFsLWdyYXkgdS1zcGFjZS1yLWhhbGYiPgogICAgPHN2ZyByb2xlPSJpbWciIGNsYXNzPSJpY29uX3N2ZyI+CiAgICAgICAgPHVzZSB4bGluazpocmVmPSIjMTh4MThfcmV2aWV3IiAvPgogICAgPC9zdmc+Cjwvc3Bhbj4xIHJldmlldzwvYT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9jaG9uZy1xaW5nLXBlcHBlci1jaGlja2VuIik+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJ3aWR0aDogMTZweDsgaGVpZ2h0OiAxNnB4OyIgY2xhc3M9Imljb24gaWNvbi0tMTgtY2FtZXJhIGljb24tLXNpemUtMTggaWNvbi0tbmV1dHJhbC1ncmF5IHUtc3BhY2Utci1oYWxmIj4KICAgIDxzdmcgcm9sZT0iaW1nIiBjbGFzcz0iaWNvbl9zdmciPgogICAgICAgIDx1c2UgeGxpbms6aHJlZj0iIzE4eDE4X2NhbWVyYSIgLz4KICAgIDwvc3ZnPgo8L3NwYW4+NCBwaG90b3M8L2E+CiAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDE2Ljk1CiAgICAgICAgICAgIDwvbGk+CiAgICA8L3VsPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIAoKCgogICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtIj4KICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIGFycmFuZ2UtLTYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0Ij4KCiAgICAgICAgICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InBob3RvLWJveCBiaXotcGhvdG8tYm94IHBiLTYwcyI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1saWdodGJveC1tZWRpYS1saW5rIGpzLWFuYWx5dGljcy1jbGljayIgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL2VnZ3BsYW50LXdpdGgtZ2FybGljLXNhdWNlIiBkYXRhLWFuYWx5dGljcy1sYWJlbD0iYml6LXBob3RvIj4KICAgICAgICAgICAgICAgIDxpbWcgYWx0PSIiIGNsYXNzPSJwaG90by1ib3gtaW1nIiBoZWlnaHQ9IjYwIiBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2JwaG90by84TDVlakUxVjNhMnV2YVpHWk40UDZBLzYwcy5qcGciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwgbWVudS1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vZWdncGxhbnQtd2l0aC1nYXJsaWMtc2F1Y2UiPkVnZ3BsYW50IHdpdGggR2FybGljIFNhdWNlPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1kZXNjcmlwdGlvbiI+U3BpY3kuPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLWRldGFpbHMtc3RhdHMgdS10ZXh0LXN1YnRsZSI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vZWdncGxhbnQtd2l0aC1nYXJsaWMtc2F1Y2UjbWVudS1yZXZpZXdzIiBjbGFzcz0ibnVtLXJldmlld3MiPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LXJldmlldyBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9yZXZpZXciIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjYgcmV2aWV3czwvYT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9lZ2dwbGFudC13aXRoLWdhcmxpYy1zYXVjZSIpPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LWNhbWVyYSBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9jYW1lcmEiIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjUgcGhvdG9zPC9hPgogICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLXByaWNlcyBhcnJhbmdlX3VuaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgPGxpIGNsYXNzPSJtZW51LWl0ZW0tcHJpY2UtYW1vdW50Ij4KICAgICAgICAgICAgICAgICQxNi45NQogICAgICAgICAgICA8L2xpPgogICAgPC91bD4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAKCgoKICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbSI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9ob21lLXN0eWxlLWVnZ3BsYW50LXdpdGgtcG9yayIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9icGhvdG8vNGR5UGFwcTFNYVhkbTNHMEFGYS1yZy82MHMuanBnIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIG1lbnUtaXRlbS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL2hvbWUtc3R5bGUtZWdncGxhbnQtd2l0aC1wb3JrIj5Ib21lIFN0eWxlIEVnZ3BsYW50IHdpdGggUG9yazwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1zdGF0cyB1LXRleHQtc3VidGxlIj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9ob21lLXN0eWxlLWVnZ3BsYW50LXdpdGgtcG9yayNtZW51LXJldmlld3MiIGNsYXNzPSJudW0tcmV2aWV3cyI+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJ3aWR0aDogMTZweDsgaGVpZ2h0OiAxNnB4OyIgY2xhc3M9Imljb24gaWNvbi0tMTgtcmV2aWV3IGljb24tLXNpemUtMTggaWNvbi0tbmV1dHJhbC1ncmF5IHUtc3BhY2Utci1oYWxmIj4KICAgIDxzdmcgcm9sZT0iaW1nIiBjbGFzcz0iaWNvbl9zdmciPgogICAgICAgIDx1c2UgeGxpbms6aHJlZj0iIzE4eDE4X3JldmlldyIgLz4KICAgIDwvc3ZnPgo8L3NwYW4+NiByZXZpZXdzPC9hPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL2hvbWUtc3R5bGUtZWdncGxhbnQtd2l0aC1wb3JrIik+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJ3aWR0aDogMTZweDsgaGVpZ2h0OiAxNnB4OyIgY2xhc3M9Imljb24gaWNvbi0tMTgtY2FtZXJhIGljb24tLXNpemUtMTggaWNvbi0tbmV1dHJhbC1ncmF5IHUtc3BhY2Utci1oYWxmIj4KICAgIDxzdmcgcm9sZT0iaW1nIiBjbGFzcz0iaWNvbl9zdmciPgogICAgICAgIDx1c2UgeGxpbms6aHJlZj0iIzE4eDE4X2NhbWVyYSIgLz4KICAgIDwvc3ZnPgo8L3NwYW4+NSBwaG90b3M8L2E+CiAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDE2Ljk1CiAgICAgICAgICAgIDwvbGk+CiAgICA8L3VsPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIAoKCgogICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS1wbGFjZWhvbGRlci1waG90byI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9iaXpfdXNlcl9waG90b3MvU2s4OVpsbENiV1ZxQTRNX01vSjdMZy91cGxvYWQiIGRhdGEtYW5hbHl0aWNzLWxhYmVsPSJiaXotcGhvdG8iPgogICAgICAgICAgICAgICAgPGltZyBhbHQ9IiIgY2xhc3M9InBob3RvLWJveC1pbWciIGhlaWdodD0iNjAiIHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzLzIvd3d3L2ltZy9kY2E1NGY5N2ZiODQvZGVmYXVsdF9hdmF0YXJzL21lbnVfbWVkaXVtX3NxdWFyZS5wbmciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwgbWVudS1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdGVhbWVkIFBvcmsgV2l0aCBQcmVzZXJ2ZWQgVmVnZXRhYmxlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAKCgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDE3Ljk1CiAgICAgICAgICAgIDwvbGk+CiAgICA8L3VsPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIAoKCgogICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS1wbGFjZWhvbGRlci1waG90byI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9iaXpfdXNlcl9waG90b3MvU2s4OVpsbENiV1ZxQTRNX01vSjdMZy91cGxvYWQiIGRhdGEtYW5hbHl0aWNzLWxhYmVsPSJiaXotcGhvdG8iPgogICAgICAgICAgICAgICAgPGltZyBhbHQ9IiIgY2xhc3M9InBob3RvLWJveC1pbWciIGhlaWdodD0iNjAiIHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzLzIvd3d3L2ltZy9kY2E1NGY5N2ZiODQvZGVmYXVsdF9hdmF0YXJzL21lbnVfbWVkaXVtX3NxdWFyZS5wbmciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwgbWVudS1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBIb21lIFN0eWxlIFBvcmsgU2hvdWxkZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgIAoKCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1wcmljZXMgYXJyYW5nZV91bml0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibWVudS1pdGVtLXByaWNlLWFtb3VudCI+CiAgICAgICAgICAgICAgICAkMTguOTUKICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXBsYWNlaG9sZGVyLXBob3RvIj4KICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIGFycmFuZ2UtLTYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0Ij4KCiAgICAgICAgICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InBob3RvLWJveCBiaXotcGhvdG8tYm94IHBiLTYwcyI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1saWdodGJveC1tZWRpYS1saW5rIGpzLWFuYWx5dGljcy1jbGljayIgaHJlZj0iL2Jpel91c2VyX3Bob3Rvcy9Tazg5WmxsQ2JXVnFBNE1fTW9KN0xnL3VwbG9hZCIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvMi93d3cvaW1nL2RjYTU0Zjk3ZmI4NC9kZWZhdWx0X2F2YXRhcnMvbWVudV9tZWRpdW1fc3F1YXJlLnBuZyIgd2lkdGg9IjYwIj4KICAgICAgICAgICAgPC9hPgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCBtZW51LWl0ZW0tZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBhbiBGcmllZCBPbWVsZXQgd2l0aCBQb3JrCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAKCgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDE1Ljk1CiAgICAgICAgICAgIDwvbGk+CiAgICA8L3VsPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIAoKCgogICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS1wbGFjZWhvbGRlci1waG90byI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9iaXpfdXNlcl9waG90b3MvU2s4OVpsbENiV1ZxQTRNX01vSjdMZy91cGxvYWQiIGRhdGEtYW5hbHl0aWNzLWxhYmVsPSJiaXotcGhvdG8iPgogICAgICAgICAgICAgICAgPGltZyBhbHQ9IiIgY2xhc3M9InBob3RvLWJveC1pbWciIGhlaWdodD0iNjAiIHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzLzIvd3d3L2ltZy9kY2E1NGY5N2ZiODQvZGVmYXVsdF9hdmF0YXJzL21lbnVfbWVkaXVtX3NxdWFyZS5wbmciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwgbWVudS1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBCcmFpc2VkIFBvcmsgTWVhdCBCYWxscwogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgCgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLXByaWNlcyBhcnJhbmdlX3VuaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgPGxpIGNsYXNzPSJtZW51LWl0ZW0tcHJpY2UtYW1vdW50Ij4KICAgICAgICAgICAgICAgICQxNi45NQogICAgICAgICAgICA8L2xpPgogICAgPC91bD4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAKCgoKICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tcGxhY2Vob2xkZXItcGhvdG8iPgogICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UgYXJyYW5nZS0tNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQiPgoKICAgICAgICAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icGhvdG8tYm94IGJpei1waG90by1ib3ggcGItNjBzIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWxpZ2h0Ym94LW1lZGlhLWxpbmsganMtYW5hbHl0aWNzLWNsaWNrIiBocmVmPSIvYml6X3VzZXJfcGhvdG9zL1NrODlabGxDYldWcUE0TV9Nb0o3TGcvdXBsb2FkIiBkYXRhLWFuYWx5dGljcy1sYWJlbD0iYml6LXBob3RvIj4KICAgICAgICAgICAgICAgIDxpbWcgYWx0PSIiIGNsYXNzPSJwaG90by1ib3gtaW1nIiBoZWlnaHQ9IjYwIiBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2Fzc2V0cy8yL3d3dy9pbWcvZGNhNTRmOTdmYjg0L2RlZmF1bHRfYXZhdGFycy9tZW51X21lZGl1bV9zcXVhcmUucG5nIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIG1lbnUtaXRlbS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL3BvcmstaW50ZXN0aW5lLXdpdGgtc291ci10YXN0ZS1jYWJiYWdlIj5Qb3JrIEludGVzdGluZSB3aXRoIFNvdXIgVGFzdGUgQ2FiYmFnZTwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1zdGF0cyB1LXRleHQtc3VidGxlIj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9wb3JrLWludGVzdGluZS13aXRoLXNvdXItdGFzdGUtY2FiYmFnZSNtZW51LXJldmlld3MiIGNsYXNzPSJudW0tcmV2aWV3cyI+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJ3aWR0aDogMTZweDsgaGVpZ2h0OiAxNnB4OyIgY2xhc3M9Imljb24gaWNvbi0tMTgtcmV2aWV3IGljb24tLXNpemUtMTggaWNvbi0tbmV1dHJhbC1ncmF5IHUtc3BhY2Utci1oYWxmIj4KICAgIDxzdmcgcm9sZT0iaW1nIiBjbGFzcz0iaWNvbl9zdmciPgogICAgICAgIDx1c2UgeGxpbms6aHJlZj0iIzE4eDE4X3JldmlldyIgLz4KICAgIDwvc3ZnPgo8L3NwYW4+MSByZXZpZXc8L2E+CiAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDE4Ljk1CiAgICAgICAgICAgIDwvbGk+CiAgICA8L3VsPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIAoKCgogICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtIj4KICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIGFycmFuZ2UtLTYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0Ij4KCiAgICAgICAgICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InBob3RvLWJveCBiaXotcGhvdG8tYm94IHBiLTYwcyI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1saWdodGJveC1tZWRpYS1saW5rIGpzLWFuYWx5dGljcy1jbGljayIgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL3BvcmstaW50ZXN0aW5lLXdpdGgtY2lsYW50cm8iIGRhdGEtYW5hbHl0aWNzLWxhYmVsPSJiaXotcGhvdG8iPgogICAgICAgICAgICAgICAgPGltZyBhbHQ9IiIgY2xhc3M9InBob3RvLWJveC1pbWciIGhlaWdodD0iNjAiIHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYnBob3RvL1N1Mm5Kd2ZQSVJ0RGJxeVQ2Mm8tYWcvNjBzLmpwZyIgd2lkdGg9IjYwIj4KICAgICAgICAgICAgPC9hPgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCBtZW51LWl0ZW0tZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9wb3JrLWludGVzdGluZS13aXRoLWNpbGFudHJvIj5Qb3JrIEludGVzdGluZSB3aXRoIENpbGFudHJvPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1kZXRhaWxzLXN0YXRzIHUtdGV4dC1zdWJ0bGUiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL3BvcmstaW50ZXN0aW5lLXdpdGgtY2lsYW50cm8iKT48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9IndpZHRoOiAxNnB4OyBoZWlnaHQ6IDE2cHg7IiBjbGFzcz0iaWNvbiBpY29uLS0xOC1jYW1lcmEgaWNvbi0tc2l6ZS0xOCBpY29uLS1uZXV0cmFsLWdyYXkgdS1zcGFjZS1yLWhhbGYiPgogICAgPHN2ZyByb2xlPSJpbWciIGNsYXNzPSJpY29uX3N2ZyI+CiAgICAgICAgPHVzZSB4bGluazpocmVmPSIjMTh4MThfY2FtZXJhIiAvPgogICAgPC9zdmc+Cjwvc3Bhbj4xIHBob3RvPC9hPgogICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLXByaWNlcyBhcnJhbmdlX3VuaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgPGxpIGNsYXNzPSJtZW51LWl0ZW0tcHJpY2UtYW1vdW50Ij4KICAgICAgICAgICAgICAgICQxOC45NQogICAgICAgICAgICA8L2xpPgogICAgPC91bD4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAKCgoKICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbSI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9wb3JrLWludGVzdGluZS13aXRoLXNlcnJhbm8tcGVwcGVyIiBkYXRhLWFuYWx5dGljcy1sYWJlbD0iYml6LXBob3RvIj4KICAgICAgICAgICAgICAgIDxpbWcgYWx0PSIiIGNsYXNzPSJwaG90by1ib3gtaW1nIiBoZWlnaHQ9IjYwIiBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2JwaG90by9IMlBJRUNIenZicmhWRW1LNXJXYU9nLzYwcy5qcGciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwgbWVudS1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vcG9yay1pbnRlc3RpbmUtd2l0aC1zZXJyYW5vLXBlcHBlciI+UG9yayBJbnRlc3RpbmUgd2l0aCBTZXJyYW5vIFBlcHBlcjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0ibWVudS1pdGVtLWRldGFpbHMtZGVzY3JpcHRpb24iPlNwaWN5LjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1kZXRhaWxzLXN0YXRzIHUtdGV4dC1zdWJ0bGUiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL3BvcmstaW50ZXN0aW5lLXdpdGgtc2VycmFuby1wZXBwZXIiKT48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9IndpZHRoOiAxNnB4OyBoZWlnaHQ6IDE2cHg7IiBjbGFzcz0iaWNvbiBpY29uLS0xOC1jYW1lcmEgaWNvbi0tc2l6ZS0xOCBpY29uLS1uZXV0cmFsLWdyYXkgdS1zcGFjZS1yLWhhbGYiPgogICAgPHN2ZyByb2xlPSJpbWciIGNsYXNzPSJpY29uX3N2ZyI+CiAgICAgICAgPHVzZSB4bGluazpocmVmPSIjMTh4MThfY2FtZXJhIiAvPgogICAgPC9zdmc+Cjwvc3Bhbj4xIHBob3RvPC9hPgogICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLXByaWNlcyBhcnJhbmdlX3VuaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgPGxpIGNsYXNzPSJtZW51LWl0ZW0tcHJpY2UtYW1vdW50Ij4KICAgICAgICAgICAgICAgICQxOC45NQogICAgICAgICAgICA8L2xpPgogICAgPC91bD4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAKCgoKICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbSI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9tb25nb2xpYW4tYmVlZiIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9icGhvdG8veXBYX1JZMHNOV3N5eUktdmN6eGtOQS82MHMuanBnIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIG1lbnUtaXRlbS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL21vbmdvbGlhbi1iZWVmIj5Nb25nb2xpYW4gQmVlZjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1zdGF0cyB1LXRleHQtc3VidGxlIj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9tb25nb2xpYW4tYmVlZiNtZW51LXJldmlld3MiIGNsYXNzPSJudW0tcmV2aWV3cyI+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJ3aWR0aDogMTZweDsgaGVpZ2h0OiAxNnB4OyIgY2xhc3M9Imljb24gaWNvbi0tMTgtcmV2aWV3IGljb24tLXNpemUtMTggaWNvbi0tbmV1dHJhbC1ncmF5IHUtc3BhY2Utci1oYWxmIj4KICAgIDxzdmcgcm9sZT0iaW1nIiBjbGFzcz0iaWNvbl9zdmciPgogICAgICAgIDx1c2UgeGxpbms6aHJlZj0iIzE4eDE4X3JldmlldyIgLz4KICAgIDwvc3ZnPgo8L3NwYW4+NiByZXZpZXdzPC9hPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL21vbmdvbGlhbi1iZWVmIik+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJ3aWR0aDogMTZweDsgaGVpZ2h0OiAxNnB4OyIgY2xhc3M9Imljb24gaWNvbi0tMTgtY2FtZXJhIGljb24tLXNpemUtMTggaWNvbi0tbmV1dHJhbC1ncmF5IHUtc3BhY2Utci1oYWxmIj4KICAgIDxzdmcgcm9sZT0iaW1nIiBjbGFzcz0iaWNvbl9zdmciPgogICAgICAgIDx1c2UgeGxpbms6aHJlZj0iIzE4eDE4X2NhbWVyYSIgLz4KICAgIDwvc3ZnPgo8L3NwYW4+MSBwaG90bzwvYT4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1wcmljZXMgYXJyYW5nZV91bml0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibWVudS1pdGVtLXByaWNlLWFtb3VudCI+CiAgICAgICAgICAgICAgICAkMTcuOTUKICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0iPgogICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UgYXJyYW5nZS0tNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQiPgoKICAgICAgICAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icGhvdG8tYm94IGJpei1waG90by1ib3ggcGItNjBzIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWxpZ2h0Ym94LW1lZGlhLWxpbmsganMtYW5hbHl0aWNzLWNsaWNrIiBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vcGFuLWZyaWVkLWdyZWVuLWJlYW5zIiBkYXRhLWFuYWx5dGljcy1sYWJlbD0iYml6LXBob3RvIj4KICAgICAgICAgICAgICAgIDxpbWcgYWx0PSIiIGNsYXNzPSJwaG90by1ib3gtaW1nIiBoZWlnaHQ9IjYwIiBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2JwaG90by9tNXNabXJhNnJYUUtEZTRickhNYjJBLzYwcy5qcGciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwgbWVudS1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vcGFuLWZyaWVkLWdyZWVuLWJlYW5zIj5QYW4gRnJpZWQgR3JlZW4gQmVhbnM8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im1lbnUtaXRlbS1kZXRhaWxzLWRlc2NyaXB0aW9uIj5TcGljeS48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1zdGF0cyB1LXRleHQtc3VidGxlIj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9wYW4tZnJpZWQtZ3JlZW4tYmVhbnMjbWVudS1yZXZpZXdzIiBjbGFzcz0ibnVtLXJldmlld3MiPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LXJldmlldyBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9yZXZpZXciIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjIgcmV2aWV3czwvYT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9wYW4tZnJpZWQtZ3JlZW4tYmVhbnMiKT48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9IndpZHRoOiAxNnB4OyBoZWlnaHQ6IDE2cHg7IiBjbGFzcz0iaWNvbiBpY29uLS0xOC1jYW1lcmEgaWNvbi0tc2l6ZS0xOCBpY29uLS1uZXV0cmFsLWdyYXkgdS1zcGFjZS1yLWhhbGYiPgogICAgPHN2ZyByb2xlPSJpbWciIGNsYXNzPSJpY29uX3N2ZyI+CiAgICAgICAgPHVzZSB4bGluazpocmVmPSIjMTh4MThfY2FtZXJhIiAvPgogICAgPC9zdmc+Cjwvc3Bhbj4xIHBob3RvPC9hPgogICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLXByaWNlcyBhcnJhbmdlX3VuaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgPGxpIGNsYXNzPSJtZW51LWl0ZW0tcHJpY2UtYW1vdW50Ij4KICAgICAgICAgICAgICAgICQxNC45NQogICAgICAgICAgICA8L2xpPgogICAgPC91bD4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAKCgoKICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbSI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9zb3VyLXRhc3RlLXBvdGF0byIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9icGhvdG8vX096ZHlyM1F1al9IMWxxSlhHdkNRZy82MHMuanBnIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIG1lbnUtaXRlbS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL3NvdXItdGFzdGUtcG90YXRvIj5Tb3VyIFRhc3RlIFBvdGF0bzwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0ibWVudS1pdGVtLWRldGFpbHMtZGVzY3JpcHRpb24iPlNwaWN5LjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1kZXRhaWxzLXN0YXRzIHUtdGV4dC1zdWJ0bGUiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL3NvdXItdGFzdGUtcG90YXRvI21lbnUtcmV2aWV3cyIgY2xhc3M9Im51bS1yZXZpZXdzIj48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9IndpZHRoOiAxNnB4OyBoZWlnaHQ6IDE2cHg7IiBjbGFzcz0iaWNvbiBpY29uLS0xOC1yZXZpZXcgaWNvbi0tc2l6ZS0xOCBpY29uLS1uZXV0cmFsLWdyYXkgdS1zcGFjZS1yLWhhbGYiPgogICAgPHN2ZyByb2xlPSJpbWciIGNsYXNzPSJpY29uX3N2ZyI+CiAgICAgICAgPHVzZSB4bGluazpocmVmPSIjMTh4MThfcmV2aWV3IiAvPgogICAgPC9zdmc+Cjwvc3Bhbj4xIHJldmlldzwvYT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9zb3VyLXRhc3RlLXBvdGF0byIpPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LWNhbWVyYSBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9jYW1lcmEiIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjEgcGhvdG88L2E+CiAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDE0Ljk1CiAgICAgICAgICAgIDwvbGk+CiAgICA8L3VsPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIAoKCgogICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS1wbGFjZWhvbGRlci1waG90byI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9iaXpfdXNlcl9waG90b3MvU2s4OVpsbENiV1ZxQTRNX01vSjdMZy91cGxvYWQiIGRhdGEtYW5hbHl0aWNzLWxhYmVsPSJiaXotcGhvdG8iPgogICAgICAgICAgICAgICAgPGltZyBhbHQ9IiIgY2xhc3M9InBob3RvLWJveC1pbWciIGhlaWdodD0iNjAiIHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzLzIvd3d3L2ltZy9kY2E1NGY5N2ZiODQvZGVmYXVsdF9hdmF0YXJzL21lbnVfbWVkaXVtX3NxdWFyZS5wbmciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwgbWVudS1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vc3BpY3ktcG90YXRvLXNsaWNlcy13aXRoLXBvcmsiPlNwaWN5IFBvdGF0byBTbGljZXMgd2l0aCBQb3JrPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1kZXRhaWxzLXN0YXRzIHUtdGV4dC1zdWJ0bGUiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL3NwaWN5LXBvdGF0by1zbGljZXMtd2l0aC1wb3JrI21lbnUtcmV2aWV3cyIgY2xhc3M9Im51bS1yZXZpZXdzIj48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9IndpZHRoOiAxNnB4OyBoZWlnaHQ6IDE2cHg7IiBjbGFzcz0iaWNvbiBpY29uLS0xOC1yZXZpZXcgaWNvbi0tc2l6ZS0xOCBpY29uLS1uZXV0cmFsLWdyYXkgdS1zcGFjZS1yLWhhbGYiPgogICAgPHN2ZyByb2xlPSJpbWciIGNsYXNzPSJpY29uX3N2ZyI+CiAgICAgICAgPHVzZSB4bGluazpocmVmPSIjMTh4MThfcmV2aWV3IiAvPgogICAgPC9zdmc+Cjwvc3Bhbj4xIHJldmlldzwvYT4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1wcmljZXMgYXJyYW5nZV91bml0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibWVudS1pdGVtLXByaWNlLWFtb3VudCI+CiAgICAgICAgICAgICAgICAkMTUuOTUKICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0iPgogICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UgYXJyYW5nZS0tNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQiPgoKICAgICAgICAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icGhvdG8tYm94IGJpei1waG90by1ib3ggcGItNjBzIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWxpZ2h0Ym94LW1lZGlhLWxpbmsganMtYW5hbHl0aWNzLWNsaWNrIiBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vYm9rLWNob3ktd2l0aC1nYXJsaWMiIGRhdGEtYW5hbHl0aWNzLWxhYmVsPSJiaXotcGhvdG8iPgogICAgICAgICAgICAgICAgPGltZyBhbHQ9IiIgY2xhc3M9InBob3RvLWJveC1pbWciIGhlaWdodD0iNjAiIHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYnBob3RvL1FVY1RjdmhKLTVQSnRRazBCTEJHWncvNjBzLmpwZyIgd2lkdGg9IjYwIj4KICAgICAgICAgICAgPC9hPgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCBtZW51LWl0ZW0tZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9ib2stY2hveS13aXRoLWdhcmxpYyI+Qm9rIENob3kgd2l0aCBHYXJsaWM8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLWRldGFpbHMtc3RhdHMgdS10ZXh0LXN1YnRsZSI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vYm9rLWNob3ktd2l0aC1nYXJsaWMjbWVudS1yZXZpZXdzIiBjbGFzcz0ibnVtLXJldmlld3MiPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LXJldmlldyBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9yZXZpZXciIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjMgcmV2aWV3czwvYT4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9ib2stY2hveS13aXRoLWdhcmxpYyIpPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LWNhbWVyYSBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9jYW1lcmEiIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjEgcGhvdG88L2E+CiAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDE0Ljk1CiAgICAgICAgICAgIDwvbGk+CiAgICA8L3VsPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIAoKCgogICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtIj4KICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIGFycmFuZ2UtLTYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0Ij4KCiAgICAgICAgICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InBob3RvLWJveCBiaXotcGhvdG8tYm94IHBiLTYwcyI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1saWdodGJveC1tZWRpYS1saW5rIGpzLWFuYWx5dGljcy1jbGljayIgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL2hvbWUtc3R5bGUtY2FiYmFnZSIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9icGhvdG8vRm1Gd2dIQ3NuQVBsSEhqa05HTWRfdy82MHMuanBnIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIG1lbnUtaXRlbS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL2hvbWUtc3R5bGUtY2FiYmFnZSI+SG9tZSBTdHlsZSBDYWJiYWdlPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1kZXRhaWxzLXN0YXRzIHUtdGV4dC1zdWJ0bGUiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL2hvbWUtc3R5bGUtY2FiYmFnZSNtZW51LXJldmlld3MiIGNsYXNzPSJudW0tcmV2aWV3cyI+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJ3aWR0aDogMTZweDsgaGVpZ2h0OiAxNnB4OyIgY2xhc3M9Imljb24gaWNvbi0tMTgtcmV2aWV3IGljb24tLXNpemUtMTggaWNvbi0tbmV1dHJhbC1ncmF5IHUtc3BhY2Utci1oYWxmIj4KICAgIDxzdmcgcm9sZT0iaW1nIiBjbGFzcz0iaWNvbl9zdmciPgogICAgICAgIDx1c2UgeGxpbms6aHJlZj0iIzE4eDE4X3JldmlldyIgLz4KICAgIDwvc3ZnPgo8L3NwYW4+NCByZXZpZXdzPC9hPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL2hvbWUtc3R5bGUtY2FiYmFnZSIpPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBzdHlsZT0id2lkdGg6IDE2cHg7IGhlaWdodDogMTZweDsiIGNsYXNzPSJpY29uIGljb24tLTE4LWNhbWVyYSBpY29uLS1zaXplLTE4IGljb24tLW5ldXRyYWwtZ3JheSB1LXNwYWNlLXItaGFsZiI+CiAgICA8c3ZnIHJvbGU9ImltZyIgY2xhc3M9Imljb25fc3ZnIj4KICAgICAgICA8dXNlIHhsaW5rOmhyZWY9IiMxOHgxOF9jYW1lcmEiIC8+CiAgICA8L3N2Zz4KPC9zcGFuPjQgcGhvdG9zPC9hPgogICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLXByaWNlcyBhcnJhbmdlX3VuaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgPGxpIGNsYXNzPSJtZW51LWl0ZW0tcHJpY2UtYW1vdW50Ij4KICAgICAgICAgICAgICAgICQxNC45NQogICAgICAgICAgICA8L2xpPgogICAgPC91bD4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2VjdGlvbi1oZWFkZXIgc2VjdGlvbi1oZWFkZXItLW5vLXNwYWNpbmciPgogICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0iYWx0ZXJuYXRlIiBpZD0ibHVuY2gtYW1lcmljYXMtcG9wdWxhciI+CiAgICAgICAgICAgICAgICAgICAgTHVuY2ggQW1lcmljYSYjMzk7cyBQb3B1bGFyCiAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgPC9kaXY+CgogICAgICAgIDxkaXYgY2xhc3M9InUtc3BhY2UtYjMiPgogICAgICAgICAgICAgICAgICAgIAoKCgogICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS1wbGFjZWhvbGRlci1waG90byI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9iaXpfdXNlcl9waG90b3MvU2s4OVpsbENiV1ZxQTRNX01vSjdMZy91cGxvYWQiIGRhdGEtYW5hbHl0aWNzLWxhYmVsPSJiaXotcGhvdG8iPgogICAgICAgICAgICAgICAgPGltZyBhbHQ9IiIgY2xhc3M9InBob3RvLWJveC1pbWciIGhlaWdodD0iNjAiIHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzLzIvd3d3L2ltZy9kY2E1NGY5N2ZiODQvZGVmYXVsdF9hdmF0YXJzL21lbnVfbWVkaXVtX3NxdWFyZS5wbmciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwgbWVudS1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTZXNhbWUgQ2hpY2tlbiBMdW5jaAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgCgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLXByaWNlcyBhcnJhbmdlX3VuaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgPGxpIGNsYXNzPSJtZW51LWl0ZW0tcHJpY2UtYW1vdW50Ij4KICAgICAgICAgICAgICAgICQxMy45NQogICAgICAgICAgICA8L2xpPgogICAgPC91bD4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAKCgoKICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tcGxhY2Vob2xkZXItcGhvdG8iPgogICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UgYXJyYW5nZS0tNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQiPgoKICAgICAgICAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icGhvdG8tYm94IGJpei1waG90by1ib3ggcGItNjBzIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWxpZ2h0Ym94LW1lZGlhLWxpbmsganMtYW5hbHl0aWNzLWNsaWNrIiBocmVmPSIvYml6X3VzZXJfcGhvdG9zL1NrODlabGxDYldWcUE0TV9Nb0o3TGcvdXBsb2FkIiBkYXRhLWFuYWx5dGljcy1sYWJlbD0iYml6LXBob3RvIj4KICAgICAgICAgICAgICAgIDxpbWcgYWx0PSIiIGNsYXNzPSJwaG90by1ib3gtaW1nIiBoZWlnaHQ9IjYwIiBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2Fzc2V0cy8yL3d3dy9pbWcvZGNhNTRmOTdmYjg0L2RlZmF1bHRfYXZhdGFycy9tZW51X21lZGl1bV9zcXVhcmUucG5nIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIG1lbnUtaXRlbS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgT3JhbmdlIENoaWNrZW4gTHVuY2gKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0ibWVudS1pdGVtLWRldGFpbHMtZGVzY3JpcHRpb24iPlBvdWx0cnkuPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAKCgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDEzLjk1CiAgICAgICAgICAgIDwvbGk+CiAgICA8L3VsPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIAoKCgogICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS1wbGFjZWhvbGRlci1waG90byI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9iaXpfdXNlcl9waG90b3MvU2s4OVpsbENiV1ZxQTRNX01vSjdMZy91cGxvYWQiIGRhdGEtYW5hbHl0aWNzLWxhYmVsPSJiaXotcGhvdG8iPgogICAgICAgICAgICAgICAgPGltZyBhbHQ9IiIgY2xhc3M9InBob3RvLWJveC1pbWciIGhlaWdodD0iNjAiIHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzLzIvd3d3L2ltZy9kY2E1NGY5N2ZiODQvZGVmYXVsdF9hdmF0YXJzL21lbnVfbWVkaXVtX3NxdWFyZS5wbmciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwgbWVudS1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBHZW5lcmFsIFRhbyBDaGlja2VuIEx1bmNoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im1lbnUtaXRlbS1kZXRhaWxzLWRlc2NyaXB0aW9uIj5TcGljeS48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIAoKCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1wcmljZXMgYXJyYW5nZV91bml0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibWVudS1pdGVtLXByaWNlLWFtb3VudCI+CiAgICAgICAgICAgICAgICAkMTMuOTUKICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXBsYWNlaG9sZGVyLXBob3RvIj4KICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIGFycmFuZ2UtLTYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0Ij4KCiAgICAgICAgICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InBob3RvLWJveCBiaXotcGhvdG8tYm94IHBiLTYwcyI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1saWdodGJveC1tZWRpYS1saW5rIGpzLWFuYWx5dGljcy1jbGljayIgaHJlZj0iL2Jpel91c2VyX3Bob3Rvcy9Tazg5WmxsQ2JXVnFBNE1fTW9KN0xnL3VwbG9hZCIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvMi93d3cvaW1nL2RjYTU0Zjk3ZmI4NC9kZWZhdWx0X2F2YXRhcnMvbWVudV9tZWRpdW1fc3F1YXJlLnBuZyIgd2lkdGg9IjYwIj4KICAgICAgICAgICAgPC9hPgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCBtZW51LWl0ZW0tZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRoYWkgQ3VycnkgQ2hpY2tlbiBMdW5jaAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1kZXNjcmlwdGlvbiI+U3BpY3kuPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAKCgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDEzLjk1CiAgICAgICAgICAgIDwvbGk+CiAgICA8L3VsPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIAoKCgogICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtIj4KICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIGFycmFuZ2UtLTYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0Ij4KCiAgICAgICAgICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InBob3RvLWJveCBiaXotcGhvdG8tYm94IHBiLTYwcyI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1saWdodGJveC1tZWRpYS1saW5rIGpzLWFuYWx5dGljcy1jbGljayIgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL2JlZWYtYW5kLWJyb2Njb2xpLWx1bmNoIiBkYXRhLWFuYWx5dGljcy1sYWJlbD0iYml6LXBob3RvIj4KICAgICAgICAgICAgICAgIDxpbWcgYWx0PSIiIGNsYXNzPSJwaG90by1ib3gtaW1nIiBoZWlnaHQ9IjYwIiBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2JwaG90by9NZXN1bTZILVhObTh0ZzRBSlNvWUZRLzYwcy5qcGciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwgbWVudS1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vYmVlZi1hbmQtYnJvY2NvbGktbHVuY2giPkJlZWYgYW5kIEJyb2Njb2xpIEx1bmNoPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1kZXRhaWxzLXN0YXRzIHUtdGV4dC1zdWJ0bGUiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL2JlZWYtYW5kLWJyb2Njb2xpLWx1bmNoIik+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJ3aWR0aDogMTZweDsgaGVpZ2h0OiAxNnB4OyIgY2xhc3M9Imljb24gaWNvbi0tMTgtY2FtZXJhIGljb24tLXNpemUtMTggaWNvbi0tbmV1dHJhbC1ncmF5IHUtc3BhY2Utci1oYWxmIj4KICAgIDxzdmcgcm9sZT0iaW1nIiBjbGFzcz0iaWNvbl9zdmciPgogICAgICAgIDx1c2UgeGxpbms6aHJlZj0iIzE4eDE4X2NhbWVyYSIgLz4KICAgIDwvc3ZnPgo8L3NwYW4+MSBwaG90bzwvYT4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1wcmljZXMgYXJyYW5nZV91bml0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibWVudS1pdGVtLXByaWNlLWFtb3VudCI+CiAgICAgICAgICAgICAgICAkMTMuOTUKICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXBsYWNlaG9sZGVyLXBob3RvIj4KICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIGFycmFuZ2UtLTYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0Ij4KCiAgICAgICAgICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InBob3RvLWJveCBiaXotcGhvdG8tYm94IHBiLTYwcyI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1saWdodGJveC1tZWRpYS1saW5rIGpzLWFuYWx5dGljcy1jbGljayIgaHJlZj0iL2Jpel91c2VyX3Bob3Rvcy9Tazg5WmxsQ2JXVnFBNE1fTW9KN0xnL3VwbG9hZCIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvMi93d3cvaW1nL2RjYTU0Zjk3ZmI4NC9kZWZhdWx0X2F2YXRhcnMvbWVudV9tZWRpdW1fc3F1YXJlLnBuZyIgd2lkdGg9IjYwIj4KICAgICAgICAgICAgPC9hPgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCBtZW51LWl0ZW0tZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENoaWNrZW4gTG8gTWVpbiBMdW5jaAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1kZXNjcmlwdGlvbiI+RWdnIG5vb2RsZSBkaXNoLjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgCgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLXByaWNlcyBhcnJhbmdlX3VuaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgPGxpIGNsYXNzPSJtZW51LWl0ZW0tcHJpY2UtYW1vdW50Ij4KICAgICAgICAgICAgICAgICQxMi45NQogICAgICAgICAgICA8L2xpPgogICAgPC91bD4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAKCgoKICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tcGxhY2Vob2xkZXItcGhvdG8iPgogICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UgYXJyYW5nZS0tNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQiPgoKICAgICAgICAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icGhvdG8tYm94IGJpei1waG90by1ib3ggcGItNjBzIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWxpZ2h0Ym94LW1lZGlhLWxpbmsganMtYW5hbHl0aWNzLWNsaWNrIiBocmVmPSIvYml6X3VzZXJfcGhvdG9zL1NrODlabGxDYldWcUE0TV9Nb0o3TGcvdXBsb2FkIiBkYXRhLWFuYWx5dGljcy1sYWJlbD0iYml6LXBob3RvIj4KICAgICAgICAgICAgICAgIDxpbWcgYWx0PSIiIGNsYXNzPSJwaG90by1ib3gtaW1nIiBoZWlnaHQ9IjYwIiBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2Fzc2V0cy8yL3d3dy9pbWcvZGNhNTRmOTdmYjg0L2RlZmF1bHRfYXZhdGFycy9tZW51X21lZGl1bV9zcXVhcmUucG5nIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIG1lbnUtaXRlbS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL2NoaWNrZW4tZnJpZWQtcmljZS1sdW5jaCI+Q2hpY2tlbiBGcmllZCBSaWNlIEx1bmNoPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtZW51LWl0ZW0tZGV0YWlscy1kZXNjcmlwdGlvbiI+U3RpciBmcmllZCByaWNlLjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1kZXRhaWxzLXN0YXRzIHUtdGV4dC1zdWJ0bGUiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL2NoaWNrZW4tZnJpZWQtcmljZS1sdW5jaCNtZW51LXJldmlld3MiIGNsYXNzPSJudW0tcmV2aWV3cyI+PHNwYW4gYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJ3aWR0aDogMTZweDsgaGVpZ2h0OiAxNnB4OyIgY2xhc3M9Imljb24gaWNvbi0tMTgtcmV2aWV3IGljb24tLXNpemUtMTggaWNvbi0tbmV1dHJhbC1ncmF5IHUtc3BhY2Utci1oYWxmIj4KICAgIDxzdmcgcm9sZT0iaW1nIiBjbGFzcz0iaWNvbl9zdmciPgogICAgICAgIDx1c2UgeGxpbms6aHJlZj0iIzE4eDE4X3JldmlldyIgLz4KICAgIDwvc3ZnPgo8L3NwYW4+MSByZXZpZXc8L2E+CiAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDEyLjk1CiAgICAgICAgICAgIDwvbGk+CiAgICA8L3VsPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLWhlYWRlciBzZWN0aW9uLWhlYWRlci0tbm8tc3BhY2luZyI+CiAgICAgICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJhbHRlcm5hdGUiIGlkPSJkaW5uZXItYW1lcmljYXMtcG9wdWxhciI+CiAgICAgICAgICAgICAgICAgICAgRGlubmVyIEFtZXJpY2EmIzM5O3MgUG9wdWxhcgogICAgICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICA8ZGl2IGNsYXNzPSJ1LXNwYWNlLWIzIj4KICAgICAgICAgICAgICAgICAgICAKCgoKICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tcGxhY2Vob2xkZXItcGhvdG8iPgogICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UgYXJyYW5nZS0tNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQiPgoKICAgICAgICAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icGhvdG8tYm94IGJpei1waG90by1ib3ggcGItNjBzIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWxpZ2h0Ym94LW1lZGlhLWxpbmsganMtYW5hbHl0aWNzLWNsaWNrIiBocmVmPSIvYml6X3VzZXJfcGhvdG9zL1NrODlabGxDYldWcUE0TV9Nb0o3TGcvdXBsb2FkIiBkYXRhLWFuYWx5dGljcy1sYWJlbD0iYml6LXBob3RvIj4KICAgICAgICAgICAgICAgIDxpbWcgYWx0PSIiIGNsYXNzPSJwaG90by1ib3gtaW1nIiBoZWlnaHQ9IjYwIiBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2Fzc2V0cy8yL3d3dy9pbWcvZGNhNTRmOTdmYjg0L2RlZmF1bHRfYXZhdGFycy9tZW51X21lZGl1bV9zcXVhcmUucG5nIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIG1lbnUtaXRlbS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU2VzYW1lIENoaWNrZW4gRGlubmVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAKCgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDE1Ljk1CiAgICAgICAgICAgIDwvbGk+CiAgICA8L3VsPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIAoKCgogICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS1wbGFjZWhvbGRlci1waG90byI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9iaXpfdXNlcl9waG90b3MvU2s4OVpsbENiV1ZxQTRNX01vSjdMZy91cGxvYWQiIGRhdGEtYW5hbHl0aWNzLWxhYmVsPSJiaXotcGhvdG8iPgogICAgICAgICAgICAgICAgPGltZyBhbHQ9IiIgY2xhc3M9InBob3RvLWJveC1pbWciIGhlaWdodD0iNjAiIHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzLzIvd3d3L2ltZy9kY2E1NGY5N2ZiODQvZGVmYXVsdF9hdmF0YXJzL21lbnVfbWVkaXVtX3NxdWFyZS5wbmciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwgbWVudS1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBPcmFuZ2UgQ2hpY2tlbiBEaW5uZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgIAoKCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1wcmljZXMgYXJyYW5nZV91bml0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibWVudS1pdGVtLXByaWNlLWFtb3VudCI+CiAgICAgICAgICAgICAgICAkMTUuOTUKICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXBsYWNlaG9sZGVyLXBob3RvIj4KICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIGFycmFuZ2UtLTYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0Ij4KCiAgICAgICAgICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InBob3RvLWJveCBiaXotcGhvdG8tYm94IHBiLTYwcyI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1saWdodGJveC1tZWRpYS1saW5rIGpzLWFuYWx5dGljcy1jbGljayIgaHJlZj0iL2Jpel91c2VyX3Bob3Rvcy9Tazg5WmxsQ2JXVnFBNE1fTW9KN0xnL3VwbG9hZCIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvMi93d3cvaW1nL2RjYTU0Zjk3ZmI4NC9kZWZhdWx0X2F2YXRhcnMvbWVudV9tZWRpdW1fc3F1YXJlLnBuZyIgd2lkdGg9IjYwIj4KICAgICAgICAgICAgPC9hPgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCBtZW51LWl0ZW0tZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdlbmVyYWwgVGFvIENoaWNrZW4gRGlubmVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im1lbnUtaXRlbS1kZXRhaWxzLWRlc2NyaXB0aW9uIj5TcGljeS48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIAoKCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbS1wcmljZXMgYXJyYW5nZV91bml0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgIDxsaSBjbGFzcz0ibWVudS1pdGVtLXByaWNlLWFtb3VudCI+CiAgICAgICAgICAgICAgICAkMTUuOTUKICAgICAgICAgICAgPC9saT4KICAgIDwvdWw+CgoKICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgCgoKCiAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXBsYWNlaG9sZGVyLXBob3RvIj4KICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIGFycmFuZ2UtLTYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0Ij4KCiAgICAgICAgICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InBob3RvLWJveCBiaXotcGhvdG8tYm94IHBiLTYwcyI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1saWdodGJveC1tZWRpYS1saW5rIGpzLWFuYWx5dGljcy1jbGljayIgaHJlZj0iL2Jpel91c2VyX3Bob3Rvcy9Tazg5WmxsQ2JXVnFBNE1fTW9KN0xnL3VwbG9hZCIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvMi93d3cvaW1nL2RjYTU0Zjk3ZmI4NC9kZWZhdWx0X2F2YXRhcnMvbWVudV9tZWRpdW1fc3F1YXJlLnBuZyIgd2lkdGg9IjYwIj4KICAgICAgICAgICAgPC9hPgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCBtZW51LWl0ZW0tZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRoYWkgQ3VycnkgQ2hpY2tlbiBEaW5uZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0ibWVudS1pdGVtLWRldGFpbHMtZGVzY3JpcHRpb24iPlNwaWN5LjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgCgoKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtLXByaWNlcyBhcnJhbmdlX3VuaXQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgPGxpIGNsYXNzPSJtZW51LWl0ZW0tcHJpY2UtYW1vdW50Ij4KICAgICAgICAgICAgICAgICQxNi45NQogICAgICAgICAgICA8L2xpPgogICAgPC91bD4KCgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAKCgoKICAgIDxkaXYgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tcGxhY2Vob2xkZXItcGhvdG8iPgogICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UgYXJyYW5nZS0tNiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQiPgoKICAgICAgICAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icGhvdG8tYm94IGJpei1waG90by1ib3ggcGItNjBzIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWxpZ2h0Ym94LW1lZGlhLWxpbmsganMtYW5hbHl0aWNzLWNsaWNrIiBocmVmPSIvYml6X3VzZXJfcGhvdG9zL1NrODlabGxDYldWcUE0TV9Nb0o3TGcvdXBsb2FkIiBkYXRhLWFuYWx5dGljcy1sYWJlbD0iYml6LXBob3RvIj4KICAgICAgICAgICAgICAgIDxpbWcgYWx0PSIiIGNsYXNzPSJwaG90by1ib3gtaW1nIiBoZWlnaHQ9IjYwIiBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2Fzc2V0cy8yL3d3dy9pbWcvZGNhNTRmOTdmYjg0L2RlZmF1bHRfYXZhdGFycy9tZW51X21lZGl1bV9zcXVhcmUucG5nIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZV91bml0IGFycmFuZ2VfdW5pdC0tZmlsbCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIG1lbnUtaXRlbS1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQmVlZiBhbmQgQnJvY2NvbGkgRGlubmVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAKCgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDE2Ljk1CiAgICAgICAgICAgIDwvbGk+CiAgICA8L3VsPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIAoKCgogICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS1wbGFjZWhvbGRlci1waG90byI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9iaXpfdXNlcl9waG90b3MvU2s4OVpsbENiV1ZxQTRNX01vSjdMZy91cGxvYWQiIGRhdGEtYW5hbHl0aWNzLWxhYmVsPSJiaXotcGhvdG8iPgogICAgICAgICAgICAgICAgPGltZyBhbHQ9IiIgY2xhc3M9InBob3RvLWJveC1pbWciIGhlaWdodD0iNjAiIHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzLzIvd3d3L2ltZy9kY2E1NGY5N2ZiODQvZGVmYXVsdF9hdmF0YXJzL21lbnVfbWVkaXVtX3NxdWFyZS5wbmciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwgbWVudS1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDaGlja2VuIExvIE1laW4gRGlubmVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAKCgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDE0Ljk1CiAgICAgICAgICAgIDwvbGk+CiAgICA8L3VsPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIAoKCgogICAgPGRpdiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS1wbGFjZWhvbGRlci1waG90byI+CiAgICAgICAgPGRpdiBjbGFzcz0iYXJyYW5nZSBhcnJhbmdlLS02Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCI+CgogICAgICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9iaXpfdXNlcl9waG90b3MvU2s4OVpsbENiV1ZxQTRNX01vSjdMZy91cGxvYWQiIGRhdGEtYW5hbHl0aWNzLWxhYmVsPSJiaXotcGhvdG8iPgogICAgICAgICAgICAgICAgPGltZyBhbHQ9IiIgY2xhc3M9InBob3RvLWJveC1pbWciIGhlaWdodD0iNjAiIHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzLzIvd3d3L2ltZy9kY2E1NGY5N2ZiODQvZGVmYXVsdF9hdmF0YXJzL21lbnVfbWVkaXVtX3NxdWFyZS5wbmciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhcnJhbmdlX3VuaXQgYXJyYW5nZV91bml0LS1maWxsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2UiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFycmFuZ2VfdW5pdCBhcnJhbmdlX3VuaXQtLWZpbGwgbWVudS1pdGVtLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDaGlja2VuIEZyaWVkIFJpY2UgRGlubmVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAKCgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZW51LWl0ZW0tcHJpY2VzIGFycmFuZ2VfdW5pdCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICA8bGkgY2xhc3M9Im1lbnUtaXRlbS1wcmljZS1hbW91bnQiPgogICAgICAgICAgICAgICAgJDE0Ljk1CiAgICAgICAgICAgIDwvbGk+CiAgICA8L3VsPgoKCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLWhlYWRlciBzZWN0aW9uLWhlYWRlci0tbm8tc3BhY2luZyI+CiAgICAgICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJhbHRlcm5hdGUiIGlkPSJub29kbGVzLWV4cHJlc3MtYXJjaGl2ZWQiPgogICAgICAgICAgICAgICAgICAgIE5vb2RsZXMgRXhwcmVzcyhBcmNoaXZlZCkKICAgICAgICAgICAgICAgIDwvaDI+CgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0idS1zcGFjZS1iMyI+CiAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImNvbHVtbiBjb2x1bW4tYmV0YSBwb3B1bGFyLXNlY3Rpb24iPgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtZW51LWRpc2NsYWltZXItY2xlYW4iPgogICAgICAgICAgICBNZW51IG1heSBub3QgYmUgdXAgdG8gZGF0ZS4KICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDo7IiBjbGFzcz0ianMtbWVudS1mZWVkYmFjay1saW5rIj5TdWJtaXQgY29ycmVjdGlvbnMuPC9hPgogICAgPC9wPgoKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxoMj4KICAgICAgICAgICAgICAgICAgICAgICAgV2hhdCdzIFBvcHVsYXIgSGVyZT8KICAgICAgICAgICAgICAgICAgICA8L2gyPgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lZGlhLWJsb2NrIG1lZGlhLWJsb2NrLS0xMiBwb3B1bGFyLWl0ZW0iPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZWRpYS1hdmF0YXIiPgogICAgICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InBob3RvLWJveCBiaXotcGhvdG8tYm94IHBiLTYwcyI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJqcy1saWdodGJveC1tZWRpYS1saW5rIGpzLWFuYWx5dGljcy1jbGljayIgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL2Rhbi1kYW4tbm9vZGxlcyIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9icGhvdG8vN0M0OC1kaHFEOXU5QmV4eTcyS2lfUS82MHMuanBnIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZWRpYS1zdG9yeSI+CiAgICAgICAgICAgICAgICA8aDM+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL2Rhbi1kYW4tbm9vZGxlcyI+RGFuIERhbiBOb29kbGVzPC9hPgogICAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgICAgICAgIDxiPlBob2ViZSBTLjwvYj4gdGhlIGdvLXRvIGZvciBhdXRoZW50aWMgc3plY2h1YW4gY3Vpc2luZSEgIHRoZSBjaGVmcyBhbmQgd2FpdHJlc3NlcyBvZiB0aGlzIHJlc3RhdXJhbnQgYXJlIEV4dHJlbWVseeKApgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9kYW4tZGFuLW5vb2RsZXMjcmV2aWV3X2Rfd2RMazZiaWhFMjNkVGtxMy1NbUEiPlJlYWQgbW9yZTwvYT4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0ibWVkaWEtYmxvY2sgbWVkaWEtYmxvY2stLTEyIHBvcHVsYXItaXRlbSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lZGlhLWF2YXRhciI+CiAgICAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icGhvdG8tYm94IGJpei1waG90by1ib3ggcGItNjBzIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImpzLWxpZ2h0Ym94LW1lZGlhLWxpbmsganMtYW5hbHl0aWNzLWNsaWNrIiBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vbWFwby10b2Z1IiBkYXRhLWFuYWx5dGljcy1sYWJlbD0iYml6LXBob3RvIj4KICAgICAgICAgICAgICAgIDxpbWcgYWx0PSIiIGNsYXNzPSJwaG90by1ib3gtaW1nIiBoZWlnaHQ9IjYwIiBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2JwaG90by9hN1pNbkhIejZDTkRRTXV4MnFzUnV3LzYwcy5qcGciIHdpZHRoPSI2MCI+CiAgICAgICAgICAgIDwvYT4KICAgIDwvZGl2PgoKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lZGlhLXN0b3J5Ij4KICAgICAgICAgICAgICAgIDxoMz4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vbWFwby10b2Z1Ij5NYXBvIFRvZnU8L2E+CiAgICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICAgICAgPGI+TGVhbm5lIEQuPC9iPiBNeSBodWJieSBhbmQgSSBjYW1lIGhlcmUgdmlhIGEgcmVjb21tZW5kYXRpb24gZnJvbSBLcmVhbSBLaW1jaGkgKEdSRUFUIEtJTUNISSkgLSB3ZSBzdGFydGVkIHdpdGggdGhl4oCmCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL21hcG8tdG9mdSNyZXZpZXdfOGE3ajNodWhBUXNoOHFkU2JtMEhiUSI+UmVhZCBtb3JlPC9hPgogICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJtZWRpYS1ibG9jayBtZWRpYS1ibG9jay0tMTIgcG9wdWxhci1pdGVtIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVkaWEtYXZhdGFyIj4KICAgICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJwaG90by1ib3ggYml6LXBob3RvLWJveCBwYi02MHMiPgogICAgICAgICAgICA8YSBjbGFzcz0ianMtbGlnaHRib3gtbWVkaWEtbGluayBqcy1hbmFseXRpY3MtY2xpY2siIGhyZWY9Ii9tZW51L25vb2RsZXMtZXhwcmVzcy1kZW52ZXIvaXRlbS9lZ2dwbGFudC13aXRoLWdhcmxpYy1zYXVjZSIgZGF0YS1hbmFseXRpY3MtbGFiZWw9ImJpei1waG90byI+CiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBjbGFzcz0icGhvdG8tYm94LWltZyIgaGVpZ2h0PSI2MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9icGhvdG8vOEw1ZWpFMVYzYTJ1dmFaR1pONFA2QS82MHMuanBnIiB3aWR0aD0iNjAiPgogICAgICAgICAgICA8L2E+CiAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZWRpYS1zdG9yeSI+CiAgICAgICAgICAgICAgICA8aDM+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL21lbnUvbm9vZGxlcy1leHByZXNzLWRlbnZlci9pdGVtL2VnZ3BsYW50LXdpdGgtZ2FybGljLXNhdWNlIj5FZ2dwbGFudCB3aXRoIEdhcmxpYyBTYXVjZTwvYT4KICAgICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgICA8Yj5Kb2huIEwuPC9iPiBTVFJPTkdMWSBSRUNPTU1FTkQhICBJZiB5b3UmYW1wOyMzOTtyZSBsb29raW5nIGZvciBzb21lIHJlYWwsIGF1dGhlbnRpYyBDaGluZXNlIC9TemVjaHVhbiBmb29kLCB0aGlzIGlzIHlvdXLigKYKICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyL2l0ZW0vZWdncGxhbnQtd2l0aC1nYXJsaWMtc2F1Y2UjcmV2aWV3XzF3YXU5UmtsRmtCUnZodjJpN1pfNXciPlJlYWQgbW9yZTwvYT4KICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CgogICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0ibWVudS1mb290bm90ZXMiPgoKICAgICAgICAgICAgCgogICAgICAgIDxwPgogICAgICAgICAgICBNZW51IGRhdGEgcHJvdmlkZWQgYnkgCgogICAgICAgIDxpbWcgYWx0PSJHcnViaHViIiBjbGFzcz0ibWVudS1wcm92aWRlci1hdHRyaWJ1dGlvbiIgaGVpZ2h0PSI1MCIgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvMi93d3cvaW1nLzQ2OWY4ZjAyNTgyZS9tZW51cy9ncnViaHViX2xvZ28ucG5nIiB3aWR0aD0iMTAwIj4KCgogICAgICAgIDwvcD4KCgogICAgICAgICAgICAgICAgPHAgY2xhc3M9Im1lbnUtZGlzY2xhaW1lci1jbGVhbiI+CiAgICAgICAgICAgIE1lbnUgbWF5IG5vdCBiZSB1cCB0byBkYXRlLgogICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OjsiIGNsYXNzPSJqcy1tZW51LWZlZWRiYWNrLWxpbmsiPlN1Ym1pdCBjb3JyZWN0aW9ucy48L2E+CiAgICA8L3A+CgogICAgICAgIDwvZGl2PgoKICAgIDwvZGl2PgogICAgCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KCgoKICAgICAgICAgICAgICAgICAgICA8IS0tIDxhIGhyZWY9Ii9iaXovb3V0bG9vay1hdXR1bW4tbWFya2V0LWZ1bmRhbWVudGFsLWNhdHdhbGstZmxpbXN5LXJvb3N0LWxlZ2liaWxpdHktaW5kaXZpZHVhbGlzbS1ncm9jZXItcHJlZGVzdGluYXRpb24tMSI+eWVscDwvYT4gLS0+CiAgICAgICAgICAgICAgICAgICAgPCEtLSBnb29nbGVfYWRfc2VjdGlvbl9zdGFydCh3ZWlnaHQ9aWdub3JlKSAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9vdGVyLWNvbnRhaW5lciI+CiAgICAgICAgICAgICAgICA8eWVscC1yZWFjdC1yb290PjxkaXYgZGF0YS1oeXBlcm5vdmEta2V5PSJ5ZWxwX21haW5fX2Q4OWY4NmU5YWMzNzc5NzlmMGRjOGIwNGZmOThhZjEzZGQ5N2ZjMDJfX3llbHBfbWFpbl9fRm9vdGVyX19keW5hbWljIiBkYXRhLWh5cGVybm92YS1pZD0iOTM4YTQwZWQtY2M1OS00NGVlLWFhMjItMGM0MjhlNmM2YmVmIj48ZGl2IGNsYXNzPSIgZm9vdGVyX18zNzNjMF9fMVk0dGggYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsgYmFja2dyb3VuZC1jb2xvci0tZ3JheS1leHRyYS1saWdodF9fMzczYzBfXzIzMzJKIj48ZGl2IGNsYXNzPSIgcGFnZS13cmFwcGVyX18zNzNjMF9fM1lPWkoiPjxkaXYgY2xhc3M9IiBhcnJhbmdlX18zNzNjMF9fMmlWV0sgZ3V0dGVyLWF1dG9fXzM3M2MwX18xOGI2QSBsYXlvdXQtZXF1YWxfXzM3M2MwX18xOHN4UCBsYXlvdXQtc3RhY2stc21hbGxfXzM3M2MwX18zN2YwdSBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGRpdiBjbGFzcz0iIGFycmFuZ2UtdW5pdF9fMzczYzBfXzNYUGtFIHJlc3BvbnNpdmUtaGlkZGVuLXNtYWxsX18zNzNjMF9fMWJ1OVIgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxkaXYgY2xhc3M9IiBtYXJnaW4tYjJfXzM3M2MwX18xMTdwQiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PHNwYW4gY2xhc3M9IiBjc3MtMTE4aGJraCIgZGF0YS1mb250LXdlaWdodD0iYm9sZCI+QWJvdXQ8L3NwYW4+PC9kaXY+PHVsIGNsYXNzPSIgdW5kZWZpbmVkIGxpc3RfXzM3M2MwX18xclBydyI+PGxpIGNsYXNzPSIgbWFyZ2luLWIxX18zNzNjMF9fblVJeTYgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnllbHAuY29tL2Fib3V0IiBjbGFzcz0iY3NzLTExZ3ZidHAiPkFib3V0IFllbHA8L2E+PC9saT48bGkgY2xhc3M9IiBtYXJnaW4tYjFfXzM3M2MwX19uVUl5NiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGEgaHJlZj0iaHR0cHM6Ly93d3cueWVscC5jb20vY2FyZWVycy9ob21lIiBjbGFzcz0iY3NzLTExZ3ZidHAiPkNhcmVlcnM8L2E+PC9saT48bGkgY2xhc3M9IiBtYXJnaW4tYjFfXzM3M2MwX19uVUl5NiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGEgaHJlZj0iaHR0cHM6Ly93d3cueWVscC5jb20vcHJlc3MiIGNsYXNzPSJjc3MtMTFndmJ0cCI+UHJlc3M8L2E+PC9saT48bGkgY2xhc3M9IiBtYXJnaW4tYjFfXzM3M2MwX19uVUl5NiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGEgaHJlZj0iaHR0cDovL3llbHAtaXIuY29tLyIgY2xhc3M9ImNzcy0xMWd2YnRwIj5JbnZlc3RvciBSZWxhdGlvbnM8L2E+PC9saT48bGkgY2xhc3M9IiBtYXJnaW4tYjFfXzM3M2MwX19uVUl5NiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGEgaHJlZj0iaHR0cHM6Ly90cnVzdC55ZWxwLmNvbSIgY2xhc3M9ImNzcy0xMWd2YnRwIj5UcnVzdCAmYW1wOyBTYWZldHk8L2E+PC9saT48bGkgY2xhc3M9IiBtYXJnaW4tYjFfXzM3M2MwX19uVUl5NiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGEgaHJlZj0iaHR0cHM6Ly93d3cueWVscC5jb20vZ3VpZGVsaW5lcyIgY2xhc3M9ImNzcy0xMWd2YnRwIj5Db250ZW50IEd1aWRlbGluZXM8L2E+PC9saT48bGkgY2xhc3M9IiBtYXJnaW4tYjFfXzM3M2MwX19uVUl5NiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGEgaHJlZj0iaHR0cHM6Ly93d3cueWVscC1zdXBwb3J0LmNvbS9hcnRpY2xlL1llbHAtQWNjZXNzaWJpbGl0eS1TdGF0ZW1lbnQiIGNsYXNzPSJjc3MtMTFndmJ0cCI+QWNjZXNzaWJpbGl0eSBTdGF0ZW1lbnQ8L2E+PC9saT48bGkgY2xhc3M9IiBtYXJnaW4tYjFfXzM3M2MwX19uVUl5NiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGEgaHJlZj0iaHR0cHM6Ly93d3cueWVscC5jb20vc3RhdGljP3A9dG9zIiBjbGFzcz0iY3NzLTExZ3ZidHAiPlRlcm1zIG9mIFNlcnZpY2U8L2E+PC9saT48bGkgY2xhc3M9IiBtYXJnaW4tYjFfXzM3M2MwX19uVUl5NiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGEgaHJlZj0iaHR0cHM6Ly93d3cueWVscC5jb20vdG9zL3ByaXZhY3lfcG9saWN5IiBjbGFzcz0iY3NzLTExZ3ZidHAiPlByaXZhY3kgUG9saWN5PC9hPjwvbGk+PGxpIGNsYXNzPSIgbWFyZ2luLWIxX18zNzNjMF9fblVJeTYgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnllbHAuY29tL3N0YXRpYz9wPXRvcyN0aGlyZC1wYXJ0aWVzIiBjbGFzcz0iY3NzLTExZ3ZidHAiPkFkIENob2ljZXM8L2E+PC9saT48L3VsPjwvZGl2PjxkaXYgY2xhc3M9IiBhcnJhbmdlLXVuaXRfXzM3M2MwX18zWFBrRSByZXNwb25zaXZlLWhpZGRlbi1zbWFsbF9fMzczYzBfXzFidTlSIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIj48ZGl2IGNsYXNzPSIgbWFyZ2luLWIyX18zNzNjMF9fMTE3cEIgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxzcGFuIGNsYXNzPSIgY3NzLTExOGhia2giIGRhdGEtZm9udC13ZWlnaHQ9ImJvbGQiPkRpc2NvdmVyPC9zcGFuPjwvZGl2Pjx1bCBjbGFzcz0iIHVuZGVmaW5lZCBsaXN0X18zNzNjMF9fMXJQcnciPjxsaSBjbGFzcz0iIG1hcmdpbi1iMV9fMzczYzBfX25VSXk2IGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIj48YSBocmVmPSJodHRwczovL3d3dy55ZWxwLmNvbS9jb3N0cyIgY2xhc3M9ImNzcy0xMWd2YnRwIj5ZZWxwIFByb2plY3QgQ29zdCBHdWlkZXM8L2E+PC9saT48bGkgY2xhc3M9IiBtYXJnaW4tYjFfXzM3M2MwX19uVUl5NiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGEgaHJlZj0iaHR0cHM6Ly93d3cueWVscC5jb20vY29sbGVjdGlvbnMiIGNsYXNzPSJjc3MtMTFndmJ0cCI+Q29sbGVjdGlvbnM8L2E+PC9saT48bGkgY2xhc3M9IiBtYXJnaW4tYjFfXzM3M2MwX19uVUl5NiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGEgaHJlZj0iaHR0cHM6Ly93d3cueWVscC5jb20vdGFsayIgY2xhc3M9ImNzcy0xMWd2YnRwIj5UYWxrPC9hPjwvbGk+PGxpIGNsYXNzPSIgbWFyZ2luLWIxX18zNzNjMF9fblVJeTYgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnllbHAuY29tL2V2ZW50cyIgY2xhc3M9ImNzcy0xMWd2YnRwIj5FdmVudHM8L2E+PC9saT48bGkgY2xhc3M9IiBtYXJnaW4tYjFfXzM3M2MwX19uVUl5NiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGEgaHJlZj0iaHR0cHM6Ly93d3cueWVscC5jb20vbG9jYWxfeWVscCIgY2xhc3M9ImNzcy0xMWd2YnRwIj5UaGUgTG9jYWwgWWVscDwvYT48L2xpPjxsaSBjbGFzcz0iIG1hcmdpbi1iMV9fMzczYzBfX25VSXk2IGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIj48YSBocmVmPSJodHRwczovL29mZmljaWFsYmxvZy55ZWxwLmNvbS8iIGNsYXNzPSJjc3MtMTFndmJ0cCI+WWVscCBCbG9nPC9hPjwvbGk+PGxpIGNsYXNzPSIgbWFyZ2luLWIxX18zNzNjMF9fblVJeTYgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnllbHAtc3VwcG9ydC5jb20vIiBjbGFzcz0iY3NzLTExZ3ZidHAiPlN1cHBvcnQ8L2E+PC9saT48bGkgY2xhc3M9IiBtYXJnaW4tYjFfXzM3M2MwX19uVUl5NiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGEgaHJlZj0iaHR0cHM6Ly93d3cueWVscC5jb20veWVscG1vYmlsZT9zb3VyY2U9Zm9vdGVyIiBjbGFzcz0iY3NzLTExZ3ZidHAiPlllbHAgTW9iaWxlPC9hPjwvbGk+PGxpIGNsYXNzPSIgbWFyZ2luLWIxX18zNzNjMF9fblVJeTYgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnllbHAuY29tL2RldmVsb3BlcnM/Y291bnRyeT1VUyIgY2xhc3M9ImNzcy0xMWd2YnRwIj5EZXZlbG9wZXJzPC9hPjwvbGk+PGxpIGNsYXNzPSIgbWFyZ2luLWIxX18zNzNjMF9fblVJeTYgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnllbHAuY29tL3JzcyIgY2xhc3M9ImNzcy0xMWd2YnRwIj5SU1M8L2E+PC9saT48L3VsPjwvZGl2PjxkaXYgY2xhc3M9IiBhcnJhbmdlLXVuaXRfXzM3M2MwX18zWFBrRSByZXNwb25zaXZlLWhpZGRlbi1zbWFsbF9fMzczYzBfXzFidTlSIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIj48ZGl2IGNsYXNzPSIgbWFyZ2luLWIyX18zNzNjMF9fMTE3cEIgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxzcGFuIGNsYXNzPSIgY3NzLTExOGhia2giIGRhdGEtZm9udC13ZWlnaHQ9ImJvbGQiPlllbHAgZm9yIEJ1c2luZXNzPC9zcGFuPjwvZGl2Pjx1bCBjbGFzcz0iIHVuZGVmaW5lZCBsaXN0X18zNzNjMF9fMXJQcnciPjxsaSBjbGFzcz0iIG1hcmdpbi1iMV9fMzczYzBfX25VSXk2IGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIj48YSBocmVmPSJodHRwczovL2Jpei55ZWxwLmNvbT91dG1fc291cmNlPWZvb3RlciZhbXA7dXRtX21lZGl1bT13d3cmYW1wO3V0bV9jb250ZW50PWNsYWltX2Zvb3Rlcl9saW5rJmFtcDt1dG1fY2FtcGFpZ249Y2xhaW1fYnVzaW5lc3MiIGNsYXNzPSJjc3MtMTFndmJ0cCI+Q2xhaW0geW91ciBCdXNpbmVzcyBQYWdlPC9hPjwvbGk+PGxpIGNsYXNzPSIgbWFyZ2luLWIxX18zNzNjMF9fblVJeTYgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnllbHAuY29tL2FkdmVydGlzZSIgY2xhc3M9ImNzcy0xMWd2YnRwIj5BZHZlcnRpc2Ugb24gWWVscDwvYT48L2xpPjxsaSBjbGFzcz0iIG1hcmdpbi1iMV9fMzczYzBfX25VSXk2IGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIj48YSBocmVmPSJodHRwczovL3Jlc3RhdXJhbnRzLnllbHAuY29tLyIgY2xhc3M9ImNzcy0xMWd2YnRwIj5ZZWxwIGZvciBSZXN0YXVyYW50IE93bmVyczwvYT48L2xpPjxsaSBjbGFzcz0iIG1hcmdpbi1iMV9fMzczYzBfX25VSXk2IGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIj48YSBocmVmPSJodHRwczovL3Jlc3RhdXJhbnRzLnllbHAuY29tL3Byb2R1Y3RzL3dhaXRsaXN0LXRhYmxlLW1hbmFnZW1lbnQtc29mdHdhcmUvIiBjbGFzcz0iY3NzLTExZ3ZidHAiPlRhYmxlIE1hbmFnZW1lbnQ8L2E+PC9saT48bGkgY2xhc3M9IiBtYXJnaW4tYjFfXzM3M2MwX19uVUl5NiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGEgaHJlZj0iaHR0cHM6Ly9iaXoueWVscC5jb20vc3VwcG9ydC9jYXNlX3N0dWRpZXMiIGNsYXNzPSJjc3MtMTFndmJ0cCI+QnVzaW5lc3MgU3VjY2VzcyBTdG9yaWVzPC9hPjwvbGk+PGxpIGNsYXNzPSIgbWFyZ2luLWIxX18zNzNjMF9fblVJeTYgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnllbHAtc3VwcG9ydC5jb20vWWVscF9mb3JfQnVzaW5lc3M/bD1lbl9VUyIgY2xhc3M9ImNzcy0xMWd2YnRwIj5CdXNpbmVzcyBTdXBwb3J0PC9hPjwvbGk+PGxpIGNsYXNzPSIgbWFyZ2luLWIxX18zNzNjMF9fblVJeTYgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnllbHBibG9nLmNvbS9zZWN0aW9uL2J1c2luZXNzIiBjbGFzcz0iY3NzLTExZ3ZidHAiPlllbHAgQmxvZyBmb3IgQnVzaW5lc3M8L2E+PC9saT48L3VsPjwvZGl2PjxkaXYgY2xhc3M9IiBhcnJhbmdlLXVuaXRfXzM3M2MwX18zWFBrRSBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayIgZGF0YS10ZXN0aWQ9ImNvbnN1bWVyX2Zvb3Rlcl9ub3JtYWwiPjxkaXYgY2xhc3M9IiBtYXJnaW4tYjJfXzM3M2MwX18xMTdwQiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PHNwYW4gY2xhc3M9IiBjc3MtMTE4aGJraCIgZGF0YS1mb250LXdlaWdodD0iYm9sZCI+TGFuZ3VhZ2VzPC9zcGFuPjxkaXYgY2xhc3M9IiBwYWRkaW5nLXQxX18zNzNjMF9fM3JZZ0ggYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxkaXYgY2xhc3M9IiBkcm9wZG93bl9fMzczYzBfXzEwVlBOIiByb2xlPSJwcmVzZW50YXRpb24iPjxkaXY+PHNwYW4gY2xhc3M9IiBkaXNwbGF5LS1pbmxpbmVfXzM3M2MwX18zMVNDRiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PHNwYW4gY2xhc3M9IiBjc3Mtd2M1ZWRkIj48YSBocmVmPSIiIGNsYXNzPSJjc3MtMWN1YXppZyIgYXJpYS1leHBhbmRlZD0iZmFsc2UiIGFyaWEtaGFzcG9wdXA9Imxpc3Rib3giIHJvbGU9ImJ1dHRvbiI+PHNwYW4gY2xhc3M9IiBkaXNwbGF5LS1pbmxpbmVfXzM3M2MwX18zMVNDRiBtYXJnaW4tcjAtNV9fMzczYzBfXzJNTmtUIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIj48c3BhbiBjbGFzcz0iIGNzcy01dm5xZTIiPkVuZ2xpc2g8L3NwYW4+PC9zcGFuPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBjbGFzcz0iaWNvbi0tMTYtY2hldnJvbi1kb3duLXYyIGNzcy0xbXJ4ZHluIj48c3ZnIHdpZHRoPSIxNiIgaGVpZ2h0PSIxNiIgY2xhc3M9Imljb25fc3ZnIj48cGF0aCBkPSJNOCAxMC4yNWEuNzQ2Ljc0NiAwIDAxLS41MjUtLjIxNWwtMy4wNTUtM2EuNzUuNzUgMCAwMTEuMDUtMS4wN0w4IDguNDQ5bDIuNTMtMi40ODRhLjc1Ljc1IDAgMDExLjA1IDEuMDdsLTMuMDU1IDNBLjc0Ni43NDYgMCAwMTggMTAuMjV6Ii8+PC9zdmc+PC9zcGFuPjwvYT48L3NwYW4+PC9zcGFuPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9IiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PHNwYW4gY2xhc3M9IiBjc3MtMTE4aGJraCIgZGF0YS1mb250LXdlaWdodD0iYm9sZCI+Q291bnRyaWVzPC9zcGFuPjxkaXYgY2xhc3M9IiBwYWRkaW5nLXQxX18zNzNjMF9fM3JZZ0ggYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxkaXYgY2xhc3M9IiBkcm9wZG93bl9fMzczYzBfXzEwVlBOIiByb2xlPSJwcmVzZW50YXRpb24iPjxkaXY+PHNwYW4gY2xhc3M9IiBkaXNwbGF5LS1pbmxpbmVfXzM3M2MwX18zMVNDRiBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PHNwYW4gY2xhc3M9IiBjc3Mtd2M1ZWRkIj48YSBocmVmPSIiIGNsYXNzPSJjc3MtMWN1YXppZyIgYXJpYS1leHBhbmRlZD0iZmFsc2UiIGFyaWEtaGFzcG9wdXA9Imxpc3Rib3giIHJvbGU9ImJ1dHRvbiI+PHNwYW4gY2xhc3M9IiBkaXNwbGF5LS1pbmxpbmVfXzM3M2MwX18zMVNDRiBtYXJnaW4tcjAtNV9fMzczYzBfXzJNTmtUIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIj48c3BhbiBjbGFzcz0iIGNzcy01dm5xZTIiPlVuaXRlZCBTdGF0ZXM8L3NwYW4+PC9zcGFuPjxzcGFuIGFyaWEtaGlkZGVuPSJ0cnVlIiBjbGFzcz0iaWNvbi0tMTYtY2hldnJvbi1kb3duLXYyIGNzcy0xbXJ4ZHluIj48c3ZnIHdpZHRoPSIxNiIgaGVpZ2h0PSIxNiIgY2xhc3M9Imljb25fc3ZnIj48cGF0aCBkPSJNOCAxMC4yNWEuNzQ2Ljc0NiAwIDAxLS41MjUtLjIxNWwtMy4wNTUtM2EuNzUuNzUgMCAwMTEuMDUtMS4wN0w4IDguNDQ5bDIuNTMtMi40ODRhLjc1Ljc1IDAgMDExLjA1IDEuMDdsLTMuMDU1IDNBLjc0Ni43NDYgMCAwMTggMTAuMjV6Ii8+PC9zdmc+PC9zcGFuPjwvYT48L3NwYW4+PC9zcGFuPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9IiBkaXNwbGF5LS1ub25lX18zNzNjMF9fM2NPdXUgcmVzcG9uc2l2ZS1zbWFsbC1kaXNwbGF5LWJsb2NrX18zNzNjMF9fN1BDamkgcGFkZGluZy10NF9fMzczYzBfX1FkSzRNIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIj48dWwgY2xhc3M9IiI+PGxpIGNsYXNzPSIgbW9iaWxlLWxpc3QtaXRlbV9fMzczYzBfXzMtUnBIIj48c3BhbiBjbGFzcz0iIGNzcy0xMXVjNnNpIj48ZGl2IGNsYXNzPSIgZGlzcGxheS0taW5saW5lLWJsb2NrX18zNzNjMF9fMU9lNmwgcGFkZGluZy1yMC01X18zNzNjMF9fMldTMlYgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnllbHAuY29tL2Fib3V0IiBjbGFzcz0iY3NzLTUzYzE4OCI+QWJvdXQ8L2E+PC9kaXY+PC9zcGFuPjwvbGk+PGxpIGNsYXNzPSIgbW9iaWxlLWxpc3QtaXRlbV9fMzczYzBfXzMtUnBIIj48c3BhbiBjbGFzcz0iIGNzcy0xMXVjNnNpIj48ZGl2IGNsYXNzPSIgZGlzcGxheS0taW5saW5lLWJsb2NrX18zNzNjMF9fMU9lNmwgcGFkZGluZy1yMC01X18zNzNjMF9fMldTMlYgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxhIGhyZWY9Imh0dHBzOi8vb2ZmaWNpYWxibG9nLnllbHAuY29tLyIgY2xhc3M9ImNzcy01M2MxODgiPkJsb2c8L2E+PC9kaXY+PC9zcGFuPjwvbGk+PGxpIGNsYXNzPSIgbW9iaWxlLWxpc3QtaXRlbV9fMzczYzBfXzMtUnBIIj48c3BhbiBjbGFzcz0iIGNzcy0xMXVjNnNpIj48ZGl2IGNsYXNzPSIgZGlzcGxheS0taW5saW5lLWJsb2NrX18zNzNjMF9fMU9lNmwgcGFkZGluZy1yMC01X18zNzNjMF9fMldTMlYgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnllbHAtc3VwcG9ydC5jb20vIiBjbGFzcz0iY3NzLTUzYzE4OCI+U3VwcG9ydDwvYT48L2Rpdj48L3NwYW4+PC9saT48bGkgY2xhc3M9IiBtb2JpbGUtbGlzdC1pdGVtX18zNzNjMF9fMy1ScEgiPjxzcGFuIGNsYXNzPSIgY3NzLTExdWM2c2kiPjxkaXYgY2xhc3M9IiBkaXNwbGF5LS1pbmxpbmUtYmxvY2tfXzM3M2MwX18xT2U2bCBwYWRkaW5nLXIwLTVfXzM3M2MwX18yV1MyViBib3JkZXItY29sb3ItLWRlZmF1bHRfXzM3M2MwX19yMzA1ayI+PGEgaHJlZj0iaHR0cHM6Ly93d3cueWVscC5jb20vc3RhdGljP3A9dG9zIiBjbGFzcz0iY3NzLTUzYzE4OCI+VGVybXM8L2E+PC9kaXY+PC9zcGFuPjwvbGk+PGxpIGNsYXNzPSIgbW9iaWxlLWxpc3QtaXRlbV9fMzczYzBfXzMtUnBIIj48c3BhbiBjbGFzcz0iIGNzcy0xeDJrYXd2Ij48ZGl2IGNsYXNzPSIgZGlzcGxheS0taW5saW5lLWJsb2NrX18zNzNjMF9fMU9lNmwgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnllbHAuY29tL3Rvcy9wcml2YWN5X3BvbGljeSIgY2xhc3M9ImNzcy01M2MxODgiPlByaXZhY3kgUG9saWN5PC9hPjwvZGl2Pjwvc3Bhbj48L2xpPjwvdWw+PC9kaXY+PGRpdiBjbGFzcz0iIG1hcmdpbi10Nl9fMzczYzBfX0tNLUF1IG1hcmdpbi1zbS10M19fMzczYzBfXzM2aHpFIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIj48ZGl2IGNsYXNzPSIgYm9yZGVyLWNvbG9yLS1kZWZhdWx0X18zNzNjMF9fcjMwNWsiPjxwIGNsYXNzPSIgY3NzLTFiaGdqZ3ciPkNvcHlyaWdodCDCqSAyMDA04oCTMjAyMiBZZWxwIEluYy4gWWVscCw8IS0tIC0tPiA8aW1nIGNsYXNzPSIgYWxpZ24tYm90dG9tX18zNzNjMF9fM3lraUkiIHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzL3NydjAveWVscF9kZXNpZ25fY2RuLzdlZjcxYmY3N2EzMy9hc3NldHMvaW1nL2JyYW5kL2xvZ29fZGVza3RvcC5zdmciIGFsdD0iWWVscCBsb2dvIiB3aWR0aD0iMzgiIGhlaWdodD0iMTkiLz4sIDwhLS0gLS0+IDxpbWcgY2xhc3M9IiBidXJzdF9fMzczYzBfXzNvY3gzIiBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2Fzc2V0cy9zcnYwL3llbHBfZGVzaWduX2Nkbi9jYWJjZWYxZGFlYTIvYXNzZXRzL2ltZy9icmFuZC9idXJzdF9yZWQuc3ZnIiBhbHQ9IlllbHAgYnVyc3QiIHdpZHRoPSIxNCIgaGVpZ2h0PSIxNiIvPiA8IS0tIC0tPmFuZCByZWxhdGVkIG1hcmtzIGFyZSByZWdpc3RlcmVkIHRyYWRlbWFya3Mgb2YgWWVscC48L3A+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz0iIG1hcmdpbi10Nl9fMzczYzBfX0tNLUF1IG1hcmdpbi1zbS10M19fMzczYzBfXzM2aHpFIGJvcmRlci1jb2xvci0tZGVmYXVsdF9fMzczYzBfX3IzMDVrIj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj4KPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qc29uIiBkYXRhLWh5cGVybm92YS1rZXk9InllbHBfbWFpbl9fZDg5Zjg2ZTlhYzM3Nzk3OWYwZGM4YjA0ZmY5OGFmMTNkZDk3ZmMwMl9feWVscF9tYWluX19Gb290ZXJfX2R5bmFtaWMiIGRhdGEtaHlwZXJub3ZhLWlkPSI5MzhhNDBlZC1jYzU5LTQ0ZWUtYWEyMi0wYzQyOGU2YzZiZWYiPjwhLS17ImJhc2VVcmwiOiJodHRwczovL3d3dy55ZWxwLmNvbS8iLCJjdXJyZW50VXJsIjoiaHR0cHM6Ly93d3cueWVscC5jb20vbWVudS9ub29kbGVzLWV4cHJlc3MtZGVudmVyIiwibG9jYWxlQ29kZSI6ImVuX1VTIiwibG9jYXRpb25Db29raWVDb3VudHJ5Q29kZSI6IlVTIiwibWVzc2FnZXMiOnsiPGEgJXtoY2FwdGNoYV9pbmZvfSZndDtUaGlzIHNpdGUgaXMgcHJvdGVjdGVkIGJ5IGhDYXB0Y2hhIC0gPC9hJmd0OyA8YSAle2hjYXB0Y2hhX3BwfSZndDtTZWUgYWRkaXRpb25hbCBQcml2YWN5IFBvbGljeTwvYSZndDsgPGEgJXtoY2FwdGNoYV90b3N9Jmd0O2FuZCBUZXJtczwvYSZndDsiOiI8YSAle2hjYXB0Y2hhX2luZm99Jmd0O1RoaXMgc2l0ZSBpcyBwcm90ZWN0ZWQgYnkgaENhcHRjaGEgLSA8L2EmZ3Q7IDxhICV7aGNhcHRjaGFfcHB9Jmd0O1NlZSBhZGRpdGlvbmFsIFByaXZhY3kgUG9saWN5PC9hJmd0OyA8YSAle2hjYXB0Y2hhX3Rvc30mZ3Q7YW5kIFRlcm1zPC9hJmd0OyIsIjxhICV7cmVjYXB0Y2hhX2luZm99Jmd0O1RoaXMgc2l0ZSBpcyBwcm90ZWN0ZWQgYnkgcmVDQVBUQ0hBIC08L2EmZ3Q7IDxhICV7Z29vZ2xlX3BwfSZndDtTZWUgYWRkaXRpb25hbCBQcml2YWN5IFBvbGljeTwvYSZndDsgPGEgJXtnb29nbGVfdG9zfSZndDthbmQgVGVybXM8L2EmZ3Q7IjoiPGEgJXtyZWNhcHRjaGFfaW5mb30mZ3Q7VGhpcyBzaXRlIGlzIHByb3RlY3RlZCBieSByZUNBUFRDSEEgLTwvYSZndDsgPGEgJXtnb29nbGVfcHB9Jmd0O1NlZSBhZGRpdGlvbmFsIFByaXZhY3kgUG9saWN5PC9hJmd0OyA8YSAle2dvb2dsZV90b3N9Jmd0O2FuZCBUZXJtczwvYSZndDsiLCI8b2wmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7QXQgdGhlIHRvcCBvZiB5b3VyIENocm9tZSB3aW5kb3csIG5lYXIgdGhlIHdlYiBhZGRyZXNzLCBjbGljayA8YiZndDt0aGUgZ3JheSBsb2NrIGljb248L2ImZ3Q7LjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7SW4gdGhlIHdpbmRvdyB0aGF0IHBvcHMgdXAsIG1ha2Ugc3VyZSA8YiZndDtMb2NhdGlvbjwvYiZndDsgaXMgc2V0IHRvIDxiJmd0O0FzayAoZGVmYXVsdCk8L2ImZ3Q7IG9yIDxiJmd0O0FsbG93PC9iJmd0Oy48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O1lvdSdyZSBnb29kIHRvIGdvISBSZWxvYWQgdGhpcyBZZWxwIHBhZ2UgYW5kIHRyeSB5b3VyIHNlYXJjaCBhZ2Fpbi48L2xpJmd0O1xuICAgICAgICA8L29sJmd0O1xuICAgICAgICA8cCZndDtcbiAgICAgICAgICAgIElmIHlvdSdyZSBzdGlsbCBoYXZpbmcgdHJvdWJsZSwgY2hlY2sgb3V0IDxhIGhyZWY9XCJodHRwczovL3N1cHBvcnQuZ29vZ2xlLmNvbS9jaHJvbWUvYW5zd2VyLzE0MjA2NT9jbz1HRU5JRS5QbGF0Zm9ybSUzRERlc2t0b3AmYW1wO2hsPWVuJmFtcDtvY289MFwiIHRhcmdldD1cIl9ibGFua1wiJmd0O0dvb2dsZSdzIHN1cHBvcnQgcGFnZTwvYSZndDsuXG4gICAgICAgICAgICBZb3UgY2FuIGFsc28gc2VhcmNoIG5lYXIgYSBjaXR5LCBwbGFjZSwgb3IgYWRkcmVzcyBpbnN0ZWFkLlxuICAgICAgICA8L3AmZ3Q7IjoiPG9sJmd0O1xuICAgICAgICAgICAgPGxpJmd0O0F0IHRoZSB0b3Agb2YgeW91ciBDaHJvbWUgd2luZG93LCBuZWFyIHRoZSB3ZWIgYWRkcmVzcywgY2xpY2sgPGImZ3Q7dGhlIGdyYXkgbG9jayBpY29uPC9iJmd0Oy48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O0luIHRoZSB3aW5kb3cgdGhhdCBwb3BzIHVwLCBtYWtlIHN1cmUgPGImZ3Q7TG9jYXRpb248L2ImZ3Q7IGlzIHNldCB0byA8YiZndDtBc2sgKGRlZmF1bHQpPC9iJmd0OyBvciA8YiZndDtBbGxvdzwvYiZndDsuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtZb3UncmUgZ29vZCB0byBnbyEgUmVsb2FkIHRoaXMgWWVscCBwYWdlIGFuZCB0cnkgeW91ciBzZWFyY2ggYWdhaW4uPC9saSZndDtcbiAgICAgICAgPC9vbCZndDtcbiAgICAgICAgPHAmZ3Q7XG4gICAgICAgICAgICBJZiB5b3UncmUgc3RpbGwgaGF2aW5nIHRyb3VibGUsIGNoZWNrIG91dCA8YSBocmVmPVwiaHR0cHM6Ly9zdXBwb3J0Lmdvb2dsZS5jb20vY2hyb21lL2Fuc3dlci8xNDIwNjU/Y289R0VOSUUuUGxhdGZvcm0lM0REZXNrdG9wJmFtcDtobD1lbiZhbXA7b2NvPTBcIiB0YXJnZXQ9XCJfYmxhbmtcIiZndDtHb29nbGUncyBzdXBwb3J0IHBhZ2U8L2EmZ3Q7LlxuICAgICAgICAgICAgWW91IGNhbiBhbHNvIHNlYXJjaCBuZWFyIGEgY2l0eSwgcGxhY2UsIG9yIGFkZHJlc3MgaW5zdGVhZC5cbiAgICAgICAgPC9wJmd0OyIsIjxvbCZndDtcbiAgICAgICAgICAgIDxsaSZndDtBdCB0aGUgdG9wIG9mIHlvdXIgRmlyZWZveCB3aW5kb3csIHRvIHRoZSBsZWZ0IG9mIHRoZSB3ZWIgYWRkcmVzcywgeW91IHNob3VsZCBzZWUgYSA8YiZndDtncmVlbiBsb2NrPC9iJmd0Oy4gQ2xpY2sgaXQuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtJbiB0aGUgd2luZG93IHRoYXQgcG9wcyB1cCwgeW91IHNob3VsZCBzZWUgPGImZ3Q7QmxvY2tlZDwvYiZndDsgb3IgPGImZ3Q7QmxvY2tlZCBUZW1wb3JhcmlseTwvYiZndDsgbmV4dCB0byA8YiZndDtBY2Nlc3MgWW91ciBMb2NhdGlvbjwvYiZndDsuIENsaWNrIHRoZSA8YiZndDt4PC9iJmd0OyBuZXh0IHRvIHRoaXMgbGluZS48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O1lvdSdyZSBnb29kIHRvIGdvISBSZWZyZXNoIHRoaXMgWWVscCBwYWdlIGFuZCB0cnkgeW91ciBzZWFyY2ggYWdhaW4uPC9saSZndDtcbiAgICAgICAgPC9vbCZndDtcbiAgICAgICAgPHAmZ3Q7XG4gICAgICAgICAgICBJZiB5b3UncmUgc3RpbGwgaGF2aW5nIHRyb3VibGUsIGNoZWNrIG91dCA8YSBocmVmPVwiaHR0cHM6Ly93d3cubW96aWxsYS5vcmcvZW4tVVMvZmlyZWZveC9nZW9sb2NhdGlvbi9cIiB0YXJnZXQ9XCJfYmxhbmtcIiZndDtGaXJlZm94J3Mgc3VwcG9ydCBwYWdlPC9hJmd0Oy5cbiAgICAgICAgICAgIFlvdSBjYW4gYWxzbyBzZWFyY2ggbmVhciBhIGNpdHksIHBsYWNlLCBvciBhZGRyZXNzIGluc3RlYWQuXG4gICAgICAgIDwvcCZndDsiOiI8b2wmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7QXQgdGhlIHRvcCBvZiB5b3VyIEZpcmVmb3ggd2luZG93LCB0byB0aGUgbGVmdCBvZiB0aGUgd2ViIGFkZHJlc3MsIHlvdSBzaG91bGQgc2VlIGEgPGImZ3Q7Z3JlZW4gbG9jazwvYiZndDsuIENsaWNrIGl0LjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7SW4gdGhlIHdpbmRvdyB0aGF0IHBvcHMgdXAsIHlvdSBzaG91bGQgc2VlIDxiJmd0O0Jsb2NrZWQ8L2ImZ3Q7IG9yIDxiJmd0O0Jsb2NrZWQgVGVtcG9yYXJpbHk8L2ImZ3Q7IG5leHQgdG8gPGImZ3Q7QWNjZXNzIFlvdXIgTG9jYXRpb248L2ImZ3Q7LiBDbGljayB0aGUgPGImZ3Q7eDwvYiZndDsgbmV4dCB0byB0aGlzIGxpbmUuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtZb3UncmUgZ29vZCB0byBnbyEgUmVmcmVzaCB0aGlzIFllbHAgcGFnZSBhbmQgdHJ5IHlvdXIgc2VhcmNoIGFnYWluLjwvbGkmZ3Q7XG4gICAgICAgIDwvb2wmZ3Q7XG4gICAgICAgIDxwJmd0O1xuICAgICAgICAgICAgSWYgeW91J3JlIHN0aWxsIGhhdmluZyB0cm91YmxlLCBjaGVjayBvdXQgPGEgaHJlZj1cImh0dHBzOi8vd3d3Lm1vemlsbGEub3JnL2VuLVVTL2ZpcmVmb3gvZ2VvbG9jYXRpb24vXCIgdGFyZ2V0PVwiX2JsYW5rXCImZ3Q7RmlyZWZveCdzIHN1cHBvcnQgcGFnZTwvYSZndDsuXG4gICAgICAgICAgICBZb3UgY2FuIGFsc28gc2VhcmNoIG5lYXIgYSBjaXR5LCBwbGFjZSwgb3IgYWRkcmVzcyBpbnN0ZWFkLlxuICAgICAgICA8L3AmZ3Q7IiwiPG9sJmd0O1xuICAgICAgICAgICAgPGxpJmd0O0F0IHRoZSB0b3Agb2YgeW91ciBPcGVyYSB3aW5kb3csIG5lYXIgdGhlIHdlYiBhZGRyZXNzLCB5b3Ugc2hvdWxkIHNlZSBhIDxiJmd0O2dyYXkgbG9jYXRpb24gcGluPC9iJmd0Oy4gQ2xpY2sgaXQuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtJbiB0aGUgd2luZG93IHRoYXQgcG9wcyB1cCwgY2xpY2sgPGImZ3Q7Q2xlYXIgVGhpcyBTZXR0aW5nPC9iJmd0OzwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7WW91J3JlIGdvb2QgdG8gZ28hIFJlbG9hZCB0aGlzIFllbHAgcGFnZSBhbmQgdHJ5IHlvdXIgc2VhcmNoIGFnYWluLjwvbGkmZ3Q7XG4gICAgICAgIDwvb2wmZ3Q7XG4gICAgICAgIDxwJmd0O1xuICAgICAgICAgICAgSWYgeW91J3JlIHN0aWxsIGhhdmluZyB0cm91YmxlLCBjaGVjayBvdXQgPGEgaHJlZj1cImh0dHBzOi8vaGVscC5vcGVyYS5jb20vZW4vcHJlc3RvL2NvbnRyb2wtcGFnZXMvI2dlb2xvY2F0aW9uXCIgdGFyZ2V0PVwiX2JsYW5rXCImZ3Q7T3BlcmEncyBzdXBwb3J0IHBhZ2U8L2EmZ3Q7LlxuICAgICAgICAgICAgWW91IGNhbiBhbHNvIHNlYXJjaCBuZWFyIGEgY2l0eSwgcGxhY2UsIG9yIGFkZHJlc3MgaW5zdGVhZC5cbiAgICAgICAgPC9wJmd0OyI6IjxvbCZndDtcbiAgICAgICAgICAgIDxsaSZndDtBdCB0aGUgdG9wIG9mIHlvdXIgT3BlcmEgd2luZG93LCBuZWFyIHRoZSB3ZWIgYWRkcmVzcywgeW91IHNob3VsZCBzZWUgYSA8YiZndDtncmF5IGxvY2F0aW9uIHBpbjwvYiZndDsuIENsaWNrIGl0LjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7SW4gdGhlIHdpbmRvdyB0aGF0IHBvcHMgdXAsIGNsaWNrIDxiJmd0O0NsZWFyIFRoaXMgU2V0dGluZzwvYiZndDs8L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O1lvdSdyZSBnb29kIHRvIGdvISBSZWxvYWQgdGhpcyBZZWxwIHBhZ2UgYW5kIHRyeSB5b3VyIHNlYXJjaCBhZ2Fpbi48L2xpJmd0O1xuICAgICAgICA8L29sJmd0O1xuICAgICAgICA8cCZndDtcbiAgICAgICAgICAgIElmIHlvdSdyZSBzdGlsbCBoYXZpbmcgdHJvdWJsZSwgY2hlY2sgb3V0IDxhIGhyZWY9XCJodHRwczovL2hlbHAub3BlcmEuY29tL2VuL3ByZXN0by9jb250cm9sLXBhZ2VzLyNnZW9sb2NhdGlvblwiIHRhcmdldD1cIl9ibGFua1wiJmd0O09wZXJhJ3Mgc3VwcG9ydCBwYWdlPC9hJmd0Oy5cbiAgICAgICAgICAgIFlvdSBjYW4gYWxzbyBzZWFyY2ggbmVhciBhIGNpdHksIHBsYWNlLCBvciBhZGRyZXNzIGluc3RlYWQuXG4gICAgICAgIDwvcCZndDsiLCI8b2wmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7QXQgdGhlIHRvcC1yaWdodCBoYW5kIGNvcm5lciBvZiB0aGUgd2luZG93LCBjbGljayB0aGUgPGImZ3Q7YnV0dG9uIHdpdGggdGhyZWUgZG90cyBvbiBpdDwvYiZndDssIHRoZW4gPGImZ3Q7U2V0dGluZ3M8L2ImZ3Q7LjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7Q2xpY2sgPGImZ3Q7Q2hvb3NlIHdoYXQgdG8gY2xlYXI8L2ImZ3Q7IHVuZGVybmVhdGggPGImZ3Q7Q2xlYXIgYnJvd3NpbmcgZGF0YTwvYiZndDsuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtDbGljayA8YiZndDtTaG93IG1vcmU8L2ImZ3Q7LCB0aGVuIG1ha2Ugc3VyZSBvbmx5IHRoZSBib3ggbGFiZWxlZCA8YiZndDtMb2NhdGlvbiBwZXJtaXNzaW9uczwvYiZndDsgaXMgY2hlY2tlZC48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O0NsaWNrIDxiJmd0O0NsZWFyPC9iJmd0Oy48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O1lvdSdyZSBnb29kIHRvIGdvISBSZWZyZXNoIHRoaXMgWWVscCBwYWdlIGFuZCB0cnkgeW91ciBzZWFyY2ggYWdhaW4uPC9saSZndDtcbiAgICAgICAgPC9vbCZndDtcbiAgICAgICAgPHAmZ3Q7XG4gICAgICAgICAgICBZb3UgY2FuIGFsc28gc2VhcmNoIG5lYXIgYSBjaXR5LCBwbGFjZSwgb3IgYWRkcmVzcyBpbnN0ZWFkLlxuICAgICAgICA8L3AmZ3Q7IjoiPG9sJmd0O1xuICAgICAgICAgICAgPGxpJmd0O0F0IHRoZSB0b3AtcmlnaHQgaGFuZCBjb3JuZXIgb2YgdGhlIHdpbmRvdywgY2xpY2sgdGhlIDxiJmd0O2J1dHRvbiB3aXRoIHRocmVlIGRvdHMgb24gaXQ8L2ImZ3Q7LCB0aGVuIDxiJmd0O1NldHRpbmdzPC9iJmd0Oy48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O0NsaWNrIDxiJmd0O0Nob29zZSB3aGF0IHRvIGNsZWFyPC9iJmd0OyB1bmRlcm5lYXRoIDxiJmd0O0NsZWFyIGJyb3dzaW5nIGRhdGE8L2ImZ3Q7LjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7Q2xpY2sgPGImZ3Q7U2hvdyBtb3JlPC9iJmd0OywgdGhlbiBtYWtlIHN1cmUgb25seSB0aGUgYm94IGxhYmVsZWQgPGImZ3Q7TG9jYXRpb24gcGVybWlzc2lvbnM8L2ImZ3Q7IGlzIGNoZWNrZWQuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtDbGljayA8YiZndDtDbGVhcjwvYiZndDsuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtZb3UncmUgZ29vZCB0byBnbyEgUmVmcmVzaCB0aGlzIFllbHAgcGFnZSBhbmQgdHJ5IHlvdXIgc2VhcmNoIGFnYWluLjwvbGkmZ3Q7XG4gICAgICAgIDwvb2wmZ3Q7XG4gICAgICAgIDxwJmd0O1xuICAgICAgICAgICAgWW91IGNhbiBhbHNvIHNlYXJjaCBuZWFyIGEgY2l0eSwgcGxhY2UsIG9yIGFkZHJlc3MgaW5zdGVhZC5cbiAgICAgICAgPC9wJmd0OyIsIjxvbCZndDtcbiAgICAgICAgICAgIDxsaSZndDtDbGljayA8YiZndDtTYWZhcmk8L2ImZ3Q7IGluIHRoZSBNZW51IEJhciBhdCB0aGUgdG9wIG9mIHRoZSBzY3JlZW4sIHRoZW4gPGImZ3Q7UHJlZmVyZW5jZXM8L2ImZ3Q7LjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7Q2xpY2sgdGhlIDxiJmd0O1dlYnNpdGVzPC9iJmd0OyB0YWIsIHRoZW4gY2xpY2sgPGImZ3Q7TG9jYXRpb248L2ImZ3Q7IG9uIHRoZSBsZWZ0LWhhbmQgcGFuZWwuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtOZXh0IHRvIDxiJmd0O3llbHAuY29tPC9iJmd0OyBpbiB0aGUgcmlnaHQtaGFuZCBwYW5lbCwgY2hhbmdlIHRoZSBkcm9wZG93biB0byA8YiZndDtBc2s8L2ImZ3Q7IG9yIDxiJmd0O0FsbG93PC9iJmd0Oy48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O01hY09TIG1heSBub3cgcHJvbXB0IHlvdSB0byBlbmFibGUgTG9jYXRpb24gU2VydmljZXMuIElmIGl0IGRvZXMsIGZvbGxvdyBpdHMgaW5zdHJ1Y3Rpb25zIHRvIGVuYWJsZSBMb2NhdGlvbiBTZXJ2aWNlcyBmb3IgU2FmYXJpLjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7Q2xvc2UgdGhlIFNldHRpbmdzIGRpYWxvZyBhbmQgcmVmcmVzaCB0aGUgcGFnZS4gVHJ5IHVzaW5nIEN1cnJlbnQgTG9jYXRpb24gc2VhcmNoIGFnYWluLjwvbGkmZ3Q7XG4gICAgICAgIDwvb2wmZ3Q7XG4gICAgICAgIDxwJmd0O1xuICAgICAgICAgICAgSWYgeW91J3JlIHN0aWxsIGhhdmluZyB0cm91YmxlLCBjaGVjayBvdXQgPGEgaHJlZj1cImh0dHBzOi8vc3VwcG9ydC5hcHBsZS5jb20vZW4tdXMvSFQyMDQ2OTBcIiB0YXJnZXQ9XCJfYmxhbmtcIiZndDtTYWZhcmkncyBzdXBwb3J0IHBhZ2U8L2EmZ3Q7LlxuICAgICAgICAgICAgWW91IGNhbiBhbHNvIHNlYXJjaCBuZWFyIGEgY2l0eSwgcGxhY2UsIG9yIGFkZHJlc3MgaW5zdGVhZC5cbiAgICAgICAgPC9wJmd0OyI6IjxvbCZndDtcbiAgICAgICAgICAgIDxsaSZndDtDbGljayA8YiZndDtTYWZhcmk8L2ImZ3Q7IGluIHRoZSBNZW51IEJhciBhdCB0aGUgdG9wIG9mIHRoZSBzY3JlZW4sIHRoZW4gPGImZ3Q7UHJlZmVyZW5jZXM8L2ImZ3Q7LjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7Q2xpY2sgdGhlIDxiJmd0O1dlYnNpdGVzPC9iJmd0OyB0YWIsIHRoZW4gY2xpY2sgPGImZ3Q7TG9jYXRpb248L2ImZ3Q7IG9uIHRoZSBsZWZ0LWhhbmQgcGFuZWwuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtOZXh0IHRvIDxiJmd0O3llbHAuY29tPC9iJmd0OyBpbiB0aGUgcmlnaHQtaGFuZCBwYW5lbCwgY2hhbmdlIHRoZSBkcm9wZG93biB0byA8YiZndDtBc2s8L2ImZ3Q7IG9yIDxiJmd0O0FsbG93PC9iJmd0Oy48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O01hY09TIG1heSBub3cgcHJvbXB0IHlvdSB0byBlbmFibGUgTG9jYXRpb24gU2VydmljZXMuIElmIGl0IGRvZXMsIGZvbGxvdyBpdHMgaW5zdHJ1Y3Rpb25zIHRvIGVuYWJsZSBMb2NhdGlvbiBTZXJ2aWNlcyBmb3IgU2FmYXJpLjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7Q2xvc2UgdGhlIFNldHRpbmdzIGRpYWxvZyBhbmQgcmVmcmVzaCB0aGUgcGFnZS4gVHJ5IHVzaW5nIEN1cnJlbnQgTG9jYXRpb24gc2VhcmNoIGFnYWluLjwvbGkmZ3Q7XG4gICAgICAgIDwvb2wmZ3Q7XG4gICAgICAgIDxwJmd0O1xuICAgICAgICAgICAgSWYgeW91J3JlIHN0aWxsIGhhdmluZyB0cm91YmxlLCBjaGVjayBvdXQgPGEgaHJlZj1cImh0dHBzOi8vc3VwcG9ydC5hcHBsZS5jb20vZW4tdXMvSFQyMDQ2OTBcIiB0YXJnZXQ9XCJfYmxhbmtcIiZndDtTYWZhcmkncyBzdXBwb3J0IHBhZ2U8L2EmZ3Q7LlxuICAgICAgICAgICAgWW91IGNhbiBhbHNvIHNlYXJjaCBuZWFyIGEgY2l0eSwgcGxhY2UsIG9yIGFkZHJlc3MgaW5zdGVhZC5cbiAgICAgICAgPC9wJmd0OyIsIjxvbCZndDtcbiAgICAgICAgICAgIDxsaSZndDtDbGljayB0aGUgPGImZ3Q7Z2VhcjwvYiZndDsgaW4gdGhlIHVwcGVyLXJpZ2h0IGhhbmQgY29ybmVyIG9mIHRoZSB3aW5kb3csIHRoZW4gPGImZ3Q7SW50ZXJuZXQgb3B0aW9uczwvYiZndDsuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtDbGljayB0aGUgPGImZ3Q7UHJpdmFjeTwvYiZndDsgdGFiIGluIHRoZSBuZXcgd2luZG93IHRoYXQganVzdCBhcHBlYXJlZC48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O1VuY2hlY2sgdGhlIGJveCBsYWJlbGVkIDxiJmd0O05ldmVyIGFsbG93IHdlYnNpdGVzIHRvIHJlcXVlc3QgeW91ciBwaHlzaWNhbCBsb2NhdGlvbjwvYiZndDsgaWYgaXQncyBhbHJlYWR5IGNoZWNrZWQuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtDbGljayB0aGUgYnV0dG9uIGxhYmVsZWQgPGImZ3Q7Q2xlYXIgU2l0ZXM8L2ImZ3Q7LjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7WW91J3JlIGdvb2QgdG8gZ28hIENsaWNrIDxiJmd0O09LPC9iJmd0OywgdGhlbiByZWZyZXNoIHRoaXMgWWVscCBwYWdlIGFuZCB0cnkgeW91ciBzZWFyY2ggYWdhaW4uPC9saSZndDtcbiAgICAgICAgPC9vbCZndDtcbiAgICAgICAgPHAmZ3Q7XG4gICAgICAgICAgICBZb3UgY2FuIGFsc28gc2VhcmNoIG5lYXIgYSBjaXR5LCBwbGFjZSwgb3IgYWRkcmVzcyBpbnN0ZWFkLlxuICAgICAgICA8L3AmZ3Q7IjoiPG9sJmd0O1xuICAgICAgICAgICAgPGxpJmd0O0NsaWNrIHRoZSA8YiZndDtnZWFyPC9iJmd0OyBpbiB0aGUgdXBwZXItcmlnaHQgaGFuZCBjb3JuZXIgb2YgdGhlIHdpbmRvdywgdGhlbiA8YiZndDtJbnRlcm5ldCBvcHRpb25zPC9iJmd0Oy48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O0NsaWNrIHRoZSA8YiZndDtQcml2YWN5PC9iJmd0OyB0YWIgaW4gdGhlIG5ldyB3aW5kb3cgdGhhdCBqdXN0IGFwcGVhcmVkLjwvbGkmZ3Q7XG4gICAgICAgICAgICA8bGkmZ3Q7VW5jaGVjayB0aGUgYm94IGxhYmVsZWQgPGImZ3Q7TmV2ZXIgYWxsb3cgd2Vic2l0ZXMgdG8gcmVxdWVzdCB5b3VyIHBoeXNpY2FsIGxvY2F0aW9uPC9iJmd0OyBpZiBpdCdzIGFscmVhZHkgY2hlY2tlZC48L2xpJmd0O1xuICAgICAgICAgICAgPGxpJmd0O0NsaWNrIHRoZSBidXR0b24gbGFiZWxlZCA8YiZndDtDbGVhciBTaXRlczwvYiZndDsuPC9saSZndDtcbiAgICAgICAgICAgIDxsaSZndDtZb3UncmUgZ29vZCB0byBnbyEgQ2xpY2sgPGImZ3Q7T0s8L2ImZ3Q7LCB0aGVuIHJlZnJlc2ggdGhpcyBZZWxwIHBhZ2UgYW5kIHRyeSB5b3VyIHNlYXJjaCBhZ2Fpbi48L2xpJmd0O1xuICAgICAgICA8L29sJmd0O1xuICAgICAgICA8cCZndDtcbiAgICAgICAgICAgIFlvdSBjYW4gYWxzbyBzZWFyY2ggbmVhciBhIGNpdHksIHBsYWNlLCBvciBhZGRyZXNzIGluc3RlYWQuXG4gICAgICAgIDwvcCZndDsiLCI8cCZndDtcbiAgICAgICAgICAgIE9vcHMhIFdlIGRvbid0IHJlY29nbml6ZSB0aGUgd2ViIGJyb3dzZXIgeW91J3JlIGN1cnJlbnRseSB1c2luZy4gVHJ5IGNoZWNraW5nIHRoZSBicm93c2VyJ3MgaGVscCBtZW51LCBvciBzZWFyY2hpbmcgdGhlIFdlYiBmb3IgaW5zdHJ1Y3Rpb25zIHRvIHR1cm4gb24gSFRNTDUgR2VvbG9jYXRpb24gZm9yIHlvdXIgYnJvd3Nlci5cbiAgICAgICAgICAgIFlvdSBjYW4gYWxzbyBzZWFyY2ggbmVhciBhIGNpdHksIHBsYWNlLCBvciBhZGRyZXNzIGluc3RlYWQuXG4gICAgICAgIDwvcCZndDsiOiI8cCZndDtcbiAgICAgICAgICAgIE9vcHMhIFdlIGRvbid0IHJlY29nbml6ZSB0aGUgd2ViIGJyb3dzZXIgeW91J3JlIGN1cnJlbnRseSB1c2luZy4gVHJ5IGNoZWNraW5nIHRoZSBicm93c2VyJ3MgaGVscCBtZW51LCBvciBzZWFyY2hpbmcgdGhlIFdlYiBmb3IgaW5zdHJ1Y3Rpb25zIHRvIHR1cm4gb24gSFRNTDUgR2VvbG9jYXRpb24gZm9yIHlvdXIgYnJvd3Nlci5cbiAgICAgICAgICAgIFlvdSBjYW4gYWxzbyBzZWFyY2ggbmVhciBhIGNpdHksIHBsYWNlLCBvciBhZGRyZXNzIGluc3RlYWQuXG4gICAgICAgIDwvcCZndDsiLCI8cCZndDtGaXJzdCwgdHJ5IHJlZnJlc2hpbmcgdGhlIHBhZ2UgYW5kIGNsaWNraW5nIEN1cnJlbnQgTG9jYXRpb24gYWdhaW4uIE1ha2Ugc3VyZSB5b3UgY2xpY2sgPGImZ3Q7QWxsb3c8L2ImZ3Q7IG9yIDxiJmd0O0dyYW50IFBlcm1pc3Npb25zPC9iJmd0OyBpZiB5b3VyIGJyb3dzZXIgYXNrcyBmb3IgeW91ciBsb2NhdGlvbi4gQWxzbywgdHJ5IDxhIGhyZWY9XCJodHRwczovL3N1cHBvcnQuYXBwbGUuY29tL2VuLXVzL0hUMjA0NjkwXCImZ3Q7ZW5hYmxpbmcgTG9jYXRpb24gU2VydmljZXMgZm9yIHlvdXIgYnJvd3NlcjwvYSZndDsuIElmIHlvdXIgYnJvd3NlciBzdGlsbCBkb2Vzbid0IGFzayB5b3UsIHRyeSB0aGVzZSBzdGVwczo8L3AmZ3Q7IjoiPHAmZ3Q7Rmlyc3QsIHRyeSByZWZyZXNoaW5nIHRoZSBwYWdlIGFuZCBjbGlja2luZyBDdXJyZW50IExvY2F0aW9uIGFnYWluLiBNYWtlIHN1cmUgeW91IGNsaWNrIDxiJmd0O0FsbG93PC9iJmd0OyBvciA8YiZndDtHcmFudCBQZXJtaXNzaW9uczwvYiZndDsgaWYgeW91ciBicm93c2VyIGFza3MgZm9yIHlvdXIgbG9jYXRpb24uIEFsc28sIHRyeSA8YSBocmVmPVwiaHR0cHM6Ly9zdXBwb3J0LmFwcGxlLmNvbS9lbi11cy9IVDIwNDY5MFwiJmd0O2VuYWJsaW5nIExvY2F0aW9uIFNlcnZpY2VzIGZvciB5b3VyIGJyb3dzZXI8L2EmZ3Q7LiBJZiB5b3VyIGJyb3dzZXIgc3RpbGwgZG9lc24ndCBhc2sgeW91LCB0cnkgdGhlc2Ugc3RlcHM6PC9wJmd0OyIsIjxwJmd0O0ZpcnN0LCB0cnkgcmVmcmVzaGluZyB0aGUgcGFnZSBhbmQgY2xpY2tpbmcgQ3VycmVudCBMb2NhdGlvbiBhZ2Fpbi4gTWFrZSBzdXJlIHlvdSBjbGljayA8YiZndDtBbGxvdzwvYiZndDsgb3IgPGImZ3Q7R3JhbnQgUGVybWlzc2lvbnM8L2ImZ3Q7IGlmIHlvdXIgYnJvd3NlciBhc2tzIGZvciB5b3VyIGxvY2F0aW9uLiBJZiB5b3VyIGJyb3dzZXIgZG9lc24ndCBhc2sgeW91LCB0cnkgdGhlc2Ugc3RlcHM6PC9wJmd0OyI6IjxwJmd0O0ZpcnN0LCB0cnkgcmVmcmVzaGluZyB0aGUgcGFnZSBhbmQgY2xpY2tpbmcgQ3VycmVudCBMb2NhdGlvbiBhZ2Fpbi4gTWFrZSBzdXJlIHlvdSBjbGljayA8YiZndDtBbGxvdzwvYiZndDsgb3IgPGImZ3Q7R3JhbnQgUGVybWlzc2lvbnM8L2ImZ3Q7IGlmIHlvdXIgYnJvd3NlciBhc2tzIGZvciB5b3VyIGxvY2F0aW9uLiBJZiB5b3VyIGJyb3dzZXIgZG9lc24ndCBhc2sgeW91LCB0cnkgdGhlc2Ugc3RlcHM6PC9wJmd0OyIsIjxzdHJvbmcmZ3Q7R28gbW9iaWxlIDwvc3Ryb25nJmd0OyB3aXRoIHRoZSA8YSBocmVmPSV7bW9iaWxlQXBwTGlua0hyZWZ9Jmd0OyAle21vYmlsZUFwcExpbmtUZXh0fSA8L2EmZ3Q7IGZvciBpT1MgYW5kIEFuZHJvaWQiOiI8c3Ryb25nJmd0O0dvIG1vYmlsZSA8L3N0cm9uZyZndDsgd2l0aCB0aGUgPGEgaHJlZj0le21vYmlsZUFwcExpbmtIcmVmfSZndDsgJXttb2JpbGVBcHBMaW5rVGV4dH0gPC9hJmd0OyBmb3IgaU9TIGFuZCBBbmRyb2lkIiwiQWJvdXQgTWUiOiJBYm91dCBNZSIsIkFjY291bnQgU2V0dGluZ3MiOiJBY2NvdW50IFNldHRpbmdzIiwiQWQgQ2hvaWNlcyI6IkFkIENob2ljZXMiLCJBcmUgeW91IGEgaHVtYW4/IFBsZWFzZSBjb21wbGV0ZSB0aGUgYm90IGNoYWxsZW5nZSBiZWxvdy4iOiJBcmUgeW91IGEgaHVtYW4/IFBsZWFzZSBjb21wbGV0ZSB0aGUgYm90IGNoYWxsZW5nZSBiZWxvdy4iLCJCbG9nIjoiQmxvZyIsIkJ1c2luZXNzIExpc3RpbmdzIHByb3ZpZGVkIGJ5IFllbGxvdyBQYWdlc8KuIjoiQnVzaW5lc3MgTGlzdGluZ3MgcHJvdmlkZWQgYnkgWWVsbG93IFBhZ2Vzwq4iLCJDYW5jZWwiOiJDYW5jZWwiLCJDbG9zZSI6IkNsb3NlIiwiQ29udGVudCBHdWlkZWxpbmVzIjoiQ29udGVudCBHdWlkZWxpbmVzIiwiQ29weXJpZ2h0IMKpIDIwMDTigJMle2N1cnJlbnRZZWFyfSBZZWxwIjoiQ29weXJpZ2h0IMKpIDIwMDTigJMle2N1cnJlbnRZZWFyfSBZZWxwIiwiQ291bnRyaWVzIjoiQ291bnRyaWVzIiwiQ3VycmVudCBMb2NhdGlvbiI6IkN1cnJlbnQgTG9jYXRpb24iLCJGaW5kIjoiRmluZCIsIkZpbmQgRnJpZW5kcyI6IkZpbmQgRnJpZW5kcyIsIkZpbmRpbmcgeW91ciBsb2NhdGlvbi4uLiI6IkZpbmRpbmcgeW91ciBsb2NhdGlvbi4uLiIsIkZvciBCdXNpbmVzc2VzIjoiRm9yIEJ1c2luZXNzZXMiLCJMYW5ndWFnZXMiOiJMYW5ndWFnZXMiLCJMb2cgSW4iOiJMb2cgSW4iLCJMb2cgT3V0IjoiTG9nIE91dCIsIk1lbnUiOiJNZW51IiwiTWVzc2FnZXMiOiJNZXNzYWdlcyIsIk1vcmUiOiJNb3JlIiwiTkVXIjoiTkVXIiwiTmVhciI6Ik5lYXIiLCJOZWVkIGhlbHA/IjoiTmVlZCBoZWxwPyIsIk5vdGlmaWNhdGlvbnMiOiJOb3RpZmljYXRpb25zIiwiT29wcyEgWW91IG5lZWQgdG8gaGF2ZSB2ZXJpZmllZCB5b3VyIGVtYWlsIHRvIGxvZyBpbiB3aXRoIEdvb2dsZS4gUGxlYXNlIGxvZyBpbiB1c2luZyB5b3VyIGVtYWlsIGFuZCBwYXNzd29yZC4iOiJPb3BzISBZb3UgbmVlZCB0byBoYXZlIHZlcmlmaWVkIHlvdXIgZW1haWwgdG8gbG9nIGluIHdpdGggR29vZ2xlLiBQbGVhc2UgbG9nIGluIHVzaW5nIHlvdXIgZW1haWwgYW5kIHBhc3N3b3JkLiIsIk9vcHMsIHNvbWV0aGluZyB3ZW50IHdyb25nLiBQbGVhc2UgdHJ5IGFnYWluLiI6Ik9vcHMsIHNvbWV0aGluZyB3ZW50IHdyb25nLiBQbGVhc2UgdHJ5IGFnYWluLiIsIk9vcHMsIHdlIGNhbid0IGZpbmQgeW91ciBsb2NhdGlvbiI6Ik9vcHMsIHdlIGNhbid0IGZpbmQgeW91ciBsb2NhdGlvbiIsIlByaXZhY3kgUG9saWN5IjoiUHJpdmFjeSBQb2xpY3kiLCJTZWFyY2giOiJTZWFyY2giLCJTaWduIFVwIjoiU2lnbiBVcCIsIlNvbWUgRGF0YSBCeSBBY3hpb20iOiJTb21lIERhdGEgQnkgQWN4aW9tIiwiU29tZSBidXNpbmVzcyBkYXRhIGJ5IDxhIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vZm9sbG93XCIgaHJlZj1cImh0dHA6Ly93d3cueWVsbG93LmNvbS50clwiIGNsYXNzPVwiJXtjbGFzc2VzfVwiJmd0O1llbGxvdy5jb20udHI8L2EmZ3Q7IjoiU29tZSBidXNpbmVzcyBkYXRhIGJ5IDxhIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vZm9sbG93XCIgaHJlZj1cImh0dHA6Ly93d3cueWVsbG93LmNvbS50clwiIGNsYXNzPVwiJXtjbGFzc2VzfVwiJmd0O1llbGxvdy5jb20udHI8L2EmZ3Q7IiwiU29tZXRoaW5nIGJyb2tlIGFuZCB3ZSdyZSBub3Qgc3VyZSB3aGF0LiBUcnkgYWdhaW4gbGF0ZXIsIG9yIHNlYXJjaCBuZWFyIGEgY2l0eSwgcGxhY2UsIG9yIGFkZHJlc3MgaW5zdGVhZC4iOiJTb21ldGhpbmcgYnJva2UgYW5kIHdlJ3JlIG5vdCBzdXJlIHdoYXQuIFRyeSBhZ2FpbiBsYXRlciwgb3Igc2VhcmNoIG5lYXIgYSBjaXR5LCBwbGFjZSwgb3IgYWRkcmVzcyBpbnN0ZWFkLiIsIlN0YXR1cyI6IlN0YXR1cyIsIlN1cHBvcnQiOiJTdXBwb3J0IiwiVGVybXMgb2YgU2VydmljZSI6IlRlcm1zIG9mIFNlcnZpY2UiLCJUb2dnbGUgTWVudSI6IlRvZ2dsZSBNZW51IiwiV2UgY291bGRuJ3QgZmluZCBhbiBhY2N1cmF0ZSBwb3NpdGlvbi4gSWYgeW91J3JlIHVzaW5nIGEgbGFwdG9wIG9yIHRhYmxldCwgdHJ5IG1vdmluZyBpdCBzb21ld2hlcmUgZWxzZSBhbmQgZ2l2ZSBpdCBhbm90aGVyIGdvLiBPciwgc2VhcmNoIG5lYXIgYSBjaXR5LCBwbGFjZSwgb3IgYWRkcmVzcyBpbnN0ZWFkLiI6IldlIGNvdWxkbid0IGZpbmQgYW4gYWNjdXJhdGUgcG9zaXRpb24uIElmIHlvdSdyZSB1c2luZyBhIGxhcHRvcCBvciB0YWJsZXQsIHRyeSBtb3ZpbmcgaXQgc29tZXdoZXJlIGVsc2UgYW5kIGdpdmUgaXQgYW5vdGhlciBnby4gT3IsIHNlYXJjaCBuZWFyIGEgY2l0eSwgcGxhY2UsIG9yIGFkZHJlc3MgaW5zdGVhZC4iLCJXZSBjb3VsZG4ndCBmaW5kIHlvdSBxdWlja2x5IGVub3VnaCEgVHJ5IGFnYWluIGxhdGVyLCBvciBzZWFyY2ggbmVhciBhIGNpdHksIHBsYWNlLCBvciBhZGRyZXNzIGluc3RlYWQuIjoiV2UgY291bGRuJ3QgZmluZCB5b3UgcXVpY2tseSBlbm91Z2ghIFRyeSBhZ2FpbiBsYXRlciwgb3Igc2VhcmNoIG5lYXIgYSBjaXR5LCBwbGFjZSwgb3IgYWRkcmVzcyBpbnN0ZWFkLiIsIldlYmluYXJzIjoiV2ViaW5hcnMiLCJXcml0ZSBhIFJldmlldyI6IldyaXRlIGEgUmV2aWV3IiwiWWVscCBIZWFkZXIiOiJZZWxwIEhlYWRlciIsIlllbHAgZm9yIEJ1c2luZXNzIGFwcCI6IlllbHAgZm9yIEJ1c2luZXNzIGFwcCIsImFkZHJlc3MsIG5laWdoYm9yaG9vZCwgY2l0eSwgc3RhdGUgb3IgemlwIjoiYWRkcmVzcywgbmVpZ2hib3Job29kLCBjaXR5LCBzdGF0ZSBvciB6aXAiLCJ0YWNvcywgY2hlYXAgZGlubmVyLCBNYXjigJlzIjoidGFjb3MsIGNoZWFwIGRpbm5lciwgTWF44oCZcyJ9LCJhdHRyaWJ1dGlvblNvdXJjZSI6W119LS0+PC9zY3JpcHQ+PHNjcmlwdCBkYXRhLWFwb2xsby1zdGF0ZT0iOTM4YTQwZWQtY2M1OS00NGVlLWFhMjItMGM0MjhlNmM2YmVmIiB0eXBlPSJhcHBsaWNhdGlvbi9qc29uIj48IS0teyZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyLmNvcHlyaWdodCZxdW90Ozp7JnF1b3Q7YnVyc3RMb2dvJnF1b3Q7OiZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbSYjeDJGO2Fzc2V0cyYjeDJGO3NydjAmI3gyRjt5ZWxwX2Rlc2lnbl9jZG4mI3gyRjtjYWJjZWYxZGFlYTImI3gyRjthc3NldHMmI3gyRjtpbWcmI3gyRjticmFuZCYjeDJGO2J1cnN0X3JlZC5zdmcmcXVvdDssJnF1b3Q7ZGVmYXVsdExvZ28mcXVvdDs6JnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7czMtbWVkaWEwLmZsLnllbHBjZG4uY29tJiN4MkY7YXNzZXRzJiN4MkY7c3J2MCYjeDJGO3llbHBfZGVzaWduX2NkbiYjeDJGOzdlZjcxYmY3N2EzMyYjeDJGO2Fzc2V0cyYjeDJGO2ltZyYjeDJGO2JyYW5kJiN4MkY7bG9nb19kZXNrdG9wLnN2ZyZxdW90OywmcXVvdDtfX3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyQ29weXJpZ2h0JnF1b3Q7fSwmcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3RlciZxdW90Ozp7JnF1b3Q7Y29weXJpZ2h0JnF1b3Q7OnsmcXVvdDt0eXBlJnF1b3Q7OiZxdW90O2lkJnF1b3Q7LCZxdW90O2dlbmVyYXRlZCZxdW90Ozp0cnVlLCZxdW90O2lkJnF1b3Q7OiZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyLmNvcHlyaWdodCZxdW90OywmcXVvdDt0eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlckNvcHlyaWdodCZxdW90O30sJnF1b3Q7X190eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlciZxdW90O30sJnF1b3Q7Uk9PVF9RVUVSWSZxdW90Ozp7JnF1b3Q7d2ViQ29uc3VtZXJGb290ZXImcXVvdDs6eyZxdW90O3R5cGUmcXVvdDs6JnF1b3Q7aWQmcXVvdDssJnF1b3Q7Z2VuZXJhdGVkJnF1b3Q7OnRydWUsJnF1b3Q7aWQmcXVvdDs6JnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXImcXVvdDssJnF1b3Q7dHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXImcXVvdDt9LCZxdW90O3dlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkmcXVvdDs6eyZxdW90O3R5cGUmcXVvdDs6JnF1b3Q7aWQmcXVvdDssJnF1b3Q7Z2VuZXJhdGVkJnF1b3Q7OnRydWUsJnF1b3Q7aWQmcXVvdDs6JnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KSZxdW90OywmcXVvdDt0eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlciZxdW90O319LCZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkuZGVza3RvcENvbHVtbnMuMCZxdW90Ozp7JnF1b3Q7dGl0bGUmcXVvdDs6JnF1b3Q7QWJvdXQmcXVvdDssJnF1b3Q7bGlua3MmcXVvdDs6W3smcXVvdDt0eXBlJnF1b3Q7OiZxdW90O2lkJnF1b3Q7LCZxdW90O2dlbmVyYXRlZCZxdW90Ozp0cnVlLCZxdW90O2lkJnF1b3Q7OiZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkuZGVza3RvcENvbHVtbnMuMC5saW5rcy4wJnF1b3Q7LCZxdW90O3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30seyZxdW90O3R5cGUmcXVvdDs6JnF1b3Q7aWQmcXVvdDssJnF1b3Q7Z2VuZXJhdGVkJnF1b3Q7OnRydWUsJnF1b3Q7aWQmcXVvdDs6JnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5kZXNrdG9wQ29sdW1ucy4wLmxpbmtzLjEmcXVvdDssJnF1b3Q7dHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSx7JnF1b3Q7dHlwZSZxdW90OzomcXVvdDtpZCZxdW90OywmcXVvdDtnZW5lcmF0ZWQmcXVvdDs6dHJ1ZSwmcXVvdDtpZCZxdW90OzomcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjAubGlua3MuMiZxdW90OywmcXVvdDt0eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlckxpbmsmcXVvdDt9LHsmcXVvdDt0eXBlJnF1b3Q7OiZxdW90O2lkJnF1b3Q7LCZxdW90O2dlbmVyYXRlZCZxdW90Ozp0cnVlLCZxdW90O2lkJnF1b3Q7OiZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkuZGVza3RvcENvbHVtbnMuMC5saW5rcy4zJnF1b3Q7LCZxdW90O3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30seyZxdW90O3R5cGUmcXVvdDs6JnF1b3Q7aWQmcXVvdDssJnF1b3Q7Z2VuZXJhdGVkJnF1b3Q7OnRydWUsJnF1b3Q7aWQmcXVvdDs6JnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5kZXNrdG9wQ29sdW1ucy4wLmxpbmtzLjQmcXVvdDssJnF1b3Q7dHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSx7JnF1b3Q7dHlwZSZxdW90OzomcXVvdDtpZCZxdW90OywmcXVvdDtnZW5lcmF0ZWQmcXVvdDs6dHJ1ZSwmcXVvdDtpZCZxdW90OzomcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjAubGlua3MuNSZxdW90OywmcXVvdDt0eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlckxpbmsmcXVvdDt9LHsmcXVvdDt0eXBlJnF1b3Q7OiZxdW90O2lkJnF1b3Q7LCZxdW90O2dlbmVyYXRlZCZxdW90Ozp0cnVlLCZxdW90O2lkJnF1b3Q7OiZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkuZGVza3RvcENvbHVtbnMuMC5saW5rcy42JnF1b3Q7LCZxdW90O3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30seyZxdW90O3R5cGUmcXVvdDs6JnF1b3Q7aWQmcXVvdDssJnF1b3Q7Z2VuZXJhdGVkJnF1b3Q7OnRydWUsJnF1b3Q7aWQmcXVvdDs6JnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5kZXNrdG9wQ29sdW1ucy4wLmxpbmtzLjcmcXVvdDssJnF1b3Q7dHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSx7JnF1b3Q7dHlwZSZxdW90OzomcXVvdDtpZCZxdW90OywmcXVvdDtnZW5lcmF0ZWQmcXVvdDs6dHJ1ZSwmcXVvdDtpZCZxdW90OzomcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjAubGlua3MuOCZxdW90OywmcXVvdDt0eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlckxpbmsmcXVvdDt9LHsmcXVvdDt0eXBlJnF1b3Q7OiZxdW90O2lkJnF1b3Q7LCZxdW90O2dlbmVyYXRlZCZxdW90Ozp0cnVlLCZxdW90O2lkJnF1b3Q7OiZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkuZGVza3RvcENvbHVtbnMuMC5saW5rcy45JnF1b3Q7LCZxdW90O3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30seyZxdW90O3R5cGUmcXVvdDs6JnF1b3Q7aWQmcXVvdDssJnF1b3Q7Z2VuZXJhdGVkJnF1b3Q7OnRydWUsJnF1b3Q7aWQmcXVvdDs6JnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5kZXNrdG9wQ29sdW1ucy4wLmxpbmtzLjEwJnF1b3Q7LCZxdW90O3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O31dLCZxdW90O19fdHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJDb2x1bW4mcXVvdDt9LCZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkuZGVza3RvcENvbHVtbnMuMC5saW5rcy4wJnF1b3Q7OnsmcXVvdDtocmVmJnF1b3Q7OiZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO2Fib3V0JnF1b3Q7LCZxdW90O3RleHQmcXVvdDs6JnF1b3Q7QWJvdXQgWWVscCZxdW90OywmcXVvdDtfX3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30sJnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5kZXNrdG9wQ29sdW1ucy4wLmxpbmtzLjEmcXVvdDs6eyZxdW90O2hyZWYmcXVvdDs6JnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7Y2FyZWVycyYjeDJGO2hvbWUmcXVvdDssJnF1b3Q7dGV4dCZxdW90OzomcXVvdDtDYXJlZXJzJnF1b3Q7LCZxdW90O19fdHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSwmcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjAubGlua3MuMiZxdW90Ozp7JnF1b3Q7aHJlZiZxdW90OzomcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtwcmVzcyZxdW90OywmcXVvdDt0ZXh0JnF1b3Q7OiZxdW90O1ByZXNzJnF1b3Q7LCZxdW90O19fdHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSwmcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjAubGlua3MuMyZxdW90Ozp7JnF1b3Q7aHJlZiZxdW90OzomcXVvdDtodHRwOiYjeDJGOyYjeDJGO3llbHAtaXIuY29tJiN4MkY7JnF1b3Q7LCZxdW90O3RleHQmcXVvdDs6JnF1b3Q7SW52ZXN0b3IgUmVsYXRpb25zJnF1b3Q7LCZxdW90O19fdHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSwmcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjAubGlua3MuNCZxdW90Ozp7JnF1b3Q7aHJlZiZxdW90OzomcXVvdDtodHRwczomI3gyRjsmI3gyRjt0cnVzdC55ZWxwLmNvbSZxdW90OywmcXVvdDt0ZXh0JnF1b3Q7OiZxdW90O1RydXN0ICZhbXA7IFNhZmV0eSZxdW90OywmcXVvdDtfX3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30sJnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5kZXNrdG9wQ29sdW1ucy4wLmxpbmtzLjUmcXVvdDs6eyZxdW90O2hyZWYmcXVvdDs6JnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7Z3VpZGVsaW5lcyZxdW90OywmcXVvdDt0ZXh0JnF1b3Q7OiZxdW90O0NvbnRlbnQgR3VpZGVsaW5lcyZxdW90OywmcXVvdDtfX3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30sJnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5kZXNrdG9wQ29sdW1ucy4wLmxpbmtzLjYmcXVvdDs6eyZxdW90O2hyZWYmcXVvdDs6JnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAtc3VwcG9ydC5jb20mI3gyRjthcnRpY2xlJiN4MkY7WWVscC1BY2Nlc3NpYmlsaXR5LVN0YXRlbWVudCZxdW90OywmcXVvdDt0ZXh0JnF1b3Q7OiZxdW90O0FjY2Vzc2liaWxpdHkgU3RhdGVtZW50JnF1b3Q7LCZxdW90O19fdHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSwmcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjAubGlua3MuNyZxdW90Ozp7JnF1b3Q7aHJlZiZxdW90OzomcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtzdGF0aWM/cD10b3MmcXVvdDssJnF1b3Q7dGV4dCZxdW90OzomcXVvdDtUZXJtcyBvZiBTZXJ2aWNlJnF1b3Q7LCZxdW90O19fdHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSwmcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjAubGlua3MuOCZxdW90Ozp7JnF1b3Q7aHJlZiZxdW90OzomcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjt0b3MmI3gyRjtwcml2YWN5X3BvbGljeSZxdW90OywmcXVvdDt0ZXh0JnF1b3Q7OiZxdW90O1ByaXZhY3kgUG9saWN5JnF1b3Q7LCZxdW90O19fdHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSwmcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjAubGlua3MuOSZxdW90Ozp7JnF1b3Q7aHJlZiZxdW90OzomcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtzdGF0aWM/cD10b3MjdGhpcmQtcGFydGllcyZxdW90OywmcXVvdDt0ZXh0JnF1b3Q7OiZxdW90O0FkIENob2ljZXMmcXVvdDssJnF1b3Q7X190eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlckxpbmsmcXVvdDt9LCZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkuZGVza3RvcENvbHVtbnMuMC5saW5rcy4xMCZxdW90Ozp7JnF1b3Q7aHJlZiZxdW90OzomcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjt0b3MmI3gyRjtwcml2YWN5X3BvbGljeSNjb29raWVzJnF1b3Q7LCZxdW90O3RleHQmcXVvdDs6JnF1b3Q7TWFuYWdlIENvb2tpZXMmcXVvdDssJnF1b3Q7X190eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlckxpbmsmcXVvdDt9LCZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkuZGVza3RvcENvbHVtbnMuMSZxdW90Ozp7JnF1b3Q7dGl0bGUmcXVvdDs6JnF1b3Q7RGlzY292ZXImcXVvdDssJnF1b3Q7bGlua3MmcXVvdDs6W3smcXVvdDt0eXBlJnF1b3Q7OiZxdW90O2lkJnF1b3Q7LCZxdW90O2dlbmVyYXRlZCZxdW90Ozp0cnVlLCZxdW90O2lkJnF1b3Q7OiZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkuZGVza3RvcENvbHVtbnMuMS5saW5rcy4wJnF1b3Q7LCZxdW90O3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30seyZxdW90O3R5cGUmcXVvdDs6JnF1b3Q7aWQmcXVvdDssJnF1b3Q7Z2VuZXJhdGVkJnF1b3Q7OnRydWUsJnF1b3Q7aWQmcXVvdDs6JnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5kZXNrdG9wQ29sdW1ucy4xLmxpbmtzLjEmcXVvdDssJnF1b3Q7dHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSx7JnF1b3Q7dHlwZSZxdW90OzomcXVvdDtpZCZxdW90OywmcXVvdDtnZW5lcmF0ZWQmcXVvdDs6dHJ1ZSwmcXVvdDtpZCZxdW90OzomcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjEubGlua3MuMiZxdW90OywmcXVvdDt0eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlckxpbmsmcXVvdDt9LHsmcXVvdDt0eXBlJnF1b3Q7OiZxdW90O2lkJnF1b3Q7LCZxdW90O2dlbmVyYXRlZCZxdW90Ozp0cnVlLCZxdW90O2lkJnF1b3Q7OiZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkuZGVza3RvcENvbHVtbnMuMS5saW5rcy4zJnF1b3Q7LCZxdW90O3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30seyZxdW90O3R5cGUmcXVvdDs6JnF1b3Q7aWQmcXVvdDssJnF1b3Q7Z2VuZXJhdGVkJnF1b3Q7OnRydWUsJnF1b3Q7aWQmcXVvdDs6JnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5kZXNrdG9wQ29sdW1ucy4xLmxpbmtzLjQmcXVvdDssJnF1b3Q7dHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSx7JnF1b3Q7dHlwZSZxdW90OzomcXVvdDtpZCZxdW90OywmcXVvdDtnZW5lcmF0ZWQmcXVvdDs6dHJ1ZSwmcXVvdDtpZCZxdW90OzomcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjEubGlua3MuNSZxdW90OywmcXVvdDt0eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlckxpbmsmcXVvdDt9LHsmcXVvdDt0eXBlJnF1b3Q7OiZxdW90O2lkJnF1b3Q7LCZxdW90O2dlbmVyYXRlZCZxdW90Ozp0cnVlLCZxdW90O2lkJnF1b3Q7OiZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkuZGVza3RvcENvbHVtbnMuMS5saW5rcy42JnF1b3Q7LCZxdW90O3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30seyZxdW90O3R5cGUmcXVvdDs6JnF1b3Q7aWQmcXVvdDssJnF1b3Q7Z2VuZXJhdGVkJnF1b3Q7OnRydWUsJnF1b3Q7aWQmcXVvdDs6JnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5kZXNrdG9wQ29sdW1ucy4xLmxpbmtzLjcmcXVvdDssJnF1b3Q7dHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSx7JnF1b3Q7dHlwZSZxdW90OzomcXVvdDtpZCZxdW90OywmcXVvdDtnZW5lcmF0ZWQmcXVvdDs6dHJ1ZSwmcXVvdDtpZCZxdW90OzomcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjEubGlua3MuOCZxdW90OywmcXVvdDt0eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlckxpbmsmcXVvdDt9XSwmcXVvdDtfX3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyQ29sdW1uJnF1b3Q7fSwmcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjEubGlua3MuMCZxdW90Ozp7JnF1b3Q7aHJlZiZxdW90OzomcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtjb3N0cyZxdW90OywmcXVvdDt0ZXh0JnF1b3Q7OiZxdW90O1llbHAgUHJvamVjdCBDb3N0IEd1aWRlcyZxdW90OywmcXVvdDtfX3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30sJnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5kZXNrdG9wQ29sdW1ucy4xLmxpbmtzLjEmcXVvdDs6eyZxdW90O2hyZWYmcXVvdDs6JnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7Y29sbGVjdGlvbnMmcXVvdDssJnF1b3Q7dGV4dCZxdW90OzomcXVvdDtDb2xsZWN0aW9ucyZxdW90OywmcXVvdDtfX3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30sJnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5kZXNrdG9wQ29sdW1ucy4xLmxpbmtzLjImcXVvdDs6eyZxdW90O2hyZWYmcXVvdDs6JnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7dGFsayZxdW90OywmcXVvdDt0ZXh0JnF1b3Q7OiZxdW90O1RhbGsmcXVvdDssJnF1b3Q7X190eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlckxpbmsmcXVvdDt9LCZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkuZGVza3RvcENvbHVtbnMuMS5saW5rcy4zJnF1b3Q7OnsmcXVvdDtocmVmJnF1b3Q7OiZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO2V2ZW50cyZxdW90OywmcXVvdDt0ZXh0JnF1b3Q7OiZxdW90O0V2ZW50cyZxdW90OywmcXVvdDtfX3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30sJnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5kZXNrdG9wQ29sdW1ucy4xLmxpbmtzLjQmcXVvdDs6eyZxdW90O2hyZWYmcXVvdDs6JnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7YmxvZy55ZWxwLmNvbSYjeDJGOyZxdW90OywmcXVvdDt0ZXh0JnF1b3Q7OiZxdW90O1llbHAgQmxvZyZxdW90OywmcXVvdDtfX3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30sJnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5kZXNrdG9wQ29sdW1ucy4xLmxpbmtzLjUmcXVvdDs6eyZxdW90O2hyZWYmcXVvdDs6JnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAtc3VwcG9ydC5jb20mI3gyRjsmcXVvdDssJnF1b3Q7dGV4dCZxdW90OzomcXVvdDtTdXBwb3J0JnF1b3Q7LCZxdW90O19fdHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSwmcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjEubGlua3MuNiZxdW90Ozp7JnF1b3Q7aHJlZiZxdW90OzomcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjt5ZWxwbW9iaWxlP3NvdXJjZT1mb290ZXImcXVvdDssJnF1b3Q7dGV4dCZxdW90OzomcXVvdDtZZWxwIE1vYmlsZSZxdW90OywmcXVvdDtfX3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30sJnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5kZXNrdG9wQ29sdW1ucy4xLmxpbmtzLjcmcXVvdDs6eyZxdW90O2hyZWYmcXVvdDs6JnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7ZGV2ZWxvcGVycz9jb3VudHJ5PVVTJnF1b3Q7LCZxdW90O3RleHQmcXVvdDs6JnF1b3Q7RGV2ZWxvcGVycyZxdW90OywmcXVvdDtfX3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30sJnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5kZXNrdG9wQ29sdW1ucy4xLmxpbmtzLjgmcXVvdDs6eyZxdW90O2hyZWYmcXVvdDs6JnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7cnNzJnF1b3Q7LCZxdW90O3RleHQmcXVvdDs6JnF1b3Q7UlNTJnF1b3Q7LCZxdW90O19fdHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSwmcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjImcXVvdDs6eyZxdW90O3RpdGxlJnF1b3Q7OiZxdW90O1llbHAgZm9yIEJ1c2luZXNzJnF1b3Q7LCZxdW90O2xpbmtzJnF1b3Q7Olt7JnF1b3Q7dHlwZSZxdW90OzomcXVvdDtpZCZxdW90OywmcXVvdDtnZW5lcmF0ZWQmcXVvdDs6dHJ1ZSwmcXVvdDtpZCZxdW90OzomcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjIubGlua3MuMCZxdW90OywmcXVvdDt0eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlckxpbmsmcXVvdDt9LHsmcXVvdDt0eXBlJnF1b3Q7OiZxdW90O2lkJnF1b3Q7LCZxdW90O2dlbmVyYXRlZCZxdW90Ozp0cnVlLCZxdW90O2lkJnF1b3Q7OiZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkuZGVza3RvcENvbHVtbnMuMi5saW5rcy4xJnF1b3Q7LCZxdW90O3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30seyZxdW90O3R5cGUmcXVvdDs6JnF1b3Q7aWQmcXVvdDssJnF1b3Q7Z2VuZXJhdGVkJnF1b3Q7OnRydWUsJnF1b3Q7aWQmcXVvdDs6JnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5kZXNrdG9wQ29sdW1ucy4yLmxpbmtzLjImcXVvdDssJnF1b3Q7dHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSx7JnF1b3Q7dHlwZSZxdW90OzomcXVvdDtpZCZxdW90OywmcXVvdDtnZW5lcmF0ZWQmcXVvdDs6dHJ1ZSwmcXVvdDtpZCZxdW90OzomcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjIubGlua3MuMyZxdW90OywmcXVvdDt0eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlckxpbmsmcXVvdDt9LHsmcXVvdDt0eXBlJnF1b3Q7OiZxdW90O2lkJnF1b3Q7LCZxdW90O2dlbmVyYXRlZCZxdW90Ozp0cnVlLCZxdW90O2lkJnF1b3Q7OiZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkuZGVza3RvcENvbHVtbnMuMi5saW5rcy40JnF1b3Q7LCZxdW90O3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30seyZxdW90O3R5cGUmcXVvdDs6JnF1b3Q7aWQmcXVvdDssJnF1b3Q7Z2VuZXJhdGVkJnF1b3Q7OnRydWUsJnF1b3Q7aWQmcXVvdDs6JnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5kZXNrdG9wQ29sdW1ucy4yLmxpbmtzLjUmcXVvdDssJnF1b3Q7dHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSx7JnF1b3Q7dHlwZSZxdW90OzomcXVvdDtpZCZxdW90OywmcXVvdDtnZW5lcmF0ZWQmcXVvdDs6dHJ1ZSwmcXVvdDtpZCZxdW90OzomcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjIubGlua3MuNiZxdW90OywmcXVvdDt0eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlckxpbmsmcXVvdDt9XSwmcXVvdDtfX3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyQ29sdW1uJnF1b3Q7fSwmcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjIubGlua3MuMCZxdW90Ozp7JnF1b3Q7aHJlZiZxdW90OzomcXVvdDtodHRwczomI3gyRjsmI3gyRjtiaXoueWVscC5jb20/dXRtX3NvdXJjZT1mb290ZXImYW1wO3V0bV9tZWRpdW09d3d3JmFtcDt1dG1fY29udGVudD1jbGFpbV9mb290ZXJfbGluayZhbXA7dXRtX2NhbXBhaWduPWNsYWltX2J1c2luZXNzJnF1b3Q7LCZxdW90O3RleHQmcXVvdDs6JnF1b3Q7Q2xhaW0geW91ciBCdXNpbmVzcyBQYWdlJnF1b3Q7LCZxdW90O19fdHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSwmcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjIubGlua3MuMSZxdW90Ozp7JnF1b3Q7aHJlZiZxdW90OzomcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjthZHZlcnRpc2UmcXVvdDssJnF1b3Q7dGV4dCZxdW90OzomcXVvdDtBZHZlcnRpc2Ugb24gWWVscCZxdW90OywmcXVvdDtfX3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30sJnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5kZXNrdG9wQ29sdW1ucy4yLmxpbmtzLjImcXVvdDs6eyZxdW90O2hyZWYmcXVvdDs6JnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7cmVzdGF1cmFudHMueWVscC5jb20mI3gyRjsmcXVvdDssJnF1b3Q7dGV4dCZxdW90OzomcXVvdDtZZWxwIGZvciBSZXN0YXVyYW50IE93bmVycyZxdW90OywmcXVvdDtfX3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30sJnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5kZXNrdG9wQ29sdW1ucy4yLmxpbmtzLjMmcXVvdDs6eyZxdW90O2hyZWYmcXVvdDs6JnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7cmVzdGF1cmFudHMueWVscC5jb20mI3gyRjtwcm9kdWN0cyYjeDJGO3dhaXRsaXN0LXRhYmxlLW1hbmFnZW1lbnQtc29mdHdhcmUmI3gyRjsmcXVvdDssJnF1b3Q7dGV4dCZxdW90OzomcXVvdDtUYWJsZSBNYW5hZ2VtZW50JnF1b3Q7LCZxdW90O19fdHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSwmcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjIubGlua3MuNCZxdW90Ozp7JnF1b3Q7aHJlZiZxdW90OzomcXVvdDtodHRwczomI3gyRjsmI3gyRjtiaXoueWVscC5jb20mI3gyRjtzdXBwb3J0JiN4MkY7Y2FzZV9zdHVkaWVzJnF1b3Q7LCZxdW90O3RleHQmcXVvdDs6JnF1b3Q7QnVzaW5lc3MgU3VjY2VzcyBTdG9yaWVzJnF1b3Q7LCZxdW90O19fdHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSwmcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjIubGlua3MuNSZxdW90Ozp7JnF1b3Q7aHJlZiZxdW90OzomcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC1zdXBwb3J0LmNvbSYjeDJGO1llbHBfZm9yX0J1c2luZXNzP2w9ZW5fVVMmcXVvdDssJnF1b3Q7dGV4dCZxdW90OzomcXVvdDtCdXNpbmVzcyBTdXBwb3J0JnF1b3Q7LCZxdW90O19fdHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSwmcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjIubGlua3MuNiZxdW90Ozp7JnF1b3Q7aHJlZiZxdW90OzomcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscGJsb2cuY29tJiN4MkY7c2VjdGlvbiYjeDJGO2J1c2luZXNzJnF1b3Q7LCZxdW90O3RleHQmcXVvdDs6JnF1b3Q7WWVscCBCbG9nIGZvciBCdXNpbmVzcyZxdW90OywmcXVvdDtfX3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30sJnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KSZxdW90Ozp7JnF1b3Q7ZGVza3RvcENvbHVtbnMmcXVvdDs6W3smcXVvdDt0eXBlJnF1b3Q7OiZxdW90O2lkJnF1b3Q7LCZxdW90O2dlbmVyYXRlZCZxdW90Ozp0cnVlLCZxdW90O2lkJnF1b3Q7OiZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkuZGVza3RvcENvbHVtbnMuMCZxdW90OywmcXVvdDt0eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlckNvbHVtbiZxdW90O30seyZxdW90O3R5cGUmcXVvdDs6JnF1b3Q7aWQmcXVvdDssJnF1b3Q7Z2VuZXJhdGVkJnF1b3Q7OnRydWUsJnF1b3Q7aWQmcXVvdDs6JnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5kZXNrdG9wQ29sdW1ucy4xJnF1b3Q7LCZxdW90O3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyQ29sdW1uJnF1b3Q7fSx7JnF1b3Q7dHlwZSZxdW90OzomcXVvdDtpZCZxdW90OywmcXVvdDtnZW5lcmF0ZWQmcXVvdDs6dHJ1ZSwmcXVvdDtpZCZxdW90OzomcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLmRlc2t0b3BDb2x1bW5zLjImcXVvdDssJnF1b3Q7dHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJDb2x1bW4mcXVvdDt9XSwmcXVvdDttb2JpbGVDb2x1bW5zJnF1b3Q7Olt7JnF1b3Q7dHlwZSZxdW90OzomcXVvdDtpZCZxdW90OywmcXVvdDtnZW5lcmF0ZWQmcXVvdDs6dHJ1ZSwmcXVvdDtpZCZxdW90OzomcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLm1vYmlsZUNvbHVtbnMuMCZxdW90OywmcXVvdDt0eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlckNvbHVtbiZxdW90O31dLCZxdW90O19fdHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXImcXVvdDt9LCZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkubW9iaWxlQ29sdW1ucy4wJnF1b3Q7OnsmcXVvdDt0aXRsZSZxdW90OzomcXVvdDsmcXVvdDssJnF1b3Q7bGlua3MmcXVvdDs6W3smcXVvdDt0eXBlJnF1b3Q7OiZxdW90O2lkJnF1b3Q7LCZxdW90O2dlbmVyYXRlZCZxdW90Ozp0cnVlLCZxdW90O2lkJnF1b3Q7OiZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkubW9iaWxlQ29sdW1ucy4wLmxpbmtzLjAmcXVvdDssJnF1b3Q7dHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSx7JnF1b3Q7dHlwZSZxdW90OzomcXVvdDtpZCZxdW90OywmcXVvdDtnZW5lcmF0ZWQmcXVvdDs6dHJ1ZSwmcXVvdDtpZCZxdW90OzomcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLm1vYmlsZUNvbHVtbnMuMC5saW5rcy4xJnF1b3Q7LCZxdW90O3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30seyZxdW90O3R5cGUmcXVvdDs6JnF1b3Q7aWQmcXVvdDssJnF1b3Q7Z2VuZXJhdGVkJnF1b3Q7OnRydWUsJnF1b3Q7aWQmcXVvdDs6JnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5tb2JpbGVDb2x1bW5zLjAubGlua3MuMiZxdW90OywmcXVvdDt0eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlckxpbmsmcXVvdDt9LHsmcXVvdDt0eXBlJnF1b3Q7OiZxdW90O2lkJnF1b3Q7LCZxdW90O2dlbmVyYXRlZCZxdW90Ozp0cnVlLCZxdW90O2lkJnF1b3Q7OiZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkubW9iaWxlQ29sdW1ucy4wLmxpbmtzLjMmcXVvdDssJnF1b3Q7dHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSx7JnF1b3Q7dHlwZSZxdW90OzomcXVvdDtpZCZxdW90OywmcXVvdDtnZW5lcmF0ZWQmcXVvdDs6dHJ1ZSwmcXVvdDtpZCZxdW90OzomcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLm1vYmlsZUNvbHVtbnMuMC5saW5rcy40JnF1b3Q7LCZxdW90O3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyTGluayZxdW90O30seyZxdW90O3R5cGUmcXVvdDs6JnF1b3Q7aWQmcXVvdDssJnF1b3Q7Z2VuZXJhdGVkJnF1b3Q7OnRydWUsJnF1b3Q7aWQmcXVvdDs6JnF1b3Q7JFJPT1RfUVVFUlkud2ViQ29uc3VtZXJGb290ZXIoe1wmcXVvdDtiYXNlVXJsXCZxdW90OzpcJnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7XCZxdW90OyxcJnF1b3Q7dXJsT3B0aW9uc1wmcXVvdDs6e319KS5tb2JpbGVDb2x1bW5zLjAubGlua3MuNSZxdW90OywmcXVvdDt0eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlckxpbmsmcXVvdDt9XSwmcXVvdDtfX3R5cGVuYW1lJnF1b3Q7OiZxdW90O1dlYkNvbnN1bWVyRm9vdGVyQ29sdW1uJnF1b3Q7fSwmcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLm1vYmlsZUNvbHVtbnMuMC5saW5rcy4wJnF1b3Q7OnsmcXVvdDtocmVmJnF1b3Q7OiZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO2Fib3V0JnF1b3Q7LCZxdW90O3RleHQmcXVvdDs6JnF1b3Q7QWJvdXQmcXVvdDssJnF1b3Q7X190eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlckxpbmsmcXVvdDt9LCZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkubW9iaWxlQ29sdW1ucy4wLmxpbmtzLjEmcXVvdDs6eyZxdW90O2hyZWYmcXVvdDs6JnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7YmxvZy55ZWxwLmNvbSYjeDJGOyZxdW90OywmcXVvdDt0ZXh0JnF1b3Q7OiZxdW90O0Jsb2cmcXVvdDssJnF1b3Q7X190eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlckxpbmsmcXVvdDt9LCZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkubW9iaWxlQ29sdW1ucy4wLmxpbmtzLjImcXVvdDs6eyZxdW90O2hyZWYmcXVvdDs6JnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAtc3VwcG9ydC5jb20mI3gyRjsmcXVvdDssJnF1b3Q7dGV4dCZxdW90OzomcXVvdDtTdXBwb3J0JnF1b3Q7LCZxdW90O19fdHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSwmcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLm1vYmlsZUNvbHVtbnMuMC5saW5rcy4zJnF1b3Q7OnsmcXVvdDtocmVmJnF1b3Q7OiZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO3N0YXRpYz9wPXRvcyZxdW90OywmcXVvdDt0ZXh0JnF1b3Q7OiZxdW90O1Rlcm1zJnF1b3Q7LCZxdW90O19fdHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fSwmcXVvdDskUk9PVF9RVUVSWS53ZWJDb25zdW1lckZvb3Rlcih7XCZxdW90O2Jhc2VVcmxcJnF1b3Q7OlwmcXVvdDtodHRwczomI3gyRjsmI3gyRjt3d3cueWVscC5jb20mI3gyRjtcJnF1b3Q7LFwmcXVvdDt1cmxPcHRpb25zXCZxdW90Ozp7fX0pLm1vYmlsZUNvbHVtbnMuMC5saW5rcy40JnF1b3Q7OnsmcXVvdDtocmVmJnF1b3Q7OiZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO3RvcyYjeDJGO3ByaXZhY3lfcG9saWN5JnF1b3Q7LCZxdW90O3RleHQmcXVvdDs6JnF1b3Q7UHJpdmFjeSBQb2xpY3kmcXVvdDssJnF1b3Q7X190eXBlbmFtZSZxdW90OzomcXVvdDtXZWJDb25zdW1lckZvb3RlckxpbmsmcXVvdDt9LCZxdW90OyRST09UX1FVRVJZLndlYkNvbnN1bWVyRm9vdGVyKHtcJnF1b3Q7YmFzZVVybFwmcXVvdDs6XCZxdW90O2h0dHBzOiYjeDJGOyYjeDJGO3d3dy55ZWxwLmNvbSYjeDJGO1wmcXVvdDssXCZxdW90O3VybE9wdGlvbnNcJnF1b3Q7Ont9fSkubW9iaWxlQ29sdW1ucy4wLmxpbmtzLjUmcXVvdDs6eyZxdW90O2hyZWYmcXVvdDs6JnF1b3Q7aHR0cHM6JiN4MkY7JiN4MkY7d3d3LnllbHAuY29tJiN4MkY7dG9zJiN4MkY7cHJpdmFjeV9wb2xpY3kjY29va2llcyZxdW90OywmcXVvdDt0ZXh0JnF1b3Q7OiZxdW90O01hbmFnZSBDb29raWVzJnF1b3Q7LCZxdW90O19fdHlwZW5hbWUmcXVvdDs6JnF1b3Q7V2ViQ29uc3VtZXJGb290ZXJMaW5rJnF1b3Q7fX0tLT48L3NjcmlwdD48L3llbHAtcmVhY3Qtcm9vdD4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KPCEtLSBnb29nbGVfYWRfc2VjdGlvbl9lbmQgLS0+CgogICAgICAgICAgICA8ZGl2IHN0eWxlPSJkaXNwbGF5OiBub25lOyIgaWQ9InBhZ2UtcG9wdXBzIj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAKICAgICAgICAKCiAgICAgICAgPC9kaXY+IAoKICAgICAgICAgICAgCgogICAgPHNjcmlwdD4gICAgICAgICAgICB5Q29uZmlnID0geyJpc0xvZ2dlZEluIjogZmFsc2UsICJpc0xpdmUiOiB0cnVlLCAiaXNTaXRSZXBFbmFibGVkIjogdHJ1ZSwgImlzV2Vidmlld1JlcXVlc3QiOiBmYWxzZSwgIndlYnZpZXdJbmZvIjoge30sICJ3ZWJ2aWV3RmxvdyI6IG51bGwsICJlbmFibGVkU2l0UmVwQ2hhbm5lbHMiOiB7ImZyb250ZW5kX3BlcmZvcm1hbmNlIjogdHJ1ZSwgInNlYXJjaF9zdWdnZXN0X2V2ZW50cyI6IHRydWUsICJ0cmFmZmljX3F1YWxpdHkiOiB0cnVlfSwgImNvb2tpZXMiOiB7IkFEX0NMSUNLUyI6ICJhZGMiLCAiQURNSU5fQ01fU0NPUkVCT0FSRF9TRVRUSU5HUyI6ICJhY21zIiwgIkFETUlOX1NFQVJDSF9VU0VSREFUQSI6ICJ1ZCIsICJBUFBfUElUQ0hfQ0xPU0VEIjogImFwIiwgIlhDSiI6ICJ4Y2oiLCAiQ09PS0lFX0lORk8iOiAiY2ltIiwgIkRFQlVHIjogImRlYnVnIiwgIkRJU01JU1NJQkxFX01FU1NBR0VfQ09PS0lFIjogImRtIiwgIkVYUFJfT1ZFUlJJREUiOiAiZXhwciIsICJIT01FUEFHRV9TRVJWSUNFX0FDVElWSVRZX0ZFRUQiOiAiaHNmZCIsICJMT0NBVElPTiI6ICJsb2NhdGlvbiIsICJNRVNTQUdFX1NFTkRFUl9QQVNTRURfQ0FQVENIQSI6ICJtc3BjIiwgIlBSRVZJT1VTX1VOSVFVRV9SRVFVRVNUX0lEIjogInBpZCIsICJQUklWQUNZX1BPTElDWV9OT1RJQ0UiOiAicHBuIiwgIlFVQU5UQ0FTVCI6ICJxbnRjc3QiLCAiUkVDRU5UX0xPQ0FUSU9OUyI6ICJyZWNlbnRsb2NhdGlvbnMiLCAiUkVTRVJWQVRJT05fU0VBUkNIX1BBUkFNUyI6ICJyc3AiLCAiU0lHTlVQX1RSQUNLIjogInN0cmFjayIsICJVUEdSQURFU19JTl9BUlJFQVJTIjogInVpYSIsICJVU0VEX0xPQ0FMRV9TRUxFQ1RPUiI6ICJ1c2VkX2xvY2FsZV9zZWxlY3RvciIsICJNT19NQVAiOiAibW1wIn0sICJpbWFnZVVybHMiOiB7Im1hcE1hcmtlcnMiOiAiaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzLzIvd3d3L2ltZy9mY2E4M2RkYjgwZjIvbWFwL21hcF9tYXJrZXJzX3Nwcml0ZS5wbmciLCAic3RhcnMiOiAiaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzL3NydjAveWVscF9kZXNpZ25fd2ViLzliZWMyMDQ1ODQ1Yy9hc3NldHMvaW1nL3N0YXJzL3N0YXJzLnBuZyJ9LCAiY29tc2NvcmUiOiB7ImMxIjogMiwgImMyIjogNzEzMDUxMSwgImMzIjogIiIsICJjNCI6ICIiLCAiYzUiOiAiIiwgImM2IjogIiIsICJjMTUiOiAiIn0sICJ1YUluZm8iOiB7ImRldmljZSI6IHsiZmFtaWx5IjogIk90aGVyIiwgImJyYW5kIjogbnVsbCwgIm1vZGVsIjogbnVsbH0sICJvcyI6IHsiZmFtaWx5IjogIk90aGVyIiwgIm1ham9yIjogbnVsbCwgIm1pbm9yIjogbnVsbCwgInBhdGNoIjogbnVsbCwgInBhdGNoX21pbm9yIjogbnVsbH0sICJzdHJpbmciOiAiRmFyYWRheSB2Mi42LjAiLCAidXNlcl9hZ2VudCI6IHsiZmFtaWx5IjogIk90aGVyIiwgIm1ham9yIjogbnVsbCwgIm1pbm9yIjogbnVsbCwgInBhdGNoIjogbnVsbH0sICJhdHRyaWJ1dGVzIjoge319LCAiaXNCdWdzbmFnRW5hYmxlZCI6IHRydWUsICJkZXByZWNhdGVkRW5jcnlwdGVkWVVWIjogIi05ZjZtVWJSNnh0SkR6Y0xHVWhDbFdvaUVZMER0R1NtWThNV3pySDBGUERxa1B0RERRUzFUVnZPMDlPN3R1OU9pdFhtQ1RIRWQ4VXVQUkRvcC1qV0xLMzN6NFRvdlBKdiIsICJ5ZWxwY29kZVRlbXBsYXRlVmVyc2lvbiI6ICJkODlmODZlOWFjIiwgInZlbmRvckV4dGVybmFsVVJMcyI6IHt9LCAiaXNDbGllbnRFcnJvcnNFbmFibGVkIjogZmFsc2UsICJjb29raWVEb21haW4iOiAiLnd3dy55ZWxwLmNvbSIsICJ1bmlxdWVSZXF1ZXN0SWQiOiAiMzIxNjQ4OWNlMWZjMGUzMiIsICJyZWNhcHRjaGFQdWJsaWNLZXkiOiAiNkxlNU9TWVRBQUFBQUR5OHNlVHJXVDBlcXBTNzk1aVYzMkdtOUFnMSIsICJyZWNhcHRjaGFWM1B1YmxpY0tleSI6ICI2TGUybEtRVUFBQUFBTU1IUnVIUGFEd09NU29kTWcyRmlWVEdTdzJZIiwgImhjYXB0Y2hhU2l0ZWtleSI6ICI2NjYwZDRkZi0xODg0LTRhYzYtYTkzMy1lNWYzYmQ0NjA5NDYiLCAidmlzaWJsZUhjYXB0Y2hhU2l0ZWtleSI6ICIzYWM0ZGJjZS1jMTQxLTQ1ZjctYmZmZi1lYTNjMjNkYzViNDIiLCAiZ29vZ2xlUGxhY2VzVXJsIjogIi8vbWFwcy5nb29nbGVhcGlzLmNvbS9tYXBzL2FwaS9qcz9rZXk9QUl6YVN5QnlUNlRYVkw0alNmME1yelJ3ZzBlRzY2QTgtUDRyMHBzXHUwMDI2bGFuZ3VhZ2U9ZW5cdTAwMjZsaWJyYXJpZXM9cGxhY2VzIn07Cjwvc2NyaXB0PgogICAgICAgIAoKICAgICAgICAgICAgCgogICAgICAgICAgICAKCgoKICAgICAgICAgICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2Fzc2V0cy8yL3d3dy9qcy9iZDU1ZDg3MmFkZWMvYXNzZXRzL3ZlbmRvcl9leHRlcm5hbC9jbG9zdXJlX2xvY2FsaXphdGlvbnNfZW5fVVMubWluLmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0PgoKICAgICAgICA8c2NyaXB0IGlkPSJfX0xPQURBQkxFX1JFUVVJUkVEX0NIVU5LU19fIiB0eXBlPSJhcHBsaWNhdGlvbi9qc29uIj5bXTwvc2NyaXB0PjxzY3JpcHQgaWQ9Il9fTE9BREFCTEVfUkVRVUlSRURfQ0hVTktTX19fZXh0IiB0eXBlPSJhcHBsaWNhdGlvbi9qc29uIj57Im5hbWVkQ2h1bmtzIjogW119PC9zY3JpcHQ+CgogICAgICAgICAgICA8c2NyaXB0PiAgICAgICAgICAgIHdpbmRvdy55ZWxwID0gd2luZG93LnllbHAgfHwge307CiAgICAgICAgICAgIHdpbmRvdy55ZWxwLnJlYWN0UmVuZGVyTW9kZSA9ICJsZWdhY3kiOwo8L3NjcmlwdD4KCgogICAgICAgIDxzY3JpcHQgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvc3J2MC9jZG5fYXNzZXRzLzZmZWY1NWM2MmRmMy9hc3NldHMvdmVuZG9yL2JhYmVsLXBvbHlmaWxsLzYuMjMuMC9wb2x5ZmlsbC5taW4uanMiIGNyb3Nzb3JpZ2luPSJhbm9ueW1vdXMiIGludGVncml0eT0ic2hhMzg0LUZiSFVhUjY5YTgyOGhxV2pQdzRQRmxsRmoxYnZ2ZUtPVFdPUkdreW9zQ3c3MjBIWHkvNTYrMmhTdVFEYW9nTWIiIG5vbmNlPSIzMjE2NDg5YyI+PC9zY3JpcHQ+PHNjcmlwdCBub25jZT0iMzIxNjQ4OWMiPgogICAgICAgICAgICB3aW5kb3cueVBlcmZUaW1pbmdzLnB1c2goWyJBU1lOQ19KUzpsb2FkX2pxdWVyeTpzdGFydCIsIChuZXcgRGF0ZSgpKS5nZXRUaW1lKCldKTsKICAgICAgICAgICAgPC9zY3JpcHQ+PHNjcmlwdCBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2Fzc2V0cy9zcnYwL2Nkbl9hc3NldHMvMzU3NmE2ZTczYzlkL2Fzc2V0cy92ZW5kb3IvanF1ZXJ5LzEuOC4zL2pxdWVyeS5taW4uanMiIG5vbmNlPSIzMjE2NDg5YyI+PC9zY3JpcHQ+PHNjcmlwdCBub25jZT0iMzIxNjQ4OWMiPmlmKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09ICdpbnRlcmFjdGl2ZScpIGpRdWVyeS5yZWFkeSgpOwogICAgICAgICAgICB3aW5kb3cueVBlcmZUaW1pbmdzLnB1c2goWyJBU1lOQ19KUzpsb2FkX2pxdWVyeTplbmQiLCAobmV3IERhdGUoKSkuZ2V0VGltZSgpXSk7CiAgICAgICAgICAgIAogICAgICAgICAgICB3aW5kb3cueVBlcmZUaW1pbmdzLnB1c2goWyJBU1lOQ19KUzpsb2FkX21vZHVsZXM6c3RhcnQiLCAobmV3IERhdGUoKSkuZ2V0VGltZSgpXSk7CiAgICAgICAgICAgIAogICAgICAgIHlDb25maWcgPSB3aW5kb3cueUNvbmZpZyB8fCB7fTsKICAgICAgICB5Q29uZmlnLnZlbmRvckV4dGVybmFsVVJMcyA9IHlDb25maWcudmVuZG9yRXh0ZXJuYWxVUkxzIHx8IHt9OwogICAgICAgIDwvc2NyaXB0PjxzY3JpcHQgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvc3J2MC9jZG5fYXNzZXRzLzYzZDQ5OGUxNDNmNC9hc3NldHMvdmVuZG9yL3JlYWN0LzE2LjE0LjAvdW1kL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiBjcm9zc29yaWdpbj0iYW5vbnltb3VzIiBpbnRlZ3JpdHk9InNoYTM4NC1ON3k1U1NBb29ObElmYjlINzUwR1I4MnVma24xSlhKRmFDamc4cG10K09adUtjWm9UdlRHZm9nNGQ0dGFHL2NGIiBub25jZT0iMzIxNjQ4OWMiPjwvc2NyaXB0PjxzY3JpcHQgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvc3J2MC9jZG5fYXNzZXRzL2M1YWJjODc1NDFmZS9hc3NldHMvdmVuZG9yL3JlYWN0LWRvbS8xNi4xNC4wL3VtZC9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiIGNyb3Nzb3JpZ2luPSJhbm9ueW1vdXMiIGludGVncml0eT0ic2hhMzg0LWo3V21NdjNPTzZuOHBaUkFUT3NhTVZFZFpjSHBvYVRCSWlrYS9sOTJZTTJBa0VleDcyUXVubFRRbGdtdStwSTgiIG5vbmNlPSIzMjE2NDg5YyI+PC9zY3JpcHQ+PHNjcmlwdCBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2Fzc2V0cy9wdWJsaWMvbW9kdWxlX3llbHBfbWFpbl93ZWJwYWNrX3J1bnRpbWUueWppLTY3ZTM5ZTJmMzI3YWZhNTdlNzkyLmpzIiBjcm9zc29yaWdpbj0iYW5vbnltb3VzIiBub25jZT0iMzIxNjQ4OWMiPjwvc2NyaXB0PjxzY3JpcHQgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvcHVibGljL21vZHVsZV95ZWxwX2pzX3BhY2thZ2VzLnlqaS0xNWM2MTU5M2ZmMDgwMDY0NjlhYS5jaHVuay5qcyIgY3Jvc3NvcmlnaW49ImFub255bW91cyIgbm9uY2U9IjMyMTY0ODljIj48L3NjcmlwdD48c2NyaXB0IHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzL3B1YmxpYy9jb21tb25fY2h1bmsueWppLTBmNGRhODA4NmFlMTBiNTU2MDRjLmNodW5rLmpzIiBjcm9zc29yaWdpbj0iYW5vbnltb3VzIiBub25jZT0iMzIxNjQ4OWMiPjwvc2NyaXB0PjxzY3JpcHQgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvcHVibGljL21vZHVsZV9jb3JlLnlqaS04YjRjYTVkZTVjNmEzM2IzZTVhZS5jaHVuay5qcyIgY3Jvc3NvcmlnaW49ImFub255bW91cyIgbm9uY2U9IjMyMTY0ODljIj48L3NjcmlwdD48c2NyaXB0IHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzL3B1YmxpYy9tb2R1bGVfanF1ZXJ5LnlqaS00ZWI1MTQ2ZWVkMDNlYzFlM2EwYy5jaHVuay5qcyIgY3Jvc3NvcmlnaW49ImFub255bW91cyIgbm9uY2U9IjMyMTY0ODljIj48L3NjcmlwdD48c2NyaXB0IHNyYz0iaHR0cHM6Ly9zMy1tZWRpYTAuZmwueWVscGNkbi5jb20vYXNzZXRzL3B1YmxpYy9tb2R1bGVfbWlzY19yZWFjdC55amktM2NhN2Y2NGIyNjg5ZTc4NzA5ZTAuY2h1bmsuanMiIGNyb3Nzb3JpZ2luPSJhbm9ueW1vdXMiIG5vbmNlPSIzMjE2NDg5YyI+PC9zY3JpcHQ+PHNjcmlwdCBzcmM9Imh0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2Fzc2V0cy9wdWJsaWMvbW9kdWxlX21lbnUueWppLTY4ZjU5NDg2ZTA2MzkwNzg1ZmUxLmNodW5rLmpzIiBjcm9zc29yaWdpbj0iYW5vbnltb3VzIiBub25jZT0iMzIxNjQ4OWMiPjwvc2NyaXB0PjxzY3JpcHQgc3JjPSJodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvcHVibGljL21vZHVsZV9iaXpfZGV0YWlscy55amktMWVkZTU0NDk5ODYwYWIxYzdlNGYuY2h1bmsuanMiIGNyb3Nzb3JpZ2luPSJhbm9ueW1vdXMiIG5vbmNlPSIzMjE2NDg5YyI+PC9zY3JpcHQ+PHNjcmlwdCBub25jZT0iMzIxNjQ4OWMiPgogICAgICAgICAgICAgICAgeUNvbmZpZy52ZW5kb3JFeHRlcm5hbFVSTHNbInBsdWdpbi1kZXRlY3QiXT1bJ2h0dHBzOi8vczMtbWVkaWEwLmZsLnllbHBjZG4uY29tL2Fzc2V0cy8yL3d3dy9qcy9iZmQ2MmIzMzBjN2EvYXNzZXRzL3ZlbmRvcl9leHRlcm5hbC9wbHVnaW4tZGV0ZWN0LTAuNi4zLm1pbi5qcyddCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIHlDb25maWcudmVuZG9yRXh0ZXJuYWxVUkxzWyJmYXN0LWNsaWNrIl09WydodHRwczovL3MzLW1lZGlhMC5mbC55ZWxwY2RuLmNvbS9hc3NldHMvMi93d3cvanMvOTYwZGYwNmNlNDU4L2Fzc2V0cy92ZW5kb3JfZXh0ZXJuYWwvZmFzdGNsaWNrLm1pbi5qcyddCiAgICAgICAgICAgICAgICB5ZWxwLmluaXQuYXR0YWNoR2hvc3RIb3ZlcmNhcmQoInF5cGUiLCAiICAgIFx1MDAzY2RpdiBpZD1cInF5cGUtZ2hvc3QtdXNlci1ob3ZlcmNhcmRcIlx1MDAzZVxuICAgICAgICBcdTAwM2NkaXYgY2xhc3M9XCJ3aGF0c3RoaXMtaG92ZXJjYXJkXCJcdTAwM2VcbiAgICAgICAgICAgIFx1MDAzY2gzXHUwMDNlV2hhdCdzIFRoaXM/XHUwMDNjL2gzXHUwMDNlXG4gICAgICAgICAgICBcdTAwM2NwXHUwMDNlVGhpcyB1c2VyIGhhcyBhcnJpdmVkIGZyb20gUXlwZSwgYSBjb21wYW55IGFjcXVpcmVkIGJ5IFllbHAgaW4gMjAxMi4gV2UgaGF2ZSBpbnRlZ3JhdGVkIHRoZSB0d28gc2l0ZXMgdG8gYnJpbmcgeW91IG9uZSBncmVhdCBsb2NhbCBleHBlcmllbmNlLlx1MDAzYy9wXHUwMDNlXG4gICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICBcdTAwM2MvZGl2XHUwMDNlXG4iKTsKeWVscC5pbml0LmF0dGFjaEdob3N0SG92ZXJjYXJkKCJyayIsICIgICAgXHUwMDNjZGl2IGlkPVwicmstZ2hvc3QtdXNlci1ob3ZlcmNhcmRcIlx1MDAzZVxuICAgICAgICBcdTAwM2NkaXYgY2xhc3M9XCJ3aGF0c3RoaXMtaG92ZXJjYXJkXCJcdTAwM2VcbiAgICAgICAgICAgIFx1MDAzY2gzXHUwMDNlV2hhdCdzIFRoaXM/XHUwMDNjL2gzXHUwMDNlXG4gICAgICAgICAgICBcdTAwM2NwXHUwMDNlVGhpcyB1c2VyIGhhcyBhcnJpdmVkIGZyb20gUmVzdGF1cmFudC1Lcml0aWsuZGUsIGEgY29tcGFueSBhY3F1aXJlZCBieSBZZWxwIGluIDIwMTQuIFdlIGhhdmUgaW50ZWdyYXRlZCB0aGUgdHdvIHNpdGVzIHRvIGJyaW5nIHlvdSBvbmUgZ3JlYXQgbG9jYWwgZXhwZXJpZW5jZS5cdTAwM2MvcFx1MDAzZVxuICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgXHUwMDNjL2Rpdlx1MDAzZVxuIik7CnllbHAuaW5pdC5hdHRhY2hHaG9zdEhvdmVyY2FyZCgiY2l0eXZveCIsICIgICAgXHUwMDNjZGl2IGlkPVwiY2l0eXZveC1naG9zdC11c2VyLWhvdmVyY2FyZFwiXHUwMDNlXG4gICAgICAgIFx1MDAzY2RpdiBjbGFzcz1cIndoYXRzdGhpcy1ob3ZlcmNhcmRcIlx1MDAzZVxuICAgICAgICAgICAgXHUwMDNjaDNcdTAwM2VXaGF0J3MgVGhpcz9cdTAwM2MvaDNcdTAwM2VcbiAgICAgICAgICAgIFx1MDAzY3BcdTAwM2VUaGlzIHVzZXIgaGFzIGFycml2ZWQgZnJvbSBDaXR5dm94LCBhIGNvbXBhbnkgYWNxdWlyZWQgYnkgWWVscCBpbiAyMDE0LiBXZSBoYXZlIGludGVncmF0ZWQgdGhlIHR3byBzaXRlcyB0byBicmluZyB5b3Ugb25lIGdyZWF0IGxvY2FsIGV4cGVyaWVuY2UuXHUwMDNjL3BcdTAwM2VcbiAgICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuICAgIFx1MDAzYy9kaXZcdTAwM2VcbiIpOwp5ZWxwLnd3dy5pbml0LmluaXRBc3luY0ltYWdlTG9hZGVyKCk7CnllbHAucGFnZXMuaW5pdCgpOwp5ZWxwLmNvbW1vbi5pbml0LmZhY2Vib29rKCI5NzUzNDc1MzE2MSIsICIvL2Nvbm5lY3QuZmFjZWJvb2submV0L2VuX1VTL3Nkay5qcyIsICJ2MTUuMCIsICJ2MTUiLCBbImVtYWlsIiwgInVzZXJfYmlydGhkYXkiLCAidXNlcl9nZW5kZXIiXSwgW10sIFsidXNlcl9mcmllbmRzIl0sIHRydWUpOwp3aW5kb3cuWWVscFJlYWN0Q29uc3VtZXJIZWFkZXIuaHlkcmF0ZVJlYWN0Q29tcG9uZW50KCk7CndpbmRvdy5ZZWxwUmVhY3RGb290ZXIuaHlkcmF0ZVJlYWN0Q29tcG9uZW50KCk7CnllbHAud3d3LmluaXQubWVudS5pbml0TWVudSgiL21lbnUvU2s4OVpsbENiV1ZxQTRNX01vSjdMZy9mZWVkYmFja19mb3JtIiwgIi5qcy1tZW51LWZlZWRiYWNrLWxpbmsiKTsKeWVscC53d3cuaW5pdC5iaXpfZGV0YWlscy5pbml0UGxhdGZvcm0oIkJJWl9NRU5VIik7CgogICAgICAgICAgICB2YXIgZW5kID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7CiAgICAgICAgICAgIHdpbmRvdy55UGVyZlRpbWluZ3MucHVzaChbIkFTWU5DX0pTOmxvYWRfbW9kdWxlczplbmQiLCBlbmRdKTsKICAgICAgICAgICAgd2luZG93LnlQZXJmVGltaW5ncy5wdXNoKFsiSlNfVElNSU5HOm1vZHVsZXNfZXhlY3V0ZWQ6ZW5kIiwgZW5kXSk7CiAgICAgICAgICAgIDwvc2NyaXB0PgoKICAgICAgICA8c2NyaXB0PgogICAgICAgICAgICAoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICB2YXIgbWFpbiA9IG51bGw7CgogICAgICAgICAgICAgICAgbWFpbiA9IGZ1bmN0aW9uIChzZXJ2aWNlTmFtZSwgc2hhKSB7d2luZG93LnllbHBfcmVhY3QgPSB7c2VydmljZU5hbWU6IHNlcnZpY2VOYW1lLHNoYTogc2hhfTt9OwoKICAgICAgICAgICAgICAgIGlmIChtYWluID09PSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgdGhyb3cgJ2ludmFsaWQgaW5saW5lIHNjcmlwdCwgbWlzc2luZyBtYWluIGRlY2xhcmF0aW9uLic7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBtYWluKCJ5ZWxwX21haW4ud3d3IiwiZDg5Zjg2ZTlhYzM3Nzk3OWYwZGM4YjA0ZmY5OGFmMTNkZDk3ZmMwMiIpOwogICAgICAgICAgICB9KSgpOwogICAgPC9zY3JpcHQ+CgogICAgPHNjcmlwdD4gICAgICAgICAgICAgICAgd2luZG93LndlYkxvZ0luZm8gPSB0cnVlOwo8L3NjcmlwdD4KCiAgICA8c2NyaXB0PiAgICAgICAgICAgICAgICB3aW5kb3cueUNsaWVudExvZ0luZm8gPSB0cnVlOwo8L3NjcmlwdD4KCiAgICAgICAgICAgICAgICA8c2NyaXB0IG5vbmNlPSIzMjE2NDg5YyI+CiAgICAgICAgICAgIChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIHZhciBtYWluID0gbnVsbDsKCiAgICAgICAgICAgICAgICB2YXIgbWFpbj1mdW5jdGlvbigpe2lmKFsiaVBob25lIiwiaVBvZCIsImlQYWQiXS5pbmRleE9mKG5hdmlnYXRvci5wbGF0Zm9ybSk9PT0tMXx8IXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUpe3JldHVybn13aW5kb3cuYmFubmVyRGV0ZWN0aW9uSW5pdGlhbFNjcm9sbD13aW5kb3cuYmFubmVyRGV0ZWN0aW9uSW5pdGlhbFNjcm9sbHx8d2luZG93LnNjcm9sbFl8fC0xMDA7cmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uKCl7d2luZG93LnNjcm9sbFRvKDAsLTEwMCk7cmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uKCl7d2luZG93LnNjcm9sbEJ5KDAsMSk7cmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uKCl7d2luZG93LnVzZXJIYXNZZWxwQXBwPSF3aW5kb3cuc2Nyb2xsWTt3aW5kb3cuc2Nyb2xsVG8oMCx3aW5kb3cuYmFubmVyRGV0ZWN0aW9uSW5pdGlhbFNjcm9sbCl9KX0pfSl9OwoKICAgICAgICAgICAgICAgIGlmIChtYWluID09PSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgdGhyb3cgJ2ludmFsaWQgaW5saW5lIHNjcmlwdCwgbWlzc2luZyBtYWluIGRlY2xhcmF0aW9uLic7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBtYWluKCk7CiAgICAgICAgICAgIH0pKCk7CiAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgIDxzY3JpcHQgbm9uY2U9IjMyMTY0ODljIj4KICAgICAgICAgICAgKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgdmFyIG1haW4gPSBudWxsOwoKICAgICAgICAgICAgICAgIHZhciBtYWluPWZ1bmN0aW9uIGxvYWRTcGljZShpKXt2YXIgbD0wO3ZhciBtPTE7dmFyIGo9Mjt2YXIgZz0iMCI7dmFyIGs9IjEiO3ZhciBuPWZ1bmN0aW9uKCl7aWYoZG9jdW1lbnQucXVlcnlTZWxlY3Rvcil7cmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIi5kZWxheS1zcGljZSIpfXZhciBvPWRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJkaXYiKTt2YXIgcj1vLmxlbmd0aDt2YXIgcT1uZXcgUmVnRXhwKCIoXnxcXHMpZGVsYXktc3BpY2UoXFxzfCQpIik7Zm9yKHZhciBwPTA7cDxyOysrcCl7aWYocS50ZXN0KG9bcF0uY2xhc3NOYW1lKSl7cmV0dXJuIG9bcF19fXJldHVybiBudWxsfTtmdW5jdGlvbiBlKCl7cmV0dXJuKHdpbmRvdy5fZ2FVc2VyUHJlZnMmJndpbmRvdy5fZ2FVc2VyUHJlZnNbImlvbyJdJiZ0eXBlb2Yod2luZG93Ll9nYVVzZXJQcmVmc1siaW9vIl0pPT09ImZ1bmN0aW9uIiYmd2luZG93Ll9nYVVzZXJQcmVmc1siaW9vIl0oKT09PXRydWV8fGZhbHNlKT8iMSI6IjAiCn1mdW5jdGlvbiBmKCl7dmFyIG89WyJfX3dlYmRyaXZlcl9ldmFsdWF0ZSIsIl9fc2VsZW5pdW1fZXZhbHVhdGUiLCJfX3dlYmRyaXZlcl9zY3JpcHRfZnVuY3Rpb24iLCJfX3dlYmRyaXZlcl9zY3JpcHRfZnVuYyIsIl9fd2ViZHJpdmVyX3NjcmlwdF9mbiIsIl9fZnhkcml2ZXJfZXZhbHVhdGUiLCJfX2RyaXZlcl91bndyYXBwZWQiLCJfX3dlYmRyaXZlcl91bndyYXBwZWQiLCJfX2RyaXZlcl9ldmFsdWF0ZSIsIl9fc2VsZW5pdW1fdW53cmFwcGVkIiwiX19meGRyaXZlcl91bndyYXBwZWQiLF07dmFyIHE9WyJfcGhhbnRvbSIsIl9fbmlnaHRtYXJlIiwiX3NlbGVuaXVtIiwiY2FsbFBoYW50b20iLCJjYWxsU2VsZW5pdW0iLCJfU2VsZW5pdW1fSURFX1JlY29yZGVyIixdO3ZhciByPTA7Zm9yKHZhciBwPTA7cDxxLmxlbmd0aDtwKyspe2lmKHR5cGVvZiB3aW5kb3dbcVtwXV0hPT0idW5kZWZpbmVkIil7cis9MX19Zm9yKHZhciBwPTA7cDxvLmxlbmd0aDtwKyspe2lmKHR5cGVvZiB3aW5kb3cuZG9jdW1lbnRbb1twXV0hPT0idW5kZWZpbmVkIil7cis9MQp9fXJldHVybiByfWZ1bmN0aW9uIGQoKXtpZih0eXBlb2Ygd2luZG93Lm5hdmlnYXRvci5wZXJtaXNzaW9ucyE9PSJ1bmRlZmluZWQiKXt2YXIgbz13aW5kb3cubmF2aWdhdG9yLnBlcm1pc3Npb25zO3JldHVybihvLnF1ZXJ5LnRvU3RyaW5nKCkhPT0iZnVuY3Rpb24gcXVlcnkoKSB7IFtuYXRpdmUgY29kZV0gfSJ8fG8ucXVlcnkudG9TdHJpbmcudG9TdHJpbmcoKSE9PSJmdW5jdGlvbiB0b1N0cmluZygpIHsgW25hdGl2ZSBjb2RlXSB9Inx8by5oYXNPd25Qcm9wZXJ0eSgicXVlcnkiKSk/MTowfXJldHVybiAyfWZ1bmN0aW9uIGgocSxwKXt2YXIgcjtpZihwPT09bCl7cj1bIi9hZF9zcCIsImljZT8iLCJyPSIsaV19ZWxzZXtyPVsiL3NwIiwiaWNlPyIsInI9IixpXTtpZihwPT09ail7ci5wdXNoKCImbG9nX2FkX3NwaWNlPTEiKX19ci5wdXNoKCImcGFnZXZpcz0iK3EpO3IucHVzaCgiJmdhYmxvY2s9IitlKCkpO2lmKHdpbmRvdy53ZWJMb2dJbmZvJiYibmF2aWdhdG9yIiBpbiB3aW5kb3cpe3IucHVzaCgiJndlYmRyaXZlcj0iKygoIndlYmRyaXZlciIgaW4gd2luZG93Lm5hdmlnYXRvciYmd2luZG93Lm5hdmlnYXRvci53ZWJkcml2ZXIpPzE6MCkpCn1pZih3aW5kb3cueUNsaWVudExvZ0luZm8pe2lmKCJuYXZpZ2F0b3IiIGluIHdpbmRvdyl7aWYodHlwZW9mIHdpbmRvdy5uYXZpZ2F0b3IubGFuZ3VhZ2VzIT09InVuZGVmaW5lZCIpe3IucHVzaCgiJmxhbmd1YWdlcz0iK3dpbmRvdy5uYXZpZ2F0b3IubGFuZ3VhZ2VzLmxlbmd0aCl9aWYodHlwZW9mIHdpbmRvdy5uYXZpZ2F0b3IucGx1Z2lucyE9PSJ1bmRlZmluZWQiKXtyLnB1c2goIiZwbHVnaW5zPSIrd2luZG93Lm5hdmlnYXRvci5wbHVnaW5zLmxlbmd0aCl9fXIucHVzaCgiJmNocm9tZT0iKygoISF3aW5kb3cuY2hyb21lKT8xOjApKTtyLnB1c2goIiZwZXJtaXNzaW9uc1Nwb29mZWQ9IitkKCkpO3IucHVzaCgiJmhlYWRsZXNzVmFyQ291bnQ9IitmKCkpfXZhciBvPW5ldyBJbWFnZSgpO28uc3JjPXIuam9pbigiIil9ZnVuY3Rpb24gYihvKXtpZihuKCkpe2gobyxtKTtjKG8pfWVsc2V7aChvLGopfX1mdW5jdGlvbiBjKG8pe2lmKG4oKSl7d2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24oKXtjKG8pCn0sNTAwKX1lbHNle2gobyxsKX19aWYoIWRvY3VtZW50LndlYmtpdEhpZGRlbil7YihnKX1lbHNle3ZhciBhPWZhbHNlO2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIndlYmtpdHZpc2liaWxpdHljaGFuZ2UiLGZ1bmN0aW9uKCl7aWYoZG9jdW1lbnQud2Via2l0SGlkZGVufHxhKXtyZXR1cm59YT10cnVlO2Ioayl9KX19OwoKICAgICAgICAgICAgICAgIGlmIChtYWluID09PSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgdGhyb3cgJ2ludmFsaWQgaW5saW5lIHNjcmlwdCwgbWlzc2luZyBtYWluIGRlY2xhcmF0aW9uLic7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBtYWluKCIzMjE2NDg5Y2UxZmMwZTMyIik7CiAgICAgICAgICAgIH0pKCk7CiAgICA8L3NjcmlwdD4KCiAgICA8c2NyaXB0PiAgICAgICAgICAgIHlDb25maWcuY3NyZiA9IHsiRmFjZWJvb2tUb2tlblJlZnJlc2giOiAiMjkwNjk2NDMwMzkzNzVmZGUyZDNjOGVkMjlmZjZhMDM1NDY5NGZjZDBkNjMyMGQ5YjJjNmViZmZmYTg0MTBkZiJ9Owo8L3NjcmlwdD4KCiAgICA8c2NyaXB0PiAgICAgICAgICAgICAgICB3aW5kb3cueVBlcmZUaW1pbmdzLnB1c2goWyJib2R5OmVuZCIsIChuZXcgRGF0ZSgpKS5nZXRUaW1lKCldKTsKPC9zY3JpcHQ+CgogICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9InR0ZFVuaXZlcnNhbFBpeGVsVGFnMjkwZTgxNmE2OWU5NDM5Zjk2MGE5NTg4YmMyZmZiNTQiIHN0eWxlPSJkaXNwbGF5Om5vbmUiPgogICAgICAgICAgICAgICAgICAgICAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9qcy5hZHNydnIub3JnL3VwX2xvYWRlci4xLjEuMC5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgPHNjcmlwdCBub25jZT0iMzIxNjQ4OWMiPgogICAgICAgICAgICAoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICB2YXIgbWFpbiA9IG51bGw7CgogICAgICAgICAgICAgICAgdmFyIG1haW49ZnVuY3Rpb24oKXsoZnVuY3Rpb24oYil7aWYodHlwZW9mIFRURFVuaXZlcnNhbFBpeGVsQXBpPT09ImZ1bmN0aW9uIil7dmFyIGE9bmV3IFRURFVuaXZlcnNhbFBpeGVsQXBpKCk7YS5pbml0KCJpZ2NvdWFkIixbIm12aDRhaTEiXSwiaHR0cHM6Ly9pbnNpZ2h0LmFkc3J2ci5vcmcvdHJhY2svdXAiLCJ0dGRVbml2ZXJzYWxQaXhlbFRhZzI5MGU4MTZhNjllOTQzOWY5NjBhOTU4OGJjMmZmYjU0Iil9fSkodGhpcyl9OwoKICAgICAgICAgICAgICAgIGlmIChtYWluID09PSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgdGhyb3cgJ2ludmFsaWQgaW5saW5lIHNjcmlwdCwgbWlzc2luZyBtYWluIGRlY2xhcmF0aW9uLic7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBtYWluKCk7CiAgICAgICAgICAgIH0pKCk7CiAgICA8L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgPG5vc2NyaXB0PgogICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGhlaWdodD0iMSIgd2lkdGg9IjEiIHN0eWxlPSJkaXNwbGF5Om5vbmUiIHNyYz0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3RyP2lkPTEwMjAyOTgzNjg4MTQyOCZldj1QYWdlVmlldyZub3NjcmlwdD0xIi8+CiAgICAgICAgICAgICAgICAgICAgPC9ub3NjcmlwdD4KCiAgICAgICAgICAgICAgICAgICAgICAgIDxzY3JpcHQgbm9uY2U9IjMyMTY0ODljIj4KICAgICAgICAgICAgKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgdmFyIG1haW4gPSBudWxsOwoKICAgICAgICAgICAgICAgIHZhciBtYWluPWZ1bmN0aW9uKCl7dmFyIGM9TWF0aC5yYW5kb20oKSsiIjt2YXIgYj1jKjEwMDAwMDAwMDAwMDAwO2RvY3VtZW50LndyaXRlKCc8aWZyYW1lIHNyYz0iaHR0cHM6Ly82MzcyOTY4LmZscy5kb3VibGVjbGljay5uZXQvYWN0aXZpdHlpO3NyYz02MzcyOTY4O3R5cGU9aW52bWVkaWE7Y2F0PXFyM2hsc3FrO2RjX2xhdD07ZGNfcmRpZD07dGFnX2Zvcl9jaGlsZF9kaXJlY3RlZF90cmVhdG1lbnQ9O29yZD0nK2IrJz8iIHdpZHRoPSIxIiBoZWlnaHQ9IjEiIGZyYW1lYm9yZGVyPSIwIiBzdHlsZT0iZGlzcGxheTpub25lIj48L2lmcmFtZT4nKX07CgogICAgICAgICAgICAgICAgaWYgKG1haW4gPT09IG51bGwpIHsKICAgICAgICAgICAgICAgICAgICB0aHJvdyAnaW52YWxpZCBpbmxpbmUgc2NyaXB0LCBtaXNzaW5nIG1haW4gZGVjbGFyYXRpb24uJzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIG1haW4oKTsKICAgICAgICAgICAgfSkoKTsKICAgIDwvc2NyaXB0PgogICAgPG5vc2NyaXB0PgogICAgICAgIDxpZnJhbWUgc3JjPSJodHRwczovLzYzNzI5NjguZmxzLmRvdWJsZWNsaWNrLm5ldC9hY3Rpdml0eWk7c3JjPTYzNzI5Njg7dHlwZT1pbnZtZWRpYTtjYXQ9cXIzaGxzcWs7ZGNfbGF0PTtkY19yZGlkPTt0YWdfZm9yX2NoaWxkX2RpcmVjdGVkX3RyZWF0bWVudD07b3JkPTE/IiB3aWR0aD0iMSIgaGVpZ2h0PSIxIiBmcmFtZWJvcmRlcj0iMCIgc3R5bGU9ImRpc3BsYXk6bm9uZSI+PC9pZnJhbWU+CiAgICA8L25vc2NyaXB0PgoKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2NyaXB0IG5vbmNlPSIzMjE2NDg5YyI+CiAgICAgICAgICAgIChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIHZhciBtYWluID0gbnVsbDsKCiAgICAgICAgICAgICAgICB2YXIgbWFpbj1mdW5jdGlvbigpe3ZhciBhPW5ldyBJbWFnZSgxLDEpO2Eub25lcnJvcj1hLm9ubG9hZD1mdW5jdGlvbigpe2Eub25lcnJvcj1hLm9ubG9hZD1udWxsfTthLnNyYz1bIi8vc2VjdXJlLXVzLmltcndvcmxkd2lkZS5jb20vY2dpLWJpbi9tP2NpPXVzLTgwNDM3N2gmY2c9MCZjYz0xJnNpPSIsZXNjYXBlKHdpbmRvdy5sb2NhdGlvbi5ocmVmKSwiJnJwPSIsZXNjYXBlKGRvY3VtZW50LnJlZmVycmVyKSwiJnRzPWNvbXBhY3Qmcm5kPSIsKG5ldyBEYXRlKCkpLmdldFRpbWUoKV0uam9pbigiIil9OwoKICAgICAgICAgICAgICAgIGlmIChtYWluID09PSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgdGhyb3cgJ2ludmFsaWQgaW5saW5lIHNjcmlwdCwgbWlzc2luZyBtYWluIGRlY2xhcmF0aW9uLic7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBtYWluKCk7CiAgICAgICAgICAgIH0pKCk7CiAgICA8L3NjcmlwdD4KICAgICAgICA8bm9zY3JpcHQ+CiAgICAgICAgICAgIDxpbWcgc3JjPSIvL3NlY3VyZS11cy5pbXJ3b3JsZHdpZGUuY29tL2NnaS1iaW4vbT9jaT11cy04MDQzNzdoJmFtcDtjZz0wJmFtcDtjYz0xJmFtcDt0cz1ub3NjcmlwdCIgd2lkdGg9IjEiIGhlaWdodD0iMSIgYWx0PSIiPgogICAgICAgIDwvbm9zY3JpcHQ+CgoKICAgIDwvYm9keT4KPC9odG1sPg==
  recorded_at: Wed, 26 Oct 2022 15:11:44 GMT
recorded_with: VCR 6.1.0
