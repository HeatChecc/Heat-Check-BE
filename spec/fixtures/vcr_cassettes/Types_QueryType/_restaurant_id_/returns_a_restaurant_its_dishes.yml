---
http_interactions:
- request:
    method: get
    uri: https://www.yelp.com/menu/noodles-express-denver
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - text/html; charset=UTF-8
      Server:
      - envoy
      X-Node:
      - www_all
      - yelp-main-main--uswest2-f48777566-z59sr
      X-B3-Sampled:
      - '0'
      Link:
      - https://s3-media0.fl.yelpcdn.com; rel=preconnect
      - https://www.google-analytics.com; rel=preconnect
      Content-Security-Policy:
      - 'report-uri https://www.yelp.com/csp_block?id=fb8df14631f2e204&page=enforced_by_default_directives&policy_hash=4a31667603ab2e38c60aeeb09daa5097&site=www&timestamp=1666746430;
        object-src ''self''; base-uri ''self'' https://*.yelpcdn.com https://*.adsrvr.org
        https://6372968.fls.doubleclick.net; font-src ''self'' data: https:'
      X-Zipkin-Span-Id:
      - 5939dac15eee0294
      X-Routing-Service:
      - routing-main--uswest2-795c4bc4c5-xcbdz; site=www
      X-Zipkin-Id:
      - 9aa0c4011c00a09b
      X-Content-Type-Options:
      - nosniff
      Pragma:
      - no-cache
      Content-Security-Policy-Report-Only:
      - 'report-uri https://www.yelp.com/csp_report_only?id=fb8df14631f2e204&page=csp_report_frame_directives%2Cfull_site_ssl_csp_report_directives&policy_hash=41d0c45536d2a082f11d1cd0e00fde7f&site=www&timestamp=1666746430;
        frame-ancestors ''self'' https://*.yelp.com; default-src https:; img-src https:
        data: blob:; script-src https: data: ''unsafe-inline'' ''unsafe-eval'' blob:;
        style-src https: ''unsafe-inline'' data:; font-src data: https:; child-src
        https: yelp-webview://* yelp://* data:; object-src ''none''; worker-src blob:
        https:; base-uri ''self''; form-action https:'
      Set-Cookie:
      - bse=b6d5ffd95c4c4ef790b514e1aec5b2a5; Domain=.yelp.com; Path=/; HttpOnly
      - hl=en_US; Domain=.yelp.com; Max-Age=630720000; Path=/; expires=Tue, 21-Oct-2042
        01:07:10 GMT
      - pid=; Domain=.yelp.com; Max-Age=0; Path=/; expires=Wed, 31-Dec-97 23:59:59
        GMT
      - wdi=1|B5E8C3564CA81B46|0x1.8d6220f8665aep+30|5a44d013a3a73d85; Domain=.yelp.com;
        Path=/; Max-Age=31536000; Expires=Thu, 26 Oct 2023 01:07:10 GMT; HttpOnly;
        SameSite=Lax
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Cloudmap:
      - routing_uswest2
      X-Mode:
      - ro
      X-Proxied:
      - 10-69-126-17-uswest2aprod
      X-Extlb:
      - 10-69-126-17-uswest2aprod
      Cache-Control:
      - max-age=0, no-store, private, no-transform
      Accept-Ranges:
      - bytes
      Date:
      - Wed, 26 Oct 2022 01:07:10 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-den8269-DEN
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1666746430.073453,VS0,VE425
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 26 Oct 2022 01:07:10 GMT
- request:
    method: get
    uri: https://api.yelp.com/v3/businesses/Sk89ZllCbWVqA4M_MoJ7Lg
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer <yelp_token>
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Server:
      - envoy
      X-Routing-Service:
      - routing-main--uswest2-795c4bc4c5-cf9bv; site=public_api_v3
      X-B3-Sampled:
      - '0'
      Ratelimit-Dailylimit:
      - '5000'
      Ratelimit-Remaining:
      - '4897'
      X-Zipkin-Id:
      - 3d2aa7042c0fda25
      Ratelimit-Resettime:
      - '2022-10-27T00:00:00+00:00'
      X-Cloudmap:
      - routing_uswest2
      X-Mode:
      - ro
      X-Proxied:
      - 10-69-152-12-uswest2bprod
      X-Extlb:
      - 10-69-152-12-uswest2bprod
      Cache-Control:
      - max-age=0, no-store, private, no-transform
      Accept-Ranges:
      - bytes
      Date:
      - Wed, 26 Oct 2022 01:08:33 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-den8279-DEN
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: '{"id": "Sk89ZllCbWVqA4M_MoJ7Lg", "alias": "noodles-express-denver",
        "name": "Noodles Express", "image_url": "https://s3-media2.fl.yelpcdn.com/bphoto/dgayoTjtDbOqndnV-PRszg/o.jpg",
        "is_claimed": true, "is_closed": false, "url": "https://www.yelp.com/biz/noodles-express-denver?adjust_creative=BcjdOZ9pkVL_4m4EoK-Vvw&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_lookup&utm_source=BcjdOZ9pkVL_4m4EoK-Vvw",
        "phone": "+13037368818", "display_phone": "(303) 736-8818", "review_count":
        108, "categories": [{"alias": "noodles", "title": "Noodles"}, {"alias": "szechuan",
        "title": "Szechuan"}], "rating": 4.5, "location": {"address1": "703 S Colorado
        Blvd", "address2": "", "address3": null, "city": "Denver", "zip_code": "80246",
        "country": "US", "state": "CO", "display_address": ["703 S Colorado Blvd",
        "Denver, CO 80246"], "cross_streets": ""}, "coordinates": {"latitude": 39.70269,
        "longitude": -104.94143}, "photos": ["https://s3-media2.fl.yelpcdn.com/bphoto/dgayoTjtDbOqndnV-PRszg/o.jpg",
        "https://s3-media4.fl.yelpcdn.com/bphoto/gKgTIg2vbkgwW3rPXFlwAQ/o.jpg", "https://s3-media2.fl.yelpcdn.com/bphoto/jmLZnnYEij_IJv8z84ULng/o.jpg"],
        "price": "$$", "hours": [{"open": [{"is_overnight": false, "start": "1100",
        "end": "1500", "day": 2}, {"is_overnight": false, "start": "1600", "end":
        "2030", "day": 2}, {"is_overnight": false, "start": "1100", "end": "1500",
        "day": 3}, {"is_overnight": false, "start": "1600", "end": "2030", "day":
        3}, {"is_overnight": false, "start": "1100", "end": "1500", "day": 4}, {"is_overnight":
        false, "start": "1600", "end": "2030", "day": 4}, {"is_overnight": false,
        "start": "1100", "end": "1500", "day": 5}, {"is_overnight": false, "start":
        "1600", "end": "2030", "day": 5}, {"is_overnight": false, "start": "1100",
        "end": "1500", "day": 6}, {"is_overnight": false, "start": "1600", "end":
        "2030", "day": 6}], "hours_type": "REGULAR", "is_open_now": false}], "transactions":
        ["delivery", "pickup"]}'
  recorded_at: Wed, 26 Oct 2022 01:08:33 GMT
- request:
    method: get
    uri: https://api.yelp.com/v3/businesses/Sk89ZllCbWVqA4M_MoJ7Lg
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer <yelp_token>
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - application/json
      Server:
      - envoy
      X-Routing-Service:
      - routing-main--uswest2-795c4bc4c5-rc4db; site=public_api_v3
      Ratelimit-Dailylimit:
      - '5000'
      Ratelimit-Remaining:
      - '4896'
      X-B3-Sampled:
      - '0'
      Ratelimit-Resettime:
      - '2022-10-27T00:00:00+00:00'
      X-Zipkin-Id:
      - dfc9ac491c4bd1e8
      X-Cloudmap:
      - routing_uswest2
      X-Mode:
      - ro
      X-Proxied:
      - 10-69-152-12-uswest2bprod
      X-Extlb:
      - 10-69-152-12-uswest2bprod
      Cache-Control:
      - max-age=0, no-store, private, no-transform
      Accept-Ranges:
      - bytes
      Date:
      - Wed, 26 Oct 2022 01:08:34 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-den8278-DEN
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: '{"id": "Sk89ZllCbWVqA4M_MoJ7Lg", "alias": "noodles-express-denver",
        "name": "Noodles Express", "image_url": "https://s3-media2.fl.yelpcdn.com/bphoto/dgayoTjtDbOqndnV-PRszg/o.jpg",
        "is_claimed": true, "is_closed": false, "url": "https://www.yelp.com/biz/noodles-express-denver?adjust_creative=BcjdOZ9pkVL_4m4EoK-Vvw&utm_campaign=yelp_api_v3&utm_medium=api_v3_business_lookup&utm_source=BcjdOZ9pkVL_4m4EoK-Vvw",
        "phone": "+13037368818", "display_phone": "(303) 736-8818", "review_count":
        108, "categories": [{"alias": "noodles", "title": "Noodles"}, {"alias": "szechuan",
        "title": "Szechuan"}], "rating": 4.5, "location": {"address1": "703 S Colorado
        Blvd", "address2": "", "address3": null, "city": "Denver", "zip_code": "80246",
        "country": "US", "state": "CO", "display_address": ["703 S Colorado Blvd",
        "Denver, CO 80246"], "cross_streets": ""}, "coordinates": {"latitude": 39.70269,
        "longitude": -104.94143}, "photos": ["https://s3-media2.fl.yelpcdn.com/bphoto/dgayoTjtDbOqndnV-PRszg/o.jpg",
        "https://s3-media4.fl.yelpcdn.com/bphoto/gKgTIg2vbkgwW3rPXFlwAQ/o.jpg", "https://s3-media2.fl.yelpcdn.com/bphoto/jmLZnnYEij_IJv8z84ULng/o.jpg"],
        "price": "$$", "hours": [{"open": [{"is_overnight": false, "start": "1100",
        "end": "1500", "day": 2}, {"is_overnight": false, "start": "1600", "end":
        "2030", "day": 2}, {"is_overnight": false, "start": "1100", "end": "1500",
        "day": 3}, {"is_overnight": false, "start": "1600", "end": "2030", "day":
        3}, {"is_overnight": false, "start": "1100", "end": "1500", "day": 4}, {"is_overnight":
        false, "start": "1600", "end": "2030", "day": 4}, {"is_overnight": false,
        "start": "1100", "end": "1500", "day": 5}, {"is_overnight": false, "start":
        "1600", "end": "2030", "day": 5}, {"is_overnight": false, "start": "1100",
        "end": "1500", "day": 6}, {"is_overnight": false, "start": "1600", "end":
        "2030", "day": 6}], "hours_type": "REGULAR", "is_open_now": false}], "transactions":
        ["pickup", "delivery"]}'
  recorded_at: Wed, 26 Oct 2022 01:08:34 GMT
- request:
    method: get
    uri: https://www.yelp.com/menu/noodles-express-denver
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - text/html; charset=UTF-8
      X-Node:
      - www_all
      - yelp-main-main--uswest2-f48777566-zlq99
      Pragma:
      - no-cache
      Content-Security-Policy-Report-Only:
      - 'report-uri https://www.yelp.com/csp_report_only?id=7d335667d7241982&page=csp_report_frame_directives%2Cfull_site_ssl_csp_report_directives&policy_hash=41d0c45536d2a082f11d1cd0e00fde7f&site=www&timestamp=1666746514;
        frame-ancestors ''self'' https://*.yelp.com; default-src https:; img-src https:
        data: blob:; script-src https: data: ''unsafe-inline'' ''unsafe-eval'' blob:;
        style-src https: ''unsafe-inline'' data:; font-src data: https:; child-src
        https: yelp-webview://* yelp://* data:; object-src ''none''; worker-src blob:
        https:; base-uri ''self''; form-action https:'
      Content-Security-Policy:
      - 'report-uri https://www.yelp.com/csp_block?id=7d335667d7241982&page=enforced_by_default_directives&policy_hash=4a31667603ab2e38c60aeeb09daa5097&site=www&timestamp=1666746514;
        object-src ''self''; base-uri ''self'' https://*.yelpcdn.com https://*.adsrvr.org
        https://6372968.fls.doubleclick.net; font-src ''self'' data: https:'
      X-B3-Sampled:
      - '0'
      Server:
      - envoy
      Link:
      - https://s3-media0.fl.yelpcdn.com; rel=preconnect
      - https://www.google-analytics.com; rel=preconnect
      X-Zipkin-Span-Id:
      - be87a31db515e66f
      X-Zipkin-Id:
      - 79e32e784e69a312
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Set-Cookie:
      - bse=f8cdb0f428614b97a67ed93e60f7b303; Domain=.yelp.com; Path=/; HttpOnly
      - hl=en_US; Domain=.yelp.com; Max-Age=630720000; Path=/; expires=Tue, 21-Oct-2042
        01:08:34 GMT
      - pid=; Domain=.yelp.com; Max-Age=0; Path=/; expires=Wed, 31-Dec-97 23:59:59
        GMT
      - wdi=1|EC8320B599F57F35|0x1.8d622249722b8p+30|1a2f574cc7a22cbe; Domain=.yelp.com;
        Path=/; Max-Age=31536000; Expires=Thu, 26 Oct 2023 01:08:34 GMT; HttpOnly;
        SameSite=Lax
      X-Routing-Service:
      - routing-main--uswest2-795c4bc4c5-mggk7; site=www
      X-Content-Type-Options:
      - nosniff
      X-Cloudmap:
      - routing_uswest2
      X-Mode:
      - ro
      X-Proxied:
      - 10-69-69-73-uswest2aprod
      X-Extlb:
      - 10-69-69-73-uswest2aprod
      Cache-Control:
      - max-age=0, no-store, private, no-transform
      Accept-Ranges:
      - bytes
      Date:
      - Wed, 26 Oct 2022 01:08:34 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-den8264-DEN
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1666746514.335162,VS0,VE628
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 26 Oct 2022 01:08:34 GMT
recorded_with: VCR 6.1.0
