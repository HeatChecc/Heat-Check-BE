---
http_interactions:
- request:
    method: get
    uri: https://www.yelp.com/menu/spinellis-market-denver-3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - text/html; charset=UTF-8
      X-B3-Sampled:
      - '0'
      X-Node:
      - www_all
      - yelp-main-main--uswest2-79bf74d9f5-nbsd5
      X-Routing-Service:
      - routing-canary--uswest2-5fc8fc4bc7-cvjzl; site=www
      X-Zipkin-Id:
      - 521e7fa1ceb0502c
      Pragma:
      - no-cache
      Link:
      - https://s3-media0.fl.yelpcdn.com; rel=preconnect
      - https://www.google-analytics.com; rel=preconnect
      Content-Security-Policy-Report-Only:
      - 'report-uri https://www.yelp.com/csp_report_only?id=bb3c7db63c19442d&page=csp_report_frame_directives%2Cfull_site_ssl_csp_report_directives&policy_hash=41d0c45536d2a082f11d1cd0e00fde7f&site=www&timestamp=1667519541;
        frame-ancestors ''self'' https://*.yelp.com; default-src https:; img-src https:
        data: blob:; script-src https: data: ''unsafe-inline'' ''unsafe-eval'' blob:;
        style-src https: ''unsafe-inline'' data:; font-src data: https:; child-src
        https: yelp-webview://* yelp://* data:; object-src ''none''; worker-src blob:
        https:; base-uri ''self''; form-action https:'
      Content-Security-Policy:
      - 'report-uri https://www.yelp.com/csp_block?id=bb3c7db63c19442d&page=enforced_by_default_directives&policy_hash=4a31667603ab2e38c60aeeb09daa5097&site=www&timestamp=1667519541;
        object-src ''self''; base-uri ''self'' https://*.yelpcdn.com https://*.adsrvr.org
        https://6372968.fls.doubleclick.net; font-src ''self'' data: https:'
      Server:
      - envoy
      X-Content-Type-Options:
      - nosniff
      Set-Cookie:
      - bse=709d6185431a46e988b9acd1314dbe64; Domain=.yelp.com; Path=/; HttpOnly
      - hl=en_US; Domain=.yelp.com; Max-Age=630720000; Path=/; expires=Wed, 29-Oct-2042
        23:52:21 GMT
      - pid=; Domain=.yelp.com; Max-Age=0; Path=/; expires=Wed, 31-Dec-97 23:59:59
        GMT
      - wdi=1|63134A7829EBF908|0x1.8d9150d6136acp+30|b6a81fc89fdd8f77; Domain=.yelp.com;
        Path=/; Max-Age=31536000; Expires=Fri, 03 Nov 2023 23:52:21 GMT; HttpOnly;
        SameSite=Lax
      X-Zipkin-Span-Id:
      - 973a1a8a2f8a8d7b
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Cloudmap:
      - routing_uswest2
      X-Mode:
      - ro
      X-Proxied:
      - 10-69-69-73-uswest2aprod
      X-Extlb:
      - 10-69-69-73-uswest2aprod
      Cache-Control:
      - max-age=0, no-store, private, no-transform
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 03 Nov 2022 23:52:21 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-den8271-DEN
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1667519541.469650,VS0,VE501
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 03 Nov 2022 23:52:22 GMT
- request:
    method: get
    uri: https://www.yelp.com/menu/spinellis-market-denver-3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - text/html; charset=UTF-8
      X-Zipkin-Span-Id:
      - c1e597ac5d9cf397
      X-Content-Type-Options:
      - nosniff
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Routing-Service:
      - routing-main--uswest2-689dcfd8f7-p58mx; site=www
      Pragma:
      - no-cache
      X-Zipkin-Id:
      - 7cc1d4ada5876e23
      Set-Cookie:
      - bse=3e8226d50a0e4d5989547af7f0614901; Domain=.yelp.com; Path=/; HttpOnly
      - hl=en_US; Domain=.yelp.com; Max-Age=630720000; Path=/; expires=Wed, 29-Oct-2042
        23:52:22 GMT
      - pid=; Domain=.yelp.com; Max-Age=0; Path=/; expires=Wed, 31-Dec-97 23:59:59
        GMT
      - wdi=1|EFA98AAD5B2189A2|0x1.8d9150d88b8e1p+30|52a50e79803498fb; Domain=.yelp.com;
        Path=/; Max-Age=31536000; Expires=Fri, 03 Nov 2023 23:52:22 GMT; HttpOnly;
        SameSite=Lax
      Content-Security-Policy:
      - 'report-uri https://www.yelp.com/csp_block?id=00630af0feb91111&page=enforced_by_default_directives&policy_hash=4a31667603ab2e38c60aeeb09daa5097&site=www&timestamp=1667519542;
        object-src ''self''; base-uri ''self'' https://*.yelpcdn.com https://*.adsrvr.org
        https://6372968.fls.doubleclick.net; font-src ''self'' data: https:'
      Link:
      - https://s3-media0.fl.yelpcdn.com; rel=preconnect
      - https://www.google-analytics.com; rel=preconnect
      X-B3-Sampled:
      - '0'
      X-Node:
      - www_all
      - yelp-main-main--uswest2-79bf74d9f5-ml9w2
      Content-Security-Policy-Report-Only:
      - 'report-uri https://www.yelp.com/csp_report_only?id=00630af0feb91111&page=csp_report_frame_directives%2Cfull_site_ssl_csp_report_directives&policy_hash=41d0c45536d2a082f11d1cd0e00fde7f&site=www&timestamp=1667519542;
        frame-ancestors ''self'' https://*.yelp.com; default-src https:; img-src https:
        data: blob:; script-src https: data: ''unsafe-inline'' ''unsafe-eval'' blob:;
        style-src https: ''unsafe-inline'' data:; font-src data: https:; child-src
        https: yelp-webview://* yelp://* data:; object-src ''none''; worker-src blob:
        https:; base-uri ''self''; form-action https:'
      Server:
      - envoy
      X-Cloudmap:
      - routing_uswest2
      X-Mode:
      - ro
      X-Proxied:
      - 10-69-69-73-uswest2aprod
      X-Extlb:
      - 10-69-69-73-uswest2aprod
      Cache-Control:
      - max-age=0, no-store, private, no-transform
      Accept-Ranges:
      - bytes
      Date:
      - Thu, 03 Nov 2022 23:52:22 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-den8242-DEN
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1667519542.107436,VS0,VE387
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 03 Nov 2022 23:52:22 GMT
recorded_with: VCR 6.1.0
