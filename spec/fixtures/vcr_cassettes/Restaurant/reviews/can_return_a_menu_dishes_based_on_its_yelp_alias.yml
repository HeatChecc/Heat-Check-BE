---
http_interactions:
- request:
    method: get
    uri: https://www.yelp.com/menu/spinellis-market-denver-3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - text/html; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      Pragma:
      - no-cache
      X-Routing-Service:
      - routing-main--uswest2-795c4bc4c5-pswrn; site=www
      Link:
      - https://s3-media0.fl.yelpcdn.com; rel=preconnect
      - https://www.google-analytics.com; rel=preconnect
      Content-Security-Policy:
      - 'report-uri https://www.yelp.com/csp_block?id=316c0fd4eeee0a8e&page=enforced_by_default_directives&policy_hash=4a31667603ab2e38c60aeeb09daa5097&site=www&timestamp=1666796315;
        object-src ''self''; base-uri ''self'' https://*.yelpcdn.com https://*.adsrvr.org
        https://6372968.fls.doubleclick.net; font-src ''self'' data: https:'
      Server:
      - envoy
      X-Zipkin-Id:
      - 3b1eeb7791f931dc
      Set-Cookie:
      - bse=216cf46ce895481daa08c890bdceb404; Domain=.yelp.com; Path=/; HttpOnly
      - hl=en_US; Domain=.yelp.com; Max-Age=630720000; Path=/; expires=Tue, 21-Oct-2042
        14:58:35 GMT
      - pid=; Domain=.yelp.com; Max-Age=0; Path=/; expires=Wed, 31-Dec-97 23:59:59
        GMT
      - wdi=1|7E3D78A50866052C|0x1.8d652c6c38bdfp+30|ce4a693e780fc743; Domain=.yelp.com;
        Path=/; Max-Age=31536000; Expires=Thu, 26 Oct 2023 14:58:35 GMT; HttpOnly;
        SameSite=Lax
      X-Node:
      - www_all
      - yelp-main-main--uswest2-84db5f5c56-kfhl6
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-B3-Sampled:
      - '0'
      Content-Security-Policy-Report-Only:
      - 'report-uri https://www.yelp.com/csp_report_only?id=316c0fd4eeee0a8e&page=csp_report_frame_directives%2Cfull_site_ssl_csp_report_directives&policy_hash=41d0c45536d2a082f11d1cd0e00fde7f&site=www&timestamp=1666796315;
        frame-ancestors ''self'' https://*.yelp.com; default-src https:; img-src https:
        data: blob:; script-src https: data: ''unsafe-inline'' ''unsafe-eval'' blob:;
        style-src https: ''unsafe-inline'' data:; font-src data: https:; child-src
        https: yelp-webview://* yelp://* data:; object-src ''none''; worker-src blob:
        https:; base-uri ''self''; form-action https:'
      X-Zipkin-Span-Id:
      - 0a880a5a72dcc6ba
      X-Cloudmap:
      - routing_uswest2
      X-Mode:
      - ro
      X-Proxied:
      - 10-69-126-17-uswest2aprod
      X-Extlb:
      - 10-69-126-17-uswest2aprod
      Cache-Control:
      - max-age=0, no-store, private, no-transform
      Accept-Ranges:
      - bytes
      Date:
      - Wed, 26 Oct 2022 14:58:35 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-den8247-DEN
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1666796315.027295,VS0,VE532
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 26 Oct 2022 14:58:35 GMT
- request:
    method: get
    uri: https://www.yelp.com/menu/spinellis-market-denver-3
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.6.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Type:
      - text/html; charset=UTF-8
      X-Zipkin-Span-Id:
      - 5693d612c2af19b1
      X-Content-Type-Options:
      - nosniff
      X-Routing-Service:
      - routing-main--uswest2-795c4bc4c5-nv5pw; site=www
      Pragma:
      - no-cache
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Link:
      - https://s3-media0.fl.yelpcdn.com; rel=preconnect
      - https://www.google-analytics.com; rel=preconnect
      Set-Cookie:
      - bse=0ed5dd673ccb4d0bbca76deea7c47d18; Domain=.yelp.com; Path=/; HttpOnly
      - hl=en_US; Domain=.yelp.com; Max-Age=630720000; Path=/; expires=Tue, 21-Oct-2042
        14:58:36 GMT
      - pid=; Domain=.yelp.com; Max-Age=0; Path=/; expires=Wed, 31-Dec-97 23:59:59
        GMT
      - wdi=1|83119F125F21E11B|0x1.8d652c6eed795p+30|c7520980f2a6cb06; Domain=.yelp.com;
        Path=/; Max-Age=31536000; Expires=Thu, 26 Oct 2023 14:58:36 GMT; HttpOnly;
        SameSite=Lax
      X-B3-Sampled:
      - '0'
      Content-Security-Policy-Report-Only:
      - 'report-uri https://www.yelp.com/csp_report_only?id=0c3d481b8537bf12&page=csp_report_frame_directives%2Cfull_site_ssl_csp_report_directives&policy_hash=41d0c45536d2a082f11d1cd0e00fde7f&site=www&timestamp=1666796315;
        frame-ancestors ''self'' https://*.yelp.com; default-src https:; img-src https:
        data: blob:; script-src https: data: ''unsafe-inline'' ''unsafe-eval'' blob:;
        style-src https: ''unsafe-inline'' data:; font-src data: https:; child-src
        https: yelp-webview://* yelp://* data:; object-src ''none''; worker-src blob:
        https:; base-uri ''self''; form-action https:'
      X-Node:
      - www_all
      - yelp-main-main--uswest2-84db5f5c56-jcgp6
      Server:
      - envoy
      Content-Security-Policy:
      - 'report-uri https://www.yelp.com/csp_block?id=0c3d481b8537bf12&page=enforced_by_default_directives&policy_hash=4a31667603ab2e38c60aeeb09daa5097&site=www&timestamp=1666796315;
        object-src ''self''; base-uri ''self'' https://*.yelpcdn.com https://*.adsrvr.org
        https://6372968.fls.doubleclick.net; font-src ''self'' data: https:'
      X-Zipkin-Id:
      - 47a059bf5bb6e776
      X-Cloudmap:
      - routing_uswest2
      X-Mode:
      - ro
      X-Proxied:
      - 10-69-126-17-uswest2aprod
      X-Extlb:
      - 10-69-126-17-uswest2aprod
      Cache-Control:
      - max-age=0, no-store, private, no-transform
      Accept-Ranges:
      - bytes
      Date:
      - Wed, 26 Oct 2022 14:58:36 GMT
      Via:
      - 1.1 varnish
      X-Served-By:
      - cache-den8228-DEN
      X-Cache:
      - MISS
      X-Cache-Hits:
      - '0'
      X-Timer:
      - S1666796316.702444,VS0,VE397
      Vary:
      - Accept-Encoding
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 26 Oct 2022 14:58:36 GMT
recorded_with: VCR 6.1.0
